{
    "abs": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/abs\">abs</a></h1><p class=\"summary\">Returns the absolute value of the argument.</p><p><code>float abs(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nabs (-2.6)=2.6\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "acos": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/acos\">acos</a></h1><p class=\"summary\">Returns the arc-cosine of the argument.</p><p><code>float acos(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nacos (0)=90\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "angvel": {
        "argnames": [
            "rot1",
            "rot2",
            "time"
        ],
        "args": [
            "vector",
            "vector",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/angvel\">angvel</a></h1><p class=\"summary\">Returns the angular velocity required to\nrotate an object from one orientation to another in a certain period of\ntime.</p><p><code>vector angvel(vector rot1, vector rot2, float time)</code></p>\n\n\n\n<p>The original rotation is specified in rot1, and the destination\nrotation in rot2. These values can be either a vector3 containing euler\nrotation angles in degrees, or a vector4 containing a quaternion. The\nreturned angular velocity value is expressed in degrees per second, and\nrepresents the shortest path between the two orientations.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nangvel(vector3(0, 0, 0), vector3(90, 0, 0), 1)[0]=90\n\n</div>\n</div>\n\n\n</div>",
        "return": "vector"
    },
    "arclen": {
        "argnames": [
            "surface_node",
            "prim_num",
            "ustart",
            "ustop"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/arclen\">arclen</a></h1><p class=\"summary\">Returns the arc length of a curve between two U positions.</p><p><code>float arclen(string surface_node, float prim_num, float ustart, float ustop)</code></p>\n\n\n\n<p><code>ustart</code> and <code>ustop</code> are unit values, defined in the\n<code>[0, 1]</code> interval.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>the primitive must be either a NURBS, Bezier, or Polygon curve.</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\narclen(\"/obj/geo1/model1\", 12, 0, 1)\n\n</div>\n<p>Computes the length of the entire curve whose index is 12.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/surflen\">surflen()</a><div class=\"related-summary\">Returns the length of the 3D curve between two points on a surface.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/normal\">normal()</a><div class=\"related-summary\">Returns the components of the surface normal specific UV coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/curvature\">curvature()</a><div class=\"related-summary\">Returns the curvature of the surface at the given UV coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv()</a><div class=\"related-summary\">Converts real UV to unit UV.</div></p></div>",
        "return": "float"
    },
    "arg": {
        "argnames": [
            "line",
            "argNum"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/arg\">arg</a></h1><p class=\"summary\">Returns an argument from a list of HScript-style arguments.</p><p><code>string arg(string line, float argNum)</code></p>\n\n\n\n<p>This function extracts an argument from a line. The example below will\nextract the time out of the date string returned by the system function.\narg is useful for extracting tokens from space delimited strings.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\narg(\"This returns foobar from this sentence\", 2)\n\n</div>\n<p>Returns the third word from the sentence: foobar.</p>\n<div class=\"code-container\">\narg (system(\"date\"), 3)\n\n</div>\n<p>Returns the the fourth word from the date command. This is usually\n    the system time, ie: 15:26:31.</p>\n<div class=\"code-container\">\narg(\"Quoting 'makes this one arg'\", 1)\n\n</div>\n<p>Returns \"makes this one arg\" as the quoting has transformed that\n    into a single token. Note the quotes are not present in the output.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/argc\">argc()</a><div class=\"related-summary\">Returns the number of arguments in an HScript-style list of arguments.</div></p></div>",
        "return": "string"
    },
    "argc": {
        "argnames": [
            "line"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/argc\">argc</a></h1><p class=\"summary\">Returns the number of arguments in an HScript-style list of arguments.</p><p><code>float argc(string line)</code></p>\n\n\n\n<p>Standard parsing is done, no variable expansion\nis done on the line.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nargc(\"This has four arguments\")\n\n</div>\n<p>Returns 4, as that is the number of space delimited words.</p>\n<div class=\"code-container\">\nargc(\"Quoting 'makes this one arg'\")\n\n</div>\n<p>Returns two as the quotes cause the last four words to count as a\n    single word.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/arg\">arg()</a><div class=\"related-summary\">Returns an argument from a list of HScript-style arguments.</div></p></div>",
        "return": "float"
    },
    "asin": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/asin\">asin</a></h1><p class=\"summary\">Returns the arc-sine of the argument.</p><p><code>float asin(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nasin (.866025)=60\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "atan": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/atan\">atan</a></h1><p class=\"summary\">Returns the arc-tangent of the argument.</p><p><code>float atan(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\natan (1.73205)=60\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/atan2\">atan2()</a><div class=\"related-summary\">Returns the arc-tangent of y/x.</div></p></div>",
        "return": "float"
    },
    "atan2": {
        "argnames": [
            "y",
            "x"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/atan2\">atan2</a></h1><p class=\"summary\">Returns the arc-tangent of <var>y</var>/<var>x</var>.</p><p><code>float atan2(float y, float x)</code></p>\n\n\n\n<p>This is more stable than <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/atan\" title=\"Returns the arc-tangent of the argument.\">atan()</a> since it\ncan use the signs of y and x to determine the quadrant the angle is in.\nIt also handles the case where x is zero correctly, returning 90 or -90.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\natan2(1, 0) = 90\n\n</div><div class=\"code-container\">\natan2(0, 1) = 0\n\n</div><div class=\"code-container\">\natan2(0, -1) = 180\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "atof": {
        "argnames": [
            "source"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/atof\">atof</a></h1><p class=\"summary\">Converts a string to a float.</p><p><code>float atof(string source)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "bbox": {
        "argnames": [
            "surface_node",
            "type"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/bbox\">bbox</a></h1><p class=\"summary\">Returns bounding box information for a surface node.</p><p><code>float bbox(string surface_node, float type)</code></p>\n\n\n\n<p>The <code>type</code>\ncan be one of D_XMIN, D_YMIN, D_ZMIN, D_XMAX, D_YMAX, D_ZMAX, D_XSIZE,\nD_YSIZE, or D_ZSIZE for the corresponding values of the bounding box.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/centroid\">centroid()</a><div class=\"related-summary\">Returns centroid information for a surface node.</div></p></div>",
        "return": "float"
    },
    "bezier": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/bezier\">bezier</a></h1><p class=\"summary\">Channel segment function: Bezier interpoloation spline</p><p><code>float bezier()</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/spline\">spline()</a><div class=\"related-summary\">Channel segment function: fits a curve to the keyframes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cubic\">cubic()</a><div class=\"related-summary\">Channel segment function: cubic spline.</div></p></div>",
        "return": "float"
    },
    "boneangle": {
        "argnames": [
            "bone1",
            "bone2"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/boneangle\">boneangle</a></h1><p class=\"summary\">Returns the angle at the joint between two bone objects.</p><p><code>float boneangle(string bone1, string bone2)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "ceil": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ceil\">ceil</a></h1><p class=\"summary\">Returns the smallest integer not less than the value passed in.</p><p><code>float ceil(float number)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/floor\">floor()</a><div class=\"related-summary\">Returns the largest integer not greater than a number.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/round\">round()</a><div class=\"related-summary\">Rounds a number to the nearest integer.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/int\">int()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/trunc\">trunc()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part, rounding towards 0.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/frac\">frac()</a><div class=\"related-summary\">Returns the fractional part of a floating-point number.</div></p></div>",
        "return": "float"
    },
    "centroid": {
        "argnames": [
            "surface_node",
            "type"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/centroid\">centroid</a></h1><p class=\"summary\">Returns centroid information for a surface node.</p><p><code>float centroid(string surface_node, float type)</code></p>\n\n\n\n<p>The <code>type</code> should\nbe one of <code>D_X</code>, <code>D_Y</code>, or <code>D_Z</code> for the corresponding components of the\ncentroid.</p>\n<div class=\"code-container\">\ncentroid(\"../sphere1\", D_X)\ncentroid(\"../sphere1\", D_Y)\ncentroid(\"../sphere1\", D_Z)\n</div>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>The centroid is the center of the bounding box of the points, not the average position of the points.</p>\n</div>\n</div>\n</div>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/bbox\">bbox()</a><div class=\"related-summary\">Returns bounding box information for a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/prim\">prim()</a><div class=\"related-summary\">Returns the value of a primitive attribute.</div></p></div>",
        "return": "float"
    },
    "ch": {
        "argnames": [
            "channel"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ch\">ch</a></h1><p class=\"summary\">Returns the value of a parameter.</p><p><code>float ch(string channel)</code></p>\n\n\n\n<h2 class=\"label heading\" id=\"overview\">\n            \n            Overview\n        </h2>\n<div class=\"content\" id=\"overview-body\">\n<p>The <code>ch</code> family of functions gets the value of a parameter. This lets you make the values of certain parameters automatically identical to or relative to the value of other parameters.</p>\n<p>For example, if you have two <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/obj/geo\" title=\"Container for the geometry operators (SOPs) that define a modeled\nobject.\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/OBJ/geo.svg\">[Image \ud83d\udd17]</a>Geometry object nodes</a> named <code>geo1</code> and <code>geo2</code>, you can make <code>geo2</code> always be 2 units higher than <code>geo</code> by setting <code>geo2</code>'s <strong class=\"ui\">Translate Y</strong> parameter to:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../geo1/ty\") + 2\n</code>\n</div>\n<p>Now when you move <code>geo1</code>, <code>geo2</code>'s Y position will always be 2 units higher.</p>\n<p>Channel references let you create custom <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../network/spare\" title=\"How to add extra parameters to an individual node.\">spare parameters</a> and <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../assets/_index\" title=\"Digital assets let you create reusable nodes and tools from existing networks.\">digital asset interfaces</a> and have them control other nodes, by using channel references to have the nodes inside the subnetwork/asset reference the \"interface\" parameters at the higher level.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"path-argument\">\n            \n            Path argument\n        </h2>\n<div class=\"content\" id=\"path-argument-body\">\n<p>The first argument to the channel functions is a string <em>path</em> to the parameter whose value you want to get.</p>\n<p>For parameters on the same node, you can just use the parameter\u2019s <em>internal name</em>. For example, in an object, you could make the object\u2019s X position always match the Y position by setting the <strong class=\"ui\">Translate Y</strong> to the expression:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"ty\")\n</code>\n</div>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item tip \">\nTip\n<div class=\"content\">\n<p>You can find the internal name of a parameter in the tooltip when you hover the mouse over the parameter in the parameter editor.</p>\n</div>\n</div>\n</div>\n<p>To get a parameter on a different node, you need to make a <em>path</em> to the parameter, similar to UNIX directory paths.</p>\n<p>For example, to reference the <code>ty</code> parameter of a node named <code>geo2</code> in the same network:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../geo2/ty\")\n</code>\n</div>\n<p>To reference the <code>tx</code> parameter of the parent network node:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../tx\")\n</code>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-numbers\">\n            \n            Getting numbers\n        </h2>\n<div class=\"content\" id=\"getting-numbers-body\">\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">ch(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the <em>floating point</em> value of the given parameter.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../font1/tx\")\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">chf(\"path\", frame_num)\n</code>\n\n<div class=\"content\">\n<p>Returns the floating point value of the given parameter, as computed at the given frame number.</p>\n<p>Getting a value from a future time requires <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../basics/cooking\">cooking</a> some or all of the scene up to that time, so this function is potentially expensive.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node from ten frames previous:</p>\n<div class=\"code-container\">\n<code class=\"line\">chf(\"../font1/text\", $F - 10)\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">cht(\"path\", seconds)\n</code>\n\n<div class=\"content\">\n<p>Returns the floating point value of the given parameter, as computed at the given time (in seconds).</p>\n<p>Getting a value from a future time requires <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../basics/cooking\">cooking</a> some or all of the scene up to that time, so this function is potentially expensive.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node from 2 seconds previous:</p>\n<div class=\"code-container\">\n<code class=\"line\">chf(\"../font1/text\", $T - 2)\n</code>\n</div></div>\n</li>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-strings\">\n            \n            Getting strings\n        </h2>\n<div class=\"content\" id=\"getting-strings-body\">\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">chs(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the <em>string</em> value of the given parameter.</p>\n<p>For example, to get the <strong class=\"ui\">Text</strong> of the <code>font1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">chs(\"../font1/text\")\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">chsraw(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the \"raw\" string value of the given parameter, without expanding quotes or variable names. For example, if the parameter contains an expression <code>$F - 10</code>, you will get the string <code>\"$F - 10\"</code> (instead of the computed value of the current frame minus ten).</p>\n</div>\n</li>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-a-node-path\">\n            \n            Getting a node path\n        </h2>\n<div class=\"content\" id=\"getting-a-node-path-body\">\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-ramp-values\">\n            \n            Getting ramp values\n        </h2>\n<div class=\"content\" id=\"getting-ramp-values-body\">\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chramp\" title=\"Returns the value of a ramp parameter at a specific position.\">chramp()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chrampf\" title=\"Returns the value of a ramp parameter at a specific position and frame.\">chrampf()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chrampt\" title=\"Returns the value of a ramp parameter at a specific position and time.\">chrampt()</a>.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"tips\">\n            \n            Tips\n        </h2>\n<div class=\"content\" id=\"tips-body\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\nYou can automatically create channel-references using the \"Copy\" and \"Paste reference\" commands on the parameter <a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/KEYS/RMB.svg\">[Image \ud83d\udd17]</a> right-click menu.\n</li>\n<li class=\"bullet \">\nSee <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../network/parms#link\">linking parameter values</a> for more information.\n</li>\n</ul>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chramp\">chramp()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chexist\">chexist()</a><div class=\"related-summary\">Returns 1 if the specified channel exists, 0 if it doesn\u2019t.</div></p></div>",
        "return": "float"
    },
    "chexist": {
        "argnames": [
            "channel_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chexist\">chexist</a></h1><p class=\"summary\">Returns 1 if the specified channel exists, 0 if it doesn\u2019t.</p><p><code>float chexist(string channel_name)</code></p>\n\n\n\n<p>The <code>chexist()</code> function determines whether an <em>animation channel</em> exists on the given parameter. This means it checks if the parameter is <em>animated</em>, not whether the parameter itself exists.</p>\n<p>To check if a parameter exists, you can use <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../hom/_index\" title=\"How to script Houdini using Python and the Houdini Object Model.\">python scripting</a>:</p>\n<div class=\"code-container\">\n<code class=\"line\">def parm_exist(parmpath):\n</code><code class=\"line\">\u00a0\u00a0\u00a0\u00a0nodepath, parmname = os.path.split(parmpath)\n</code><code class=\"line\">\u00a0\u00a0\u00a0\u00a0node = hou.node(nodepath)\n</code><code class=\"line\">\u00a0\u00a0\u00a0\u00a0return node.parmTuple(parmname) != None\n</code>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\n<code class=\"line\">echo `chexist(\"/obj/geo1/tx\")`\n</code>\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "chf": {
        "argnames": [
            "channel",
            "frame"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chf\">chf</a></h1><p class=\"summary\">Returns the value of a parameter.</p><p><code>float chf(string channel, float frame)</code></p>\n\n\n\n<h2 class=\"label heading\" id=\"overview\">\n            \n            Overview\n        </h2>\n<div class=\"content\" id=\"overview-body\">\n<p>The <code>ch</code> family of functions gets the value of a parameter. This lets you make the values of certain parameters automatically identical to or relative to the value of other parameters.</p>\n<p>For example, if you have two <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/obj/geo\" title=\"Container for the geometry operators (SOPs) that define a modeled\nobject.\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/OBJ/geo.svg\">[Image \ud83d\udd17]</a>Geometry object nodes</a> named <code>geo1</code> and <code>geo2</code>, you can make <code>geo2</code> always be 2 units higher than <code>geo</code> by setting <code>geo2</code>'s <strong class=\"ui\">Translate Y</strong> parameter to:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../geo1/ty\") + 2\n</code>\n</div>\n<p>Now when you move <code>geo1</code>, <code>geo2</code>'s Y position will always be 2 units higher.</p>\n<p>Channel references let you create custom <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../network/spare\" title=\"How to add extra parameters to an individual node.\">spare parameters</a> and <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../assets/_index\" title=\"Digital assets let you create reusable nodes and tools from existing networks.\">digital asset interfaces</a> and have them control other nodes, by using channel references to have the nodes inside the subnetwork/asset reference the \"interface\" parameters at the higher level.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"path-argument\">\n            \n            Path argument\n        </h2>\n<div class=\"content\" id=\"path-argument-body\">\n<p>The first argument to the channel functions is a string <em>path</em> to the parameter whose value you want to get.</p>\n<p>For parameters on the same node, you can just use the parameter\u2019s <em>internal name</em>. For example, in an object, you could make the object\u2019s X position always match the Y position by setting the <strong class=\"ui\">Translate Y</strong> to the expression:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"ty\")\n</code>\n</div>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item tip \">\nTip\n<div class=\"content\">\n<p>You can find the internal name of a parameter in the tooltip when you hover the mouse over the parameter in the parameter editor.</p>\n</div>\n</div>\n</div>\n<p>To get a parameter on a different node, you need to make a <em>path</em> to the parameter, similar to UNIX directory paths.</p>\n<p>For example, to reference the <code>ty</code> parameter of a node named <code>geo2</code> in the same network:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../geo2/ty\")\n</code>\n</div>\n<p>To reference the <code>tx</code> parameter of the parent network node:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../tx\")\n</code>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-numbers\">\n            \n            Getting numbers\n        </h2>\n<div class=\"content\" id=\"getting-numbers-body\">\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">ch(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the <em>floating point</em> value of the given parameter.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../font1/tx\")\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">chf(\"path\", frame_num)\n</code>\n\n<div class=\"content\">\n<p>Returns the floating point value of the given parameter, as computed at the given frame number.</p>\n<p>Getting a value from a future time requires <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../basics/cooking\">cooking</a> some or all of the scene up to that time, so this function is potentially expensive.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node from ten frames previous:</p>\n<div class=\"code-container\">\n<code class=\"line\">chf(\"../font1/text\", $F - 10)\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">cht(\"path\", seconds)\n</code>\n\n<div class=\"content\">\n<p>Returns the floating point value of the given parameter, as computed at the given time (in seconds).</p>\n<p>Getting a value from a future time requires <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../basics/cooking\">cooking</a> some or all of the scene up to that time, so this function is potentially expensive.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node from 2 seconds previous:</p>\n<div class=\"code-container\">\n<code class=\"line\">chf(\"../font1/text\", $T - 2)\n</code>\n</div></div>\n</li>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-strings\">\n            \n            Getting strings\n        </h2>\n<div class=\"content\" id=\"getting-strings-body\">\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">chs(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the <em>string</em> value of the given parameter.</p>\n<p>For example, to get the <strong class=\"ui\">Text</strong> of the <code>font1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">chs(\"../font1/text\")\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">chsraw(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the \"raw\" string value of the given parameter, without expanding quotes or variable names. For example, if the parameter contains an expression <code>$F - 10</code>, you will get the string <code>\"$F - 10\"</code> (instead of the computed value of the current frame minus ten).</p>\n</div>\n</li>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-a-node-path\">\n            \n            Getting a node path\n        </h2>\n<div class=\"content\" id=\"getting-a-node-path-body\">\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-ramp-values\">\n            \n            Getting ramp values\n        </h2>\n<div class=\"content\" id=\"getting-ramp-values-body\">\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chramp\" title=\"Returns the value of a ramp parameter at a specific position.\">chramp()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chrampf\" title=\"Returns the value of a ramp parameter at a specific position and frame.\">chrampf()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chrampt\" title=\"Returns the value of a ramp parameter at a specific position and time.\">chrampt()</a>.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"tips\">\n            \n            Tips\n        </h2>\n<div class=\"content\" id=\"tips-body\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\nYou can automatically create channel-references using the \"Copy\" and \"Paste reference\" commands on the parameter <a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/KEYS/RMB.svg\">[Image \ud83d\udd17]</a> right-click menu.\n</li>\n<li class=\"bullet \">\nSee <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../network/parms#link\">linking parameter values</a> for more information.\n</li>\n</ul>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chramp\">chramp()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chexist\">chexist()</a><div class=\"related-summary\">Returns 1 if the specified channel exists, 0 if it doesn\u2019t.</div></p></div>",
        "return": "float"
    },
    "chgroup": {
        "argnames": [
            "group_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chgroup\">chgroup</a></h1><p class=\"summary\">return a string containing all of the channels contained in\na group.</p><p><code>string chgroup(string group_name)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<p>This is useful in the command language for traversing\n    all channels in a group:</p>\n<div class=\"code-container\">\n% foreach channel ( `chgroup(\"group_name\")` ) % echo $channel is in group_name % end \n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "chop": {
        "argnames": [
            "channel"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chop\">chop</a></h1><p class=\"summary\">Evaluates a channel within a CHOP at the current time.</p><p><code>float chop(string channel)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchop(\"/ch/ch1/wave1/chan1\")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopi\">chopi()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a given sample point.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopt\">chopt()</a><div class=\"related-summary\">Returns the value of a channel within a CHOP at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopf\">chopf()</a><div class=\"related-summary\">Evaluates a channel within a CHOP with at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopstr\">chopstr()</a><div class=\"related-summary\">Returns the string value of a channel within a CHOP at the current time.</div></p></div>",
        "return": "float"
    },
    "chopcf": {
        "argnames": [
            "CHOP",
            "channel_index",
            "frame"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopcf\">chopcf</a></h1><p class=\"summary\">Evaluates a channel within a CHOP at a given time.</p><p><code>float chopcf(string CHOP, float channel_index, float frame)</code></p>\n\n\n\n<p>Evaluates the channel at index <code>channel_index</code> within the specified\n<code>CHOP</code> at the specified <code>frame</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopcf(\"/ch/ch1/wave1\", 0, 11)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopf\">chopf()</a><div class=\"related-summary\">Evaluates a channel within a CHOP with at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopct\">chopct()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopci\">chopci()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a specified sample point.</div></p></div>",
        "return": "float"
    },
    "chopci": {
        "argnames": [
            "CHOP",
            "channel_index",
            "index"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopci\">chopci</a></h1><p class=\"summary\">Evaluates a channel within a CHOP at a specified sample point.</p><p><code>float chopci(string CHOP, float channel_index, float index)</code></p>\n\n\n\n<p>Evaluates the channel at index <code>channel_index</code> within the specified\n<code>CHOP</code> at the specified sample <code>index</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopci(\"/ch/ch1/wave1\", 0, 10)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopi\">chopi()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a given sample point.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopct\">chopct()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopcf\">chopcf()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a given time.</div></p></div>",
        "return": "float"
    },
    "chopct": {
        "argnames": [
            "CHOP",
            "channel_index",
            "time"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopct\">chopct</a></h1><p class=\"summary\">Evaluates a channel within a CHOP at a specified time.</p><p><code>float chopct(string CHOP, float channel_index, float time)</code></p>\n\n\n\n<p>Evaluates the channel at index <code>channel_index</code> within the specified\n<code>CHOP</code> at the specified <code>time</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopct(\"/ch/ch1/wave1\", 0, 0.5)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopt\">chopt()</a><div class=\"related-summary\">Returns the value of a channel within a CHOP at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopcf\">chopcf()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a given time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopci\">chopci()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a specified sample point.</div></p></div>",
        "return": "float"
    },
    "chope": {
        "argnames": [
            "CHOP"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chope\">chope</a></h1><p class=\"summary\">Returns the end index of the channels in a CHOP.</p><p><code>float chope(string CHOP)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchope(\"/ch/ch1/wave1\")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chops\">chops()</a><div class=\"related-summary\">Returns the start index of a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopl\">chopl()</a><div class=\"related-summary\">Returns the length of the channels in a CHOP, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopn\">chopn()</a><div class=\"related-summary\">Returns the number of data channels within a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopr\">chopr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP.</div></p></div>",
        "return": "float"
    },
    "chopf": {
        "argnames": [
            "channel",
            "frame"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopf\">chopf</a></h1><p class=\"summary\">Evaluates a channel within a CHOP with at a given frame.</p><p><code>float chopf(string channel, float frame)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopf(\"/ch/ch1/wave1/chan1\", 1)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopi\">chopi()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a given sample point.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopt\">chopt()</a><div class=\"related-summary\">Returns the value of a channel within a CHOP at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chop\">chop()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at the current time.</div></p></div>",
        "return": "float"
    },
    "chopi": {
        "argnames": [
            "channel",
            "index"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopi\">chopi</a></h1><p class=\"summary\">Evaluates a channel within a CHOP at a given sample point.</p><p><code>float chopi(string channel, float index)</code></p>\n\n\n\n<p>Evaluates the <code>channel</code> (within a CHOP) at the specified sample <code>index</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopi(\"/ch/ch1/wave1/chan1\", 10)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopf\">chopf()</a><div class=\"related-summary\">Evaluates a channel within a CHOP with at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopt\">chopt()</a><div class=\"related-summary\">Returns the value of a channel within a CHOP at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chop\">chop()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at the current time.</div></p></div>",
        "return": "float"
    },
    "chopl": {
        "argnames": [
            "CHOP"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopl\">chopl</a></h1><p class=\"summary\">Returns the length of the channels in a CHOP, in samples.</p><p><code>float chopl(string CHOP)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopl(\"/ch/ch1/wave1\")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chops\">chops()</a><div class=\"related-summary\">Returns the start index of a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chope\">chope()</a><div class=\"related-summary\">Returns the end index of the channels in a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopn\">chopn()</a><div class=\"related-summary\">Returns the number of data channels within a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopr\">chopr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP.</div></p></div>",
        "return": "float"
    },
    "chopn": {
        "argnames": [
            "CHOP"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopn\">chopn</a></h1><p class=\"summary\">Returns the number of data channels within a CHOP.</p><p><code>float chopn(string CHOP)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopn(\"/ch/ch1/wave1\")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chops\">chops()</a><div class=\"related-summary\">Returns the start index of a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chope\">chope()</a><div class=\"related-summary\">Returns the end index of the channels in a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopl\">chopl()</a><div class=\"related-summary\">Returns the length of the channels in a CHOP, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopr\">chopr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP.</div></p></div>",
        "return": "float"
    },
    "chopr": {
        "argnames": [
            "CHOP"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopr\">chopr</a></h1><p class=\"summary\">Returns the sample rate of a CHOP.</p><p><code>float chopr(string CHOP)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopr(\"/ch/ch1/wave1\")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chops\">chops()</a><div class=\"related-summary\">Returns the start index of a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chope\">chope()</a><div class=\"related-summary\">Returns the end index of the channels in a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopl\">chopl()</a><div class=\"related-summary\">Returns the length of the channels in a CHOP, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopn\">chopn()</a><div class=\"related-summary\">Returns the number of data channels within a CHOP.</div></p></div>",
        "return": "float"
    },
    "chops": {
        "argnames": [
            "CHOP"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chops\">chops</a></h1><p class=\"summary\">Returns the start index of a CHOP.</p><p><code>float chops(string CHOP)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchops(\"/ch/ch1/wave1\")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chops\">chops()</a><div class=\"related-summary\">Returns the start index of a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chope\">chope()</a><div class=\"related-summary\">Returns the end index of the channels in a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopl\">chopl()</a><div class=\"related-summary\">Returns the length of the channels in a CHOP, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopn\">chopn()</a><div class=\"related-summary\">Returns the number of data channels within a CHOP.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopr\">chopr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP.</div></p></div>",
        "return": "float"
    },
    "chopstr": {
        "argnames": [
            "channel"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopstr\">chopstr</a></h1><p class=\"summary\">Returns the string value of a channel within a CHOP at the current time.</p><p><code>string chopstr(string channel)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopstr(\"/ch/ch1/wave1/chan1\")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chop\">chop()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopf\">chopf()</a><div class=\"related-summary\">Evaluates a channel within a CHOP with at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopt\">chopt()</a><div class=\"related-summary\">Returns the value of a channel within a CHOP at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopi\">chopi()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a given sample point.</div></p></div>",
        "return": "string"
    },
    "chopt": {
        "argnames": [
            "channel",
            "time"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chopt\">chopt</a></h1><p class=\"summary\">Returns the value of a channel within a CHOP at a specified time.</p><p><code>float chopt(string channel, float time)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nchopt(\"/ch/ch1/wave1/chan1\", 0.5)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopct\">chopct()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopi\">chopi()</a><div class=\"related-summary\">Evaluates a channel within a CHOP at a given sample point.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopf\">chopf()</a><div class=\"related-summary\">Evaluates a channel within a CHOP with at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chopt\">chopt()</a><div class=\"related-summary\">Returns the value of a channel within a CHOP at a specified time.</div></p></div>",
        "return": "float"
    },
    "chramp": {
        "argnames": [
            "ramp_path",
            "position",
            "component_index"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chramp\">chramp</a></h1><p class=\"summary\">Returns the value of a ramp parameter at a specific position.</p><p><code>float chramp(string ramp_path, float position, float component_index)</code></p>\n\n\n\n<p><code>position</code> must be a value from 0 to 1.</p>\n<p><code>component_index</code> is the component of the evaluated value to return. For\ncolor ramps, it must be either 0, 1, or 2. For single-valued ramps,\n<code>component_index</code> must be 0.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<p>Return the second component of the evaluated ramp value at a position of 0.33:</p>\n<div class=\"code-container\">\nchramp(\"/obj/geo1/popnet1/color1/rampcolor\", 0.33, 1)\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chrampf\">chrampf()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position and frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chrampt\">chrampt()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position and time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p></div>",
        "return": "float"
    },
    "chrampf": {
        "argnames": [
            "ramp_path",
            "position",
            "component_index",
            "frame"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chrampf\">chrampf</a></h1><p class=\"summary\">Returns the value of a ramp parameter at a specific position and frame.</p><p><code>float chrampf(string ramp_path, float position, float component_index, float frame)</code></p>\n\n\n\n<p><code>position</code> must be a value from 0 to 1.</p>\n<p><code>component_index</code> is the component of the evaluated value to return. For\ncolor ramps, it must be either 0, 1, or 2. For single-valued ramps,\n<code>component_index</code> must be 0.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<p>Return second component of the evaluated ramp value at a position of 0.33 at frame 289:</p>\n<div class=\"code-container\">\n<code class=\"line\">chrampf(\"/obj/geo1/popnet1/color1/rampcolor\", 0.33, 1, 289)\n</code>\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chramp\">chramp()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chrampt\">chrampt()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position and time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p></div>",
        "return": "float"
    },
    "chrampt": {
        "argnames": [
            "ramp_path",
            "position",
            "component_index",
            "time"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chrampt\">chrampt</a></h1><p class=\"summary\">Returns the value of a ramp parameter at a specific position and time.</p><p><code>float chrampt(string ramp_path, float position, float component_index, float time)</code></p>\n\n\n\n<p><code>position</code> must be a value from 0 to 1.</p>\n<p><code>component_index</code> is the component of the evaluated value to return. For\ncolor ramps, it must be either 0, 1, or 2. For single-valued ramps,\n<code>component_index</code> must be 0.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<p>Return second component of the evaluated ramp value at a position of 0.33 at 12 seconds into the scene:</p>\n<div class=\"code-container\">\n<code class=\"line\">chrampf(\"/obj/geo1/popnet1/color1/rampcolor\", 0.33, 1, 12)\n</code>\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chramp\">chramp()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chrampf\">chrampf()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position and frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p></div>",
        "return": "float"
    },
    "chs": {
        "argnames": [
            "channel"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chs\">chs</a></h1><p class=\"summary\">Returns the value of a parameter.</p><p><code>string chs(string channel)</code></p>\n\n\n\n<h2 class=\"label heading\" id=\"overview\">\n            \n            Overview\n        </h2>\n<div class=\"content\" id=\"overview-body\">\n<p>The <code>ch</code> family of functions gets the value of a parameter. This lets you make the values of certain parameters automatically identical to or relative to the value of other parameters.</p>\n<p>For example, if you have two <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/obj/geo\" title=\"Container for the geometry operators (SOPs) that define a modeled\nobject.\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/OBJ/geo.svg\">[Image \ud83d\udd17]</a>Geometry object nodes</a> named <code>geo1</code> and <code>geo2</code>, you can make <code>geo2</code> always be 2 units higher than <code>geo</code> by setting <code>geo2</code>'s <strong class=\"ui\">Translate Y</strong> parameter to:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../geo1/ty\") + 2\n</code>\n</div>\n<p>Now when you move <code>geo1</code>, <code>geo2</code>'s Y position will always be 2 units higher.</p>\n<p>Channel references let you create custom <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../network/spare\" title=\"How to add extra parameters to an individual node.\">spare parameters</a> and <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../assets/_index\" title=\"Digital assets let you create reusable nodes and tools from existing networks.\">digital asset interfaces</a> and have them control other nodes, by using channel references to have the nodes inside the subnetwork/asset reference the \"interface\" parameters at the higher level.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"path-argument\">\n            \n            Path argument\n        </h2>\n<div class=\"content\" id=\"path-argument-body\">\n<p>The first argument to the channel functions is a string <em>path</em> to the parameter whose value you want to get.</p>\n<p>For parameters on the same node, you can just use the parameter\u2019s <em>internal name</em>. For example, in an object, you could make the object\u2019s X position always match the Y position by setting the <strong class=\"ui\">Translate Y</strong> to the expression:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"ty\")\n</code>\n</div>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item tip \">\nTip\n<div class=\"content\">\n<p>You can find the internal name of a parameter in the tooltip when you hover the mouse over the parameter in the parameter editor.</p>\n</div>\n</div>\n</div>\n<p>To get a parameter on a different node, you need to make a <em>path</em> to the parameter, similar to UNIX directory paths.</p>\n<p>For example, to reference the <code>ty</code> parameter of a node named <code>geo2</code> in the same network:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../geo2/ty\")\n</code>\n</div>\n<p>To reference the <code>tx</code> parameter of the parent network node:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../tx\")\n</code>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-numbers\">\n            \n            Getting numbers\n        </h2>\n<div class=\"content\" id=\"getting-numbers-body\">\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">ch(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the <em>floating point</em> value of the given parameter.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../font1/tx\")\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">chf(\"path\", frame_num)\n</code>\n\n<div class=\"content\">\n<p>Returns the floating point value of the given parameter, as computed at the given frame number.</p>\n<p>Getting a value from a future time requires <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../basics/cooking\">cooking</a> some or all of the scene up to that time, so this function is potentially expensive.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node from ten frames previous:</p>\n<div class=\"code-container\">\n<code class=\"line\">chf(\"../font1/text\", $F - 10)\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">cht(\"path\", seconds)\n</code>\n\n<div class=\"content\">\n<p>Returns the floating point value of the given parameter, as computed at the given time (in seconds).</p>\n<p>Getting a value from a future time requires <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../basics/cooking\">cooking</a> some or all of the scene up to that time, so this function is potentially expensive.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node from 2 seconds previous:</p>\n<div class=\"code-container\">\n<code class=\"line\">chf(\"../font1/text\", $T - 2)\n</code>\n</div></div>\n</li>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-strings\">\n            \n            Getting strings\n        </h2>\n<div class=\"content\" id=\"getting-strings-body\">\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">chs(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the <em>string</em> value of the given parameter.</p>\n<p>For example, to get the <strong class=\"ui\">Text</strong> of the <code>font1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">chs(\"../font1/text\")\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">chsraw(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the \"raw\" string value of the given parameter, without expanding quotes or variable names. For example, if the parameter contains an expression <code>$F - 10</code>, you will get the string <code>\"$F - 10\"</code> (instead of the computed value of the current frame minus ten).</p>\n</div>\n</li>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-a-node-path\">\n            \n            Getting a node path\n        </h2>\n<div class=\"content\" id=\"getting-a-node-path-body\">\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-ramp-values\">\n            \n            Getting ramp values\n        </h2>\n<div class=\"content\" id=\"getting-ramp-values-body\">\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chramp\" title=\"Returns the value of a ramp parameter at a specific position.\">chramp()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chrampf\" title=\"Returns the value of a ramp parameter at a specific position and frame.\">chrampf()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chrampt\" title=\"Returns the value of a ramp parameter at a specific position and time.\">chrampt()</a>.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"tips\">\n            \n            Tips\n        </h2>\n<div class=\"content\" id=\"tips-body\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\nYou can automatically create channel-references using the \"Copy\" and \"Paste reference\" commands on the parameter <a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/KEYS/RMB.svg\">[Image \ud83d\udd17]</a> right-click menu.\n</li>\n<li class=\"bullet \">\nSee <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../network/parms#link\">linking parameter values</a> for more information.\n</li>\n</ul>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chramp\">chramp()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chexist\">chexist()</a><div class=\"related-summary\">Returns 1 if the specified channel exists, 0 if it doesn\u2019t.</div></p></div>",
        "return": "string"
    },
    "chsop": {
        "argnames": [
            "path"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop</a></h1><p class=\"summary\">Evaluates the parameter at the current time as a node path string.</p><p><code>string chsop(string path)</code></p>\n\n\n\n<p>Assumes the given parameter contains a node path, and automatically takes care of things like bundles and relative paths, returning a string containing an absolute path or a space-separated list of absolute paths.</p>\n<p>For example, to get the <strong class=\"ui\">Object</strong> node path used by the <code>object_merge1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">chsop(\"../object_merge1/object1\")\n</code>\n</div>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsoplist\">chsoplist()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path list string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw()</a><div class=\"related-summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p></div>",
        "return": "string"
    },
    "chsoplist": {
        "argnames": [
            "path"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chsoplist\">chsoplist</a></h1><p class=\"summary\">Evaluates the parameter at the current time as a node path list string.</p><p><code>string chsoplist(string path)</code></p>\n\n\n\n<p>Assumes the given parameter contains a list of node paths, and automatically takes care of things like bundles and relative paths, returning a string containing an absolute path or a space-separated list of absolute paths. It can also expand adhoc bundle strings like <code>/obj/null*</code>.</p>\n<p>For example, to get the <strong class=\"ui\">Object</strong> node path used by the <code>object_merge1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">chsoplist(\"../object_merge1/object1\")\n</code>\n</div>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw()</a><div class=\"related-summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p></div>",
        "return": "string"
    },
    "chsraw": {
        "argnames": [
            "channel"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw</a></h1><p class=\"summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</p><p><code>string chsraw(string channel)</code></p>\n\n\n\n<p>Variables will NOT be expanded. If the given path\nis a channel, then it returns the expression of the channel that is\nevaluated at the current time.</p>\n<p>If you do:</p>\n<div class=\"code-container\">\necho `chsraw(\"channel_path\")`\n</div>\n<p>\u2026this will appear to lose your formatting because hscript expands\ndouble quotes before passing the result of the backtick expression\nto the echo command. Multiple levels of escaping is necessary in\norder to maintain them.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsoplist\">chsoplist()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path list string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p></div>",
        "return": "string"
    },
    "cht": {
        "argnames": [
            "channel",
            "time"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cht\">cht</a></h1><p class=\"summary\">Returns the value of a parameter.</p><p><code>float cht(string channel, float time)</code></p>\n\n\n\n<h2 class=\"label heading\" id=\"overview\">\n            \n            Overview\n        </h2>\n<div class=\"content\" id=\"overview-body\">\n<p>The <code>ch</code> family of functions gets the value of a parameter. This lets you make the values of certain parameters automatically identical to or relative to the value of other parameters.</p>\n<p>For example, if you have two <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/obj/geo\" title=\"Container for the geometry operators (SOPs) that define a modeled\nobject.\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/OBJ/geo.svg\">[Image \ud83d\udd17]</a>Geometry object nodes</a> named <code>geo1</code> and <code>geo2</code>, you can make <code>geo2</code> always be 2 units higher than <code>geo</code> by setting <code>geo2</code>'s <strong class=\"ui\">Translate Y</strong> parameter to:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../geo1/ty\") + 2\n</code>\n</div>\n<p>Now when you move <code>geo1</code>, <code>geo2</code>'s Y position will always be 2 units higher.</p>\n<p>Channel references let you create custom <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../network/spare\" title=\"How to add extra parameters to an individual node.\">spare parameters</a> and <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../assets/_index\" title=\"Digital assets let you create reusable nodes and tools from existing networks.\">digital asset interfaces</a> and have them control other nodes, by using channel references to have the nodes inside the subnetwork/asset reference the \"interface\" parameters at the higher level.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"path-argument\">\n            \n            Path argument\n        </h2>\n<div class=\"content\" id=\"path-argument-body\">\n<p>The first argument to the channel functions is a string <em>path</em> to the parameter whose value you want to get.</p>\n<p>For parameters on the same node, you can just use the parameter\u2019s <em>internal name</em>. For example, in an object, you could make the object\u2019s X position always match the Y position by setting the <strong class=\"ui\">Translate Y</strong> to the expression:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"ty\")\n</code>\n</div>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item tip \">\nTip\n<div class=\"content\">\n<p>You can find the internal name of a parameter in the tooltip when you hover the mouse over the parameter in the parameter editor.</p>\n</div>\n</div>\n</div>\n<p>To get a parameter on a different node, you need to make a <em>path</em> to the parameter, similar to UNIX directory paths.</p>\n<p>For example, to reference the <code>ty</code> parameter of a node named <code>geo2</code> in the same network:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../geo2/ty\")\n</code>\n</div>\n<p>To reference the <code>tx</code> parameter of the parent network node:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../tx\")\n</code>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-numbers\">\n            \n            Getting numbers\n        </h2>\n<div class=\"content\" id=\"getting-numbers-body\">\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">ch(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the <em>floating point</em> value of the given parameter.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">ch(\"../font1/tx\")\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">chf(\"path\", frame_num)\n</code>\n\n<div class=\"content\">\n<p>Returns the floating point value of the given parameter, as computed at the given frame number.</p>\n<p>Getting a value from a future time requires <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../basics/cooking\">cooking</a> some or all of the scene up to that time, so this function is potentially expensive.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node from ten frames previous:</p>\n<div class=\"code-container\">\n<code class=\"line\">chf(\"../font1/text\", $F - 10)\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">cht(\"path\", seconds)\n</code>\n\n<div class=\"content\">\n<p>Returns the floating point value of the given parameter, as computed at the given time (in seconds).</p>\n<p>Getting a value from a future time requires <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../basics/cooking\">cooking</a> some or all of the scene up to that time, so this function is potentially expensive.</p>\n<p>For example, to get the <strong class=\"ui\">Origin X</strong> of the <code>font1</code> node from 2 seconds previous:</p>\n<div class=\"code-container\">\n<code class=\"line\">chf(\"../font1/text\", $T - 2)\n</code>\n</div></div>\n</li>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-strings\">\n            \n            Getting strings\n        </h2>\n<div class=\"content\" id=\"getting-strings-body\">\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">chs(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the <em>string</em> value of the given parameter.</p>\n<p>For example, to get the <strong class=\"ui\">Text</strong> of the <code>font1</code> node:</p>\n<div class=\"code-container\">\n<code class=\"line\">chs(\"../font1/text\")\n</code>\n</div></div>\n</li>\n<li class=\"usage item\">\n\n<code class=\"line\">chsraw(\"path\")\n</code>\n\n<div class=\"content\">\n<p>Returns the \"raw\" string value of the given parameter, without expanding quotes or variable names. For example, if the parameter contains an expression <code>$F - 10</code>, you will get the string <code>\"$F - 10\"</code> (instead of the computed value of the current frame minus ten).</p>\n</div>\n</li>\n</div>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-a-node-path\">\n            \n            Getting a node path\n        </h2>\n<div class=\"content\" id=\"getting-a-node-path-body\">\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"getting-ramp-values\">\n            \n            Getting ramp values\n        </h2>\n<div class=\"content\" id=\"getting-ramp-values-body\">\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chramp\" title=\"Returns the value of a ramp parameter at a specific position.\">chramp()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chrampf\" title=\"Returns the value of a ramp parameter at a specific position and frame.\">chrampf()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chrampt\" title=\"Returns the value of a ramp parameter at a specific position and time.\">chrampt()</a>.</p>\n</div>\n\n\n<h2 class=\"label heading\" id=\"tips\">\n            \n            Tips\n        </h2>\n<div class=\"content\" id=\"tips-body\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\nYou can automatically create channel-references using the \"Copy\" and \"Paste reference\" commands on the parameter <a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/KEYS/RMB.svg\">[Image \ud83d\udd17]</a> right-click menu.\n</li>\n<li class=\"bullet \">\nSee <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../network/parms#link\">linking parameter values</a> for more information.\n</li>\n</ul>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chramp\">chramp()</a><div class=\"related-summary\">Returns the value of a ramp parameter at a specific position.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chexist\">chexist()</a><div class=\"related-summary\">Returns 1 if the specified channel exists, 0 if it doesn\u2019t.</div></p></div>",
        "return": "float"
    },
    "clamp": {
        "argnames": [
            "value",
            "minimum",
            "maximum"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/clamp\">clamp</a></h1><p class=\"summary\">Returns a value clamped between a minimum and maximum.</p><p><code>float clamp(float value, float minimum, float maximum)</code></p>\n\n\n\n<p>This is useful to prevent the value from\ngoing outside the specified range.</p>\n<p>If the value is less than the minimum number, the minimum number\nwill be returned. If the value is greater than the maximum number, the\nmaximum number will be returned.</p>\n\n</div>",
        "return": "float"
    },
    "clamptosphere": {
        "argnames": [
            "x",
            "y",
            "z",
            "min_radius",
            "max_radius",
            "constant_type"
        ],
        "args": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/clamptosphere\">clamptosphere</a></h1><p class=\"summary\">Clamps a vector to always end between a minimum and maximum sphere.</p><p><code>float clamptosphere(float x, float y, float z, float min_radius, float max_radius, string constant_type)</code></p>\n\n\n\n<p>This function computes a vector R that is parallel to the given (x,y,z)\nvector. R is adjusted so that its magnitude is always between the min\nand max radii (i.e min_radius  \u2264 |R|  \u2264 max_radius)</p>\n<p>This function returns one of the components of the vector R according\nto the value of <code>constant_type</code>: \"X\", \"Y\" or \"Z\".</p>\n\n</div>",
        "return": "float"
    },
    "constant": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/constant\">constant</a></h1><p class=\"summary\">Channel segment function: constant value.</p><p><code>float constant()</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/linear\">linear()</a><div class=\"related-summary\">Channel segment function: linear interpolation.</div></p></div>",
        "return": "float"
    },
    "cophasmeta": {
        "argnames": [
            "compositing_node",
            "metadata_name"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cophasmeta\">cophasmeta</a></h1><p class=\"summary\">Tests if metadata exists on a compositing node.</p><p><code>string cophasmeta(string compositing_node, string metadata_name)</code></p>\n\n\n\n<p>Metadata can be added to sequences with a <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/cop2/metadata\" title=\"Applies metadata to an image sequence.\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/COP2/metadata.svg\">[Image \ud83d\udd17]</a>Metadata COP</a>.\nThis expression function queries if the metadata with <code>metadata_name</code> exists on the COP node <code>composting_node</code>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/copmeta\">copmeta()</a><div class=\"related-summary\">Returns numeric metadata from a compositing node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/copmetas\">copmetas()</a><div class=\"related-summary\">Returns string metadata from a compositing node.</div></p></div>",
        "return": "string"
    },
    "copmeta": {
        "argnames": [
            "compositing_node",
            "metadata_name",
            "index"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/copmeta\">copmeta</a></h1><p class=\"summary\">Returns numeric metadata from a compositing node.</p><p><code>float copmeta(string compositing_node, string metadata_name, float index)</code></p>\n\n\n\n<p>Metadata can be added to sequences with a <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/cop2/metadata\" title=\"Applies metadata to an image sequence.\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/COP2/metadata.svg\">[Image \ud83d\udd17]</a>Metadata COP</a>.\nThis expression function will return the value of numeric metadata, such as\nfloating point values, vectors, and matrices. The <strong class=\"ui\">index</strong> is used to access\nthe element to return for types with multiple values, such as vector and matrix\ntypes.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/copmetas\">copmetas()</a><div class=\"related-summary\">Returns string metadata from a compositing node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cophasmeta\">cophasmeta()</a><div class=\"related-summary\">Tests if metadata exists on a compositing node.</div></p></div>",
        "return": "float"
    },
    "copmetas": {
        "argnames": [
            "compositing_node",
            "metadata_name"
        ],
        "args": [
            "string",
            "string"
        ],
        "return": "string"
    },
    "cos": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cos\">cos</a></h1><p class=\"summary\">Returns the cosine of the argument.</p><p><code>float cos(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ncos (60)=0.5\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "cosh": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cosh\">cosh</a></h1><p class=\"summary\">Returns the hyperbolic cosine of the argument.</p><p><code>float cosh(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ncosh (2) = 3.7622\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "cross": {
        "argnames": [
            "v1",
            "v2"
        ],
        "args": [
            "vector",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cross\">cross</a></h1><p class=\"summary\">Computes the cross-product of two vectors.</p><p><code>vector cross(vector v1, vector v2)</code></p>\n\n\n\n\n</div>",
        "return": "vector"
    },
    "cubic": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cubic\">cubic</a></h1><p class=\"summary\">Channel segment function: cubic spline.</p><p><code>float cubic()</code></p>\n\n\n\n<p>This function uses the slopes at either end to\nsolve the differential equation to give a smooth curve between the end\npoints.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/spline\">spline()</a><div class=\"related-summary\">Channel segment function: fits a curve to the keyframes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/bezier\">bezier()</a><div class=\"related-summary\">Channel segment function: Bezier interpoloation spline</div></p></div>",
        "return": "float"
    },
    "curvature": {
        "argnames": [
            "surface_node",
            "prim_num",
            "u",
            "v"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/curvature\">curvature</a></h1><p class=\"summary\">Returns the curvature of the surface at the given UV coordinates.</p><p><code>float curvature(string surface_node, float prim_num, float u, float v)</code></p>\n\n\n\n<p><code>u</code> and <code>v</code> are unit values, defined in the <code>[0, 1]</code> interval.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>if the primitive is a mesh, u and v are defined in terms of its\n    number of rows and columns.</p>\n</div>\n</div>\n</div>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv()</a><div class=\"related-summary\">Converts real UV to unit UV.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primuv\">primuv()</a><div class=\"related-summary\">Returns the value of a primitive attribute at a certain UV location.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primduv\">primduv()</a><div class=\"related-summary\">Returns the partial derivatives of a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/normal\">normal()</a><div class=\"related-summary\">Returns the components of the surface normal specific UV coordinates.</div></p></div>",
        "return": "float"
    },
    "cycle": {
        "argnames": [
            "f1",
            "f2"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cycle\">cycle</a></h1><p class=\"summary\">Channel segment function: repeats animation from previous frames.</p><p><code>float cycle(float f1, float f2)</code></p>\n\n\n\n<p>Repeats the animation from frames <code>f1</code> to <code>f2</code>.</p>\n<p>If you wish to repeat the animation cumulatively,\nuse the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cycleoffset\" title=\"Channel segment function: repeats the animation between frames f1 and f2, accumulating the value.\">cycleoffset()</a> function instead.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cyclet\">cyclet()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycleoffset\">cycleoffset()</a><div class=\"related-summary\">Channel segment function: repeats the animation between frames f1 and f2, accumulating the value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycleoffsett\">cycleoffsett()</a><div class=\"related-summary\">Channel segment function: repeats the animation between times t1 and t2, accumulating the value.</div></p></div>",
        "return": "float"
    },
    "cycleoffset": {
        "argnames": [
            "f1",
            "f2"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cycleoffset\">cycleoffset</a></h1><p class=\"summary\">Channel segment function: repeats the animation between frames <var>f1</var> and <var>f2</var>, accumulating the value.</p><p><code>float cycleoffset(float f1, float f2)</code></p>\n\n\n\n<p>Each repeated portion will have its first value set\nto the last value of the previous cycle. The rest of the values are set\nsuch that their relative increments with respect to the first value\nmatch the relative increments in the channel interval between <code>f1</code> and\n<code>f2</code>. If you wish to repeat motion exactly, use the cycle function\ninstead.</p>\n<p>If <code>f1</code> is less than <code>f2</code>, then it will cycle forwards from <code>f1</code>\nto <code>f2</code>. If <code>f2</code> is less than <code>f1</code>, then it will cycle backwards\nfrom <code>f2</code> to <code>f1</code>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycle\">cycle()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cyclet\">cyclet()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycleoffsett\">cycleoffsett()</a><div class=\"related-summary\">Channel segment function: repeats the animation between times t1 and t2, accumulating the value.</div></p></div>",
        "return": "float"
    },
    "cycleoffsett": {
        "argnames": [
            "t1",
            "t2"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cycleoffsett\">cycleoffsett</a></h1><p class=\"summary\">Channel segment function: repeats the animation between times <var>t1</var> and <var>t2</var>, accumulating the value.</p><p><code>float cycleoffsett(float t1, float t2)</code></p>\n\n\n\n<p>Each repeated portion will have its first value set\nto the last value of the previous cycle. If you wish to repeat motion\nexactly, use the cyclet function instead.</p>\n<p>If <code>t1</code> is less than <code>t2</code>, then it will cycle forwards from <code>t1</code>\nto <code>t2</code>. If <code>t2</code> is less than <code>t1</code>, then it will cycle backwards\nfrom <code>t2</code> to <code>t1</code>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycle\">cycle()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cyclet\">cyclet()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycleoffset\">cycleoffset()</a><div class=\"related-summary\">Channel segment function: repeats the animation between frames f1 and f2, accumulating the value.</div></p></div>",
        "return": "float"
    },
    "cyclet": {
        "argnames": [
            "t1",
            "t2"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/cyclet\">cyclet</a></h1><p class=\"summary\">Channel segment function: repeats animation from previous frames.</p><p><code>float cyclet(float t1, float t2)</code></p>\n\n\n\n<p>Repeats the animation from <code>t1</code> seconds to <code>t2</code> seconds.</p>\n<p>If you wish to repeat the animation cumulatively, use\nthe <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cycleoffsett\" title=\"Channel segment function: repeats the animation between times t1 and t2, accumulating the value.\">cycleoffsett()</a> function instead.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycle\">cycle()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycleoffset\">cycleoffset()</a><div class=\"related-summary\">Channel segment function: repeats the animation between frames f1 and f2, accumulating the value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycleoffsett\">cycleoffsett()</a><div class=\"related-summary\">Channel segment function: repeats the animation between times t1 and t2, accumulating the value.</div></p></div>",
        "return": "float"
    },
    "deg": {
        "argnames": [
            "radians"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/deg\">deg</a></h1><p class=\"summary\">Converts from radians to degrees.</p><p><code>float deg(float radians)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "degree": {
        "argnames": [
            "surface_node",
            "prim_num",
            "du_or_dv"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/degree\">degree</a></h1><p class=\"summary\">Returns the degree a specified face or hull.</p><p><code>float degree(string surface_node, float prim_num, float du_or_dv)</code></p>\n\n\n\n<p>Polygons and meshes are expressed as\nlinear functions, so their degree is 1. Spline types \u2013 NURBS and Bezier\ncurves and surfaces \u2013 have degrees ranging from 1 to 10.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>If the primitive is a polygon or a curve, D_U and D_V are\n    irrelevant.</p>\n</div>\n</div>\n</div>\n\n</div>",
        "return": "float"
    },
    "detail": {
        "argnames": [
            "surface_node",
            "attrib_name",
            "attrib_index"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/detail\">detail</a></h1><p class=\"summary\">Returns the value of a detail attribute.</p><p><code>float detail(string surface_node, string attrib_name, float attrib_index)</code></p>\n\n\n\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item tip \">\nTip\n<div class=\"content\">\n<p>This expression may not work if <code>surface_node</code> is the <em>currently cooking</em> node.\n    Try specifying an upstream node.</p>\n</div>\n</div>\n</div>\n<p>This can also be used to read the value of a detail intrinsic by specifying\n<code>\"intrinsic:name_of_intrinsic\"</code> instead of an attribute name.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndetail(\"/obj/geo1/attribpromote1\", \"area\", 0)\n</div>\n<p>Returns the total area of the geometry, if the geometry had first\nbeen measured and then AttribPromote had promoted the area primitive\nattribute to a detail attribute with Sum as the promotion method.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "detailattribsize": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/detailattribsize\">detailattribsize</a></h1><p class=\"summary\">Returns the number of components in a detail attribute.</p><p><code>float detailattribsize(string surface_node, string attribute)</code></p>\n\n\n\n<p>If the surface node or attribute is not found, returns 0.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndetailattribsize( \"/obj/model/capture\", \"pCaptData\" )\n\n\n</div>\n<p>Returns the number of elements in a \"pCaptData\" attribute.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/detail\">detail()</a><div class=\"related-summary\">Returns the value of a detail attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointattribsize\">pointattribsize()</a><div class=\"related-summary\">Returns the number of components in a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertexattribsize\">vertexattribsize()</a><div class=\"related-summary\">Returns the number of components in a vertex attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primattribsize\">primattribsize()</a><div class=\"related-summary\">Returns the number of components in a primitive attribute.</div></p></div>",
        "return": "float"
    },
    "detailattribtype": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/detailattribtype\">detailattribtype</a></h1><p class=\"summary\">Returns the type of a detail attribute.</p><p><code>float detailattribtype(string surface_node, string attribute)</code></p>\n\n\n\n<p>If the surface node or attribute are not found, returns -1.</p>\n\n<p>\nTypes are\n        \n<div class=\"content\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\n-1 - Unknown/Invalid\n</li>\n<li class=\"bullet \">\n0 - Integer\n</li>\n<li class=\"bullet \">\n1 - Float\n</li>\n<li class=\"bullet \">\n2 - String\n</li>\n</ul>\n</div>\n</p>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndetailattribsize( \"/obj/model/box\", \"Cd\" )\n\n</div>\n<p>Returns 1 to denote a float attribute.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/detail\">detail()</a><div class=\"related-summary\">Returns the value of a detail attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointattribtype\">pointattribtype()</a><div class=\"related-summary\">Returns the type of a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertexattribtype\">vertexattribtype()</a><div class=\"related-summary\">Returns the type of a vertex attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primattribtype\">primattribtype()</a><div class=\"related-summary\">Returns the type of a primitive attribute.</div></p></div>",
        "return": "float"
    },
    "details": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/details\">details</a></h1><p class=\"summary\">Returns the string value of a detail attribute.</p><p><code>string details(string surface_node, string attribute)</code></p>\n\n\n\n<p>This can also be used to read the value of a detail intrinsic by specifying\n<code>\"intrinsic:name_of_intrinsic\"</code> instead of an attribute name.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndetails(\"/obj/geo1/attribcreate1\", \"varmap\")\n\n</div>\n<p>Returns the currently bound index attribute\u2019s value.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "detailsmap": {
        "argnames": [
            "surface_node",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/detailsmap\">detailsmap</a></h1><p class=\"summary\">Returns a string from a list of strings in a detail attribute.</p><p><code>string detailsmap(string surface_node, string attribute, float index)</code></p>\n\n\n\n<p>This function will return the <code>index</code>th unique string bound to the given\ndetail attribute. Use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/detailsnummap\" title=\"Returns the number of unique stings bound to a detail attribute.\">detailsnummap()</a> to find the total number of unique\nstrings. Note that the exact order of the strings should not be\nrelied upon. The indexes start with 0 and go to detailsnummap()-1.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndetailsmap(\"/obj/geo1/attribcreate1\", \"varmap\", 0)\n\n</div>\n<p>Returns the first variable mappings on the given surface node.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "detailsnummap": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/detailsnummap\">detailsnummap</a></h1><p class=\"summary\">Returns the number of unique stings bound to a detail attribute.</p><p><code>float detailsnummap(string surface_node, string attribute)</code></p>\n\n\n\n<p>Use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/detailsmap\" title=\"Returns a string from a list of strings in a detail attribute.\">detailsmap()</a> to extract the strings.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndetailsnummap(\"/obj/geo1/attribcreate1\", \"varmap\")\n\n</div>\n<p>Returns number of variable mappings on the given surface node.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "determinant": {
        "argnames": [
            "mat"
        ],
        "args": [
            "matrix"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/determinant\">determinant</a></h1><p class=\"summary\">Returns the determinant of a matrix.</p><p><code>float determinant(matrix mat)</code></p>\n\n\n\n<p>This is only valid for a 4\u00d74 or 3\u00d73 matrix.\nIf the matrix is larger than 4\u00d74, the\n4\u00d74 determinant will be returned. If the matrix is smaller than 3\u00d73, the\nmatrix will be converted to a 3\u00d73 before the determinant is computed.\nThe results of the upward conversion are not guaranteed.</p>\n\n</div>",
        "return": "float"
    },
    "dihedral": {
        "argnames": [
            "v0",
            "v1"
        ],
        "args": [
            "vector",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dihedral\">dihedral</a></h1><p class=\"summary\">Computes the dihedral matrix between vectors <var>v0</var> and <var>v1</var>.</p><p><code>matrix dihedral(vector v0, vector v1)</code></p>\n\n\n\n<p>This returns a rotation matrix which will rotate vector v0 to vector v1.</p>\n\n</div>",
        "return": "matrix"
    },
    "distance": {
        "argnames": [
            "x1",
            "y1",
            "z1",
            "x2",
            "y2",
            "z2"
        ],
        "args": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/distance\">distance</a></h1><p class=\"summary\">Returns the distance between two 3D points.</p><p><code>float distance(float x1, float y1, float z1, float x2, float y2, float z2)</code></p>\n\n\n\n<p>A.K.A. <code>sqrt((x2-x1)^2 + (y2-y1)^2 + (z2-z1)^2)</code>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointdist\">pointdist()</a><div class=\"related-summary\">Returns the distance between a point and a primitive.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/uvdist\">uvdist()</a><div class=\"related-summary\">Returns the distance between parameteric locations on two primitives.</div></p></div>",
        "return": "float"
    },
    "dopallfields": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "recordType"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopallfields\">dopallfields</a></h1><p class=\"summary\">Returns a space separated list of all the field names that can be\npassed to the dopfield function.</p><p><code>string dopallfields(string dop, string objectSpec, string subDataName, string recordType)</code></p>\n\n\n\n<p>This list is not the same as the values\nreturned from the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopfieldname\" title=\"Returns the name of a DOP field.\">dopfieldname()</a> function because it includes all the\nsubvalues that can be accessed. For example if there is a vector field\nnamed \"t\", the dopfieldname function would simply return \"t\". This\nfunction would return \"tx ty tz\" (along with all the other field names).\nNote that \"t\" is not even in this list because dopfield returns a single\nfloat value and so cannot access a vector like \"t\" directly.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopallfields(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\")\n\n</div>\n<p>Returns all the field name values that can be passed to the dopfield\n    function. This list would begin \"angvelx angvely angvelz \u2026\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopfield\">dopfield()</a><div class=\"related-summary\">Returns the value of a field as a float.</div></p></div>",
        "return": "string"
    },
    "dopcontextgeo": {
        "argnames": [
            "name",
            "index"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopcontextgeo\">dopcontextgeo</a></h1><p class=\"summary\">Returns the full path of the node connected to a dopnetwork.</p><p><code>string dopcontextgeo(string name, float index)</code></p>\n\n\n\n<p><code>index</code> is the 0-based number of the input. For example,\nto get the path of the node connected to the first input,\nuse <code>dopcontextgeo(\".\", 0)</code>, and for the second input, use\n<code>dopcontextgeo(\".\", 1)</code>.</p>\n<p>This differs from <code>opinputpath</code> as the given name should be the name of a\nnode inside a dopnet (or the dopnet itself).  This simplifies the process of\nfinding what is wired up to a dopnet node at the SOP level. Passing \".\" as the\npath will cause your containing dopnet to be used.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npoint(dopcontextgeo(\".\", 0), $PT, \"P\", 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinput\">opinput()</a><div class=\"related-summary\">Returns the name of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinputpath\">opinputpath()</a><div class=\"related-summary\">Returns the full path of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opninputs\">opninputs()</a><div class=\"related-summary\">Returns the maximum number of connected inputs.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutput\">opoutput()</a><div class=\"related-summary\">Returns the name of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutputpath\">opoutputpath()</a><div class=\"related-summary\">Returns the full path of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opnoutputs\">opnoutputs()</a><div class=\"related-summary\">Returns the number of nodes connected to a node\u2019s output.</div></p></div>",
        "return": "string"
    },
    "dopcountslices": {
        "argnames": [
            "dop",
            "objectFilter",
            "subDataName"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopcountslices\">dopcountslices</a></h1><p class=\"summary\">Returns the number of records of a given type in a piece of\ndynamics data.</p><p><code>float dopcountslices(string dop, string objectFilter, string subDataName)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopnumrecords(\"/obj/dopnet1\", \"object1\", \"Slice\")\n\n</div>\n<p>Returns the number of logical slices object1 should be broken into\n    given the slice data stored as subdata to Slice.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dopfield": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "recordType",
            "recordNum",
            "fieldName"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopfield\">dopfield</a></h1><p class=\"summary\">Returns the value of a field as a float.</p><p><code>float dopfield(string dop, string objectSpec, string subDataName, string recordType, float recordNum, string fieldName)</code></p>\n\n\n\n<p>This function always returns a float value. To get a string value\n(which you can possibly then convert to a different type, using for\nexample <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/vector\" title=\"Converts a string specification into a vector.\">vector()</a>), see <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopfields\" title=\"Returns the value of a DOP field as a string.\">dopfields()</a>.</p>\n<p>If a field is multivalued, you can access individual parameters\nby adding a suffix.</p>\n<p>For example, <code>\"ty\"</code> will access the y component of the <code>\"t\"</code> field. If the\nfield is a quaternion, you can use <code>\"rx\"</code>, <code>\"ry\"</code>, and <code>\"rz\"</code> as extensions to\nget the euler rotations for the quaternion. In the special case of a\nquaternion named <code>\"orient\"</code>, simply using the name <code>\"rx\"</code> will return the\nequivalent of <code>\"orientrx\"</code>.</p>\n<p>When accessing <em>subdata</em>, the name of the data field is based\non the name of the node that creates it. The complete\npath to the subdata must be provided. See the example below.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopfield(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\", 0, \"ty\")\n\n</div>\n<p>Returns the y position of object obj0</p>\n<div class=\"code-container\">\ndopfield(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\", 0, \"ry\")\n\n</div>\n<p>Returns the ry component of the orientation of object obj0. This\n    will be in degrees.</p>\n<div class=\"code-container\">\ndopfield(\"/obj/geo1/dopnet1\", \"Relationships/Spring_spring_constraint1\", \"\", \"Basic\", 0, \"memusage\")\n\n</div>\n<p>Returns the memory usage of a dynamics relationship</p>\n<div class=\"code-container\">\ndopfield(\"/obj/dopnet1\", \"obj0\", \"Forces/Gravity_gravity1\", \"Options\", 0, \"forcey\")\n\n</div>\n<p>Returns the y component of the gravity force created by the Gravity\n    Force node named gravity1. Note that the full path must be given,\n    including the relevant node name, and that this path corresponds to\n    the folder names in the tree view of the DOP network.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopfields\">dopfields()</a><div class=\"related-summary\">Returns the value of a DOP field as a string.</div></p></div>",
        "return": "float"
    },
    "dopfieldname": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "recordType",
            "fieldNum"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopfieldname\">dopfieldname</a></h1><p class=\"summary\">Returns the name of a DOP field.</p><p><code>string dopfieldname(string dop, string objectSpec, string subDataName, string recordType, float fieldNum)</code></p>\n\n\n\n<p>Returns the name of the <code>fieldNum</code>th field of the given record type.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopfieldname(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\", 3)\n\n</div>\n<p>Returns the name of the fourth field of the Options record of the\n    Position subdata owned by obj0.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "dopfields": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "recordType",
            "recordNum",
            "fieldName"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopfields\">dopfields</a></h1><p class=\"summary\">Returns the value of a DOP field as a string.</p><p><code>string dopfields(string dop, string objectSpec, string subDataName, string recordType, float recordNum, string fieldName)</code></p>\n\n\n\n<p>Since this function returns values as a string, it allows you to convert\ncomplex types such as vectors to the native type using the\n<a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/vector\" title=\"Converts a string specification into a vector.\">vector()</a> expression function.</p>\n<p>See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopfield\" title=\"Returns the value of a field as a float.\">dopfield()</a> for more information.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvector(dopfields(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\", 0, \"position\"))\n\n</div>\n<p>Gets the position of the object as a string and converts it into a\n    vector.</p>\n<div class=\"code-container\">\ndopfields(\"/obj/geo1/dopnet1\", \"Relationships/Spring_spring_constraint1\", \"\", \"ObjInGroup\", 0, \"objname\")\n\n</div>\n<p>Returns the name of the first object involved in a spring constraint relationship\n    (e.g. <code>\"sphere2\"</code>).</p>\n<div class=\"code-container\">\ndopfields(\"/obj/geo1/dopnet1\",\"sphere2\",\"\", \"RelInGroup\", 0, \"relname\")\n\n</div>\n<p>Returns the name of the first relationship on an object\n    (e.g. <code>\"Spring_spring_constraint1\"</code>).</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "dopfieldtype": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "recordType",
            "fieldNum"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopfieldtype\">dopfieldtype</a></h1><p class=\"summary\">Returns the type of a DOP field.</p><p><code>string dopfieldtype(string dop, string objectSpec, string subDataName, string recordType, float fieldNum)</code></p>\n\n\n\n<p>Returns the type of the <code>fieldNum</code>th field of the given record.</p>\n<p>Possible types are: \"string\", \"float\", \"vector2\", and \"vector3\".</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopfieldtype(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\", 2)\n\n</div>\n<p>Returns the type of the third field of the Options record of the\n    Position data attached to object obj0.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "dopframe": {
        "argnames": [
            "dop"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopframe\">dopframe</a></h1><p class=\"summary\">Returns the current frame of the simulation.</p><p><code>float dopframe(string dop)</code></p>\n\n\n\n<p>This will often be equal to the global frame $F, unless the Time Scale\nor Offset Time parameters of the DOP Network have been changed from\ntheir default values.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/doptime\">doptime()</a><div class=\"related-summary\">Returns the current time of a simulation.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsttoframe\">dopsttoframe()</a><div class=\"related-summary\">returns the simulation frame of a given simulation time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopframetost\">dopframetost()</a><div class=\"related-summary\">Returns the simulation time equivalent of a simulation frame.</div></p></div>",
        "return": "float"
    },
    "dopframetost": {
        "argnames": [
            "dop",
            "simulationframe"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopframetost\">dopframetost</a></h1><p class=\"summary\">Returns the simulation time equivalent of a simulation frame.</p><p><code>float dopframetost(string dop, float simulationframe)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsttoframe\">dopsttoframe()</a><div class=\"related-summary\">returns the simulation frame of a given simulation time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopframe\">dopframe()</a><div class=\"related-summary\">Returns the current frame of the simulation.</div></p></div>",
        "return": "float"
    },
    "dopgrouphasobject": {
        "argnames": [
            "dop",
            "objectSpec",
            "group"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopgrouphasobject\">dopgrouphasobject</a></h1><p class=\"summary\">Returns 1 if a specified DOP group contains a specified object.</p><p><code>float dopgrouphasobject(string dop, string objectSpec, string group)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopgrouphasobject(\"/obj/dopnet1\", \"rbdobject\", \"group1\")\n\n</div>\n<p>Returns 1 if group1 contains an object named rbdobject.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopgrouplist\">dopgrouplist()</a><div class=\"related-summary\">returns a string containing a list of all object groups\nfor the current time in a specified DOP Network.</div></p></div>",
        "return": "float"
    },
    "dopgrouplist": {
        "argnames": [
            "dop"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopgrouplist\">dopgrouplist</a></h1><p class=\"summary\">returns a string containing a list of all object groups\nfor the current time in a specified DOP Network.</p><p><code>string dopgrouplist(string dop)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopgrouplist(\"/obj/dopnet1\")\n\n</div>\n<p>Returns a string such as \"group1 group2 <strong class=\"ui\">rbdsolver1</strong>\".</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "dophasfield": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "recordType",
            "recordNum",
            "fieldName"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dophasfield\">dophasfield</a></h1><p class=\"summary\">Returns 1 if a specified DOP field exists.</p><p><code>float dophasfield(string dop, string objectSpec, string subDataName, string recordType, float recordNum, string fieldName)</code></p>\n\n\n\n<p>This expression can be used before the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopfield\" title=\"Returns the value of a field as a float.\">dopfield()</a> or <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopfields\" title=\"Returns the value of a DOP field as a string.\">dopfields()</a>\nexpressions to ensure that any returned empty strings or zero values are\nin fact true values as opposed to default values being returned for an\ninvalid field name.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndophasfield(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\", 0, \"ty\")\n\n</div>\n<p>Returns 1, because Position data has an option with the name ty.</p>\n<div class=\"code-container\">\ndopfield(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\", 0, \"notafield\")\n\n</div>\n<p>Returns 0 because notafield is not a field name in the Position data\n    options.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dophassubdata": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dophassubdata\">dophassubdata</a></h1><p class=\"summary\">Returns 1 if a dynamics object has the specified subdata.</p><p><code>float dophassubdata(string dop, string objectSpec, string subDataName)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndophassubdata(\"/obj/dopnet1\", \"obj0\", \"Geometry/Volume\")\n\n</div>\n<p>Returns true if obj0's Geometry data has the Volume subdata attached\n    to it.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dopnodeobjs": {
        "argnames": [
            "dop"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopnodeobjs\">dopnodeobjs</a></h1><p class=\"summary\">Returns the list of objects processed by a DOP in the latest timestep.</p><p><code>string dopnodeobjs(string dop)</code></p>\n\n\n\n<p>Returns a string containing a space-separated list of object identifies.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopnodeobjs(\"/obj/dopnet1\")\n\n</div>\n<p>Returns a list of identifiers for all objects in the /obj/dopnet1\n    DOP Network. Since no specific DOP node is specified, the node with\n    the display flag is used.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "dopnumfields": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "recordType"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopnumfields\">dopnumfields</a></h1><p class=\"summary\">Returns the number of fields in a DOP record type.</p><p><code>float dopnumfields(string dop, string objectSpec, string subDataName, string recordType)</code></p>\n\n\n\n<p>The \"Options\" record type, for example, usually has one field for every\nparameter in the DOP Node that creates that data type.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopnumfields(\"/obj/dopnet1\", \"obj0\", \"Position\", \"Options\")\n\n</div>\n<p>Returns the number of different fields that the \"Options\" record has\n    in the \"Position\" data owned by \"obj0\".</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dopnumobjects": {
        "argnames": [
            "dop",
            "objectFilter"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopnumobjects\">dopnumobjects</a></h1><p class=\"summary\">returns the number of objects in a simulation.</p><p><code>float dopnumobjects(string dop, string objectFilter)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopnumobjects(\"/obj/dopnet1\", \"foo*\")\n\n</div>\n<p>Returns the number of objects in the dopnet with names prefixed by\n    foo.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopobjectlist\">dopobjectlist()</a><div class=\"related-summary\">Returns all objects matching the an object specification.</div></p></div>",
        "return": "float"
    },
    "dopnumrecords": {
        "argnames": [
            "dop",
            "objectFilter",
            "subDataName",
            "recordType"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopnumrecords\">dopnumrecords</a></h1><p class=\"summary\">Returns the number of records of a given type in a piece of\ndynamics data.</p><p><code>float dopnumrecords(string dop, string objectFilter, string subDataName, string recordType)</code></p>\n\n\n\n<p>Note that this is different than the number of fields. The\nPosition/Options data type usually has one record that has several\nfields, such as \"position\" and \"orientation\".</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopnumrecords(\"/obj/dopnet1\", \"object1\", \"Impacts\", \"Impacts\")\n\n</div>\n<p>Returns the number of records in the record type called \"Impacts\"\n    found in the data called \"Impacts\", which is owned by the object\n    \"object1\"</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dopnumrecordtypes": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopnumrecordtypes\">dopnumrecordtypes</a></h1><p class=\"summary\">Returns the number of types of record in a piece of dynamics data.</p><p><code>float dopnumrecordtypes(string dop, string objectSpec, string subDataName)</code></p>\n\n\n\n<p>Most subdata contains at least the records \"Basic\" and \"Options\"</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopnumrecordtypes(\"/obj/dopnet1\", \"object1\", \"Position\")\n\n</div>\n<p>Returns the number of record types that the Position data attached\n    to object1 has.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dopnumsubdata": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopnumsubdata\">dopnumsubdata</a></h1><p class=\"summary\">Returns the number of subdata items attached to an object or data.</p><p><code>float dopnumsubdata(string dop, string objectSpec, string subDataName)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopnumsubdata(\"/obj/dopnet1\", \"obj0\", \"\")\n\n</div>\n<p>Returns the number of data items attached to obj0.</p>\n<div class=\"code-container\">\ndopnumsubdata(\"/obj/dopnet1\", \"obj0\", \"Geometry\")\n\n</div>\n<p>Returns the number of data items attached to obj0/Geometry.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dopobjectlist": {
        "argnames": [
            "dop",
            "objectSpec",
            "listNames"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopobjectlist\">dopobjectlist</a></h1><p class=\"summary\">Returns all objects matching the an object specification.</p><p><code>string dopobjectlist(string dop, string objectSpec, float listNames)</code></p>\n\n\n\n<p>Returns a string containing a space-separated list. If the <code>listNames</code>\nargument is zero, then the string is a list of object identifiers.\nOtherwise it is a list of object names.</p>\n<p>Object names are easier to read, but may not uniquely identify each object.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopobjectlist(\"/obj/dopnet1\", \"obj? object*\", 1)\n\n</div>\n<p>Returns a string such as \"obj1 obj2 object1 objectfoo\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopnumobjects\">dopnumobjects()</a><div class=\"related-summary\">returns the number of objects in a simulation.</div></p></div>",
        "return": "string"
    },
    "dopobjectsareaffectors": {
        "argnames": [
            "dop",
            "objectSpec",
            "affectors"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopobjectsareaffectors\">dopobjectsareaffectors</a></h1><p class=\"summary\">Tests whether a set of objects has an affector relationship with\nanother object.</p><p><code>float dopobjectsareaffectors(string dop, string objectSpec, string affectors)</code></p>\n\n\n\n<p>Returns 1 if all the objects specified by\nthe affectors argument are affectors of the single object specified with\nthe objectSpec argument.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopobjectsareaffectors(\"/obj/dopnet1\", \"obj1\", \"obj2 obj3\")\n\n</div>\n<p>Returns one if obj2 and obj3 are affectors of obj1.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dopobjscreatedby": {
        "argnames": [
            "dop"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopobjscreatedby\">dopobjscreatedby</a></h1><p class=\"summary\">Returns the list of objects created by a particular DOP node.</p><p><code>string dopobjscreatedby(string dop)</code></p>\n\n\n\n<p>Returns a string containing a space-separated list of object identifies.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopobjscreatedby(\"/obj/dopnet1/rbdglueobject1\")\n\n</div>\n<p>Returns a list of identifiers for all objects created by the\n    rbdglueobject1 DOP node.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "dopoption": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "fieldName"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopoption\">dopoption</a></h1><p class=\"summary\">Returns the value of a DOP field as a float.</p><p><code>float dopoption(string dop, string objectSpec, string subDataName, string fieldName)</code></p>\n\n\n\n<p>If a field is multivalued, you can access individual parameters by\nadding a suffix.</p>\n<p>For example, \"positiony\" will access the y component of the \"position\"\nfield. If the field is a quaternion, one can use \"rx\", \"ry\", and \"rz\" as\nextensions to get the euler rotations for the quaternion.</p>\n<p>This function is exactly the same as the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopfield\" title=\"Returns the value of a field as a float.\">dopfield()</a> function except the\nfourth and fifth arguments are always \"Options\" and \"0\" respectively.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopoption(\"/obj/dopnet1\", \"obj0\", \"Position\", \"ty\")\n\n</div>\n<p>Returns the y position of object obj0</p>\n<div class=\"code-container\">\ndopoption(\"/obj/dopnet1\", \"obj0\", \"Position\", \"ry\")\n\n</div>\n<p>Returns the ry component of the orientation of object obj0. This\n    will be in degrees.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "dopoptions": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "fieldName"
        ],
        "args": [
            "string",
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopoptions\">dopoptions</a></h1><p class=\"summary\">Returns the value of a DOP field as a string.</p><p><code>string dopoptions(string dop, string objectSpec, string subDataName, string fieldName)</code></p>\n\n\n\n<p>This allows complex types such as vectors to be converted to the\nnative type using the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/vector\" title=\"Converts a string specification into a vector.\">vector()</a> expression.</p>\n<p>This function is exactly the same as the dopfields function except the\nfourth and fifth arguments are always \"Options\" and \"0\" respectively.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvector(dopoptions(\"/obj/dopnet1\", \"obj0\", \"Position\", \"position\"))\n\n</div>\n<p>Gets the position of the object as a string and converts it into a\n    vector.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "doprecordtypename": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "recordTypeNum"
        ],
        "args": [
            "string",
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/doprecordtypename\">doprecordtypename</a></h1><p class=\"summary\">Returns the name of a record in DOPs data given its index.</p><p><code>string doprecordtypename(string dop, string objectSpec, string subDataName, float recordTypeNum)</code></p>\n\n\n\n<p>Returns the name of the <code>recordTypeNum</code>th record that is owned by the\ngiven subData.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndoprecordtypename(\"/obj/dopnet1\", \"obj0\", \"Geometry/Volume\", 0)\n\n</div>\n<p>Returns the name of the first record type of the Volume data which\n    is attached to the Geometry data of obj0.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "dopsolvedopnet": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolvedopnet\">dopsolvedopnet</a></h1><p class=\"summary\">Script solver support function.</p><p><code>string dopsolvedopnet()</code></p>\n\n\n\n<p>This function returns the full path of the DOP Network that contains\nthe script solver that is currently running.</p>\n<p>This is one of a set of expression functions for use by the <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/dop/scriptsolver\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/DOP/scriptsolver.svg\">[Image \ud83d\udd17]</a>Script\nSolver DOP</a>. Calling this function will return an\nempty string if it is called when a script solver is not currently\nsolving for objects.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumobjects\">dopsolvenumobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolveobject\">dopsolveobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumnewobjects\">dopsolvenumnewobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenewobject\">dopsolvenewobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvetimestep\">dopsolvetimestep()</a><div class=\"related-summary\">Script solver support function.</div></p></div>",
        "return": "string"
    },
    "dopsolvenewobject": {
        "argnames": [
            "object_index"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolvenewobject\">dopsolvenewobject</a></h1><p class=\"summary\">Script solver support function.</p><p><code>float dopsolvenewobject(float object_index)</code></p>\n\n\n\n<p>This function is similar to dopsolveobject, except it returns the newly created\nobjects that need to be initialized from a script solver.  The object index\nmust be greater than or equal to zero, and less than the return value of\n<a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolvenumnewobjects\" title=\"Script solver support function.\">dopsolvenumnewobjects()</a>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nset lastobject=`dopsolvenumnewobjects() - 1`\nfor i = 0 to $lastobject\n    echo `dopsolvenewobject($i)`\nend\n\n\n</div>\n<p>Outputs the unique object ids of all the objects being initialized by the\n    current script solver.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenewobject\">dopsolvenewobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumobjects\">dopsolvenumobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumnewobjects\">dopsolvenumnewobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvedopnet\">dopsolvedopnet()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvetimestep\">dopsolvetimestep()</a><div class=\"related-summary\">Script solver support function.</div></p></div>",
        "return": "float"
    },
    "dopsolvenumnewobjects": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolvenumnewobjects\">dopsolvenumnewobjects</a></h1><p class=\"summary\">Script solver support function.</p><p><code>float dopsolvenumnewobjects()</code></p>\n\n\n\n<p>Returns the number of objects being initialized by the script\nsolver that is currently running.</p>\n<p>This is one of a set of expression functions for use by the <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/dop/scriptsolver\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/DOP/scriptsolver.svg\">[Image \ud83d\udd17]</a>Script\nSolver DOP</a>.  See <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolveobject\" title=\"Script solver support function.\">dopsolveobject()</a> and\n<a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolvenumobjects\" title=\"Script solver support function.\">dopsolvenumobjects()</a> for more information.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumnewobjects\">dopsolvenumnewobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolveobject\">dopsolveobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenewobject\">dopsolvenewobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvedopnet\">dopsolvedopnet()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvetimestep\">dopsolvetimestep()</a><div class=\"related-summary\">Script solver support function.</div></p></div>",
        "return": "float"
    },
    "dopsolvenumobjects": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolvenumobjects\">dopsolvenumobjects</a></h1><p class=\"summary\">Script solver support function.</p><p><code>float dopsolvenumobjects()</code></p>\n\n\n\n<p>Returns the number of objects being solved by the script\nsolver that is currently running. Returns zero if it is called\nwhen a script solver is not currently solving for objects.</p>\n<p>This is one of a set of expression functions for use by the <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/dop/scriptsolver\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/DOP/scriptsolver.svg\">[Image \ud83d\udd17]</a>Script\nSolver DOP</a>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumnewobjects\">dopsolvenumnewobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolveobject\">dopsolveobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenewobject\">dopsolvenewobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvedopnet\">dopsolvedopnet()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvetimestep\">dopsolvetimestep()</a><div class=\"related-summary\">Script solver support function.</div></p></div>",
        "return": "float"
    },
    "dopsolveobject": {
        "argnames": [
            "object_index"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolveobject\">dopsolveobject</a></h1><p class=\"summary\">Script solver support function.</p><p><code>float dopsolveobject(float object_index)</code></p>\n\n\n\n<p>This function returns the unique object identifier for the specified\nobject. The object is specified as a number greater than or equal to\nzero, and less than the return value of\n<a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolvenumobjects\" title=\"Script solver support function.\">dopsolvenumobjects()</a>. This function is required\nto get an object id to use in other DOP expression function for getting\ndata about the objects being solved by the script solver.</p>\n<p>This is one of a set of expression functions for use by the <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/dop/scriptsolver\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/DOP/scriptsolver.svg\">[Image \ud83d\udd17]</a>Script\nSolver DOP</a>. Calling this function will return -1\nif it is called when a script solver is not currently solving for\nobjects.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nset lastobject=`dopsolvenumobjects() - 1`\nfor i = 0 to $lastobject\n    echo `dopsolveobject($i)`\nend\n\n\n</div>\n<p>Outputs the unique object ids of all the objects being solved by the\n    current script solver.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenewobject\">dopsolvenewobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumobjects\">dopsolvenumobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumnewobjects\">dopsolvenumnewobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvedopnet\">dopsolvedopnet()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvetimestep\">dopsolvetimestep()</a><div class=\"related-summary\">Script solver support function.</div></p></div>",
        "return": "float"
    },
    "dopsolvetimestep": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsolvetimestep\">dopsolvetimestep</a></h1><p class=\"summary\">Script solver support function.</p><p><code>float dopsolvetimestep()</code></p>\n\n\n\n<p>Returns the timestep size for the script solver that is\ncurrently running.</p>\n<p>This is one of a set of expression functions for use by the <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/dop/scriptsolver\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/DOP/scriptsolver.svg\">[Image \ud83d\udd17]</a>Script\nSolver DOP</a>. Calling this function will return\nzero if it is called when a script solver is not currently solving for\nobjects.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumobjects\">dopsolvenumobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolveobject\">dopsolveobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenumnewobjects\">dopsolvenumnewobjects()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvenewobject\">dopsolvenewobject()</a><div class=\"related-summary\">Script solver support function.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsolvedopnet\">dopsolvedopnet()</a><div class=\"related-summary\">Script solver support function.</div></p></div>",
        "return": "float"
    },
    "dopsttoframe": {
        "argnames": [
            "dop",
            "simulationtime"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsttoframe\">dopsttoframe</a></h1><p class=\"summary\">returns the simulation frame of a given simulation time.</p><p><code>float dopsttoframe(string dop, float simulationtime)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopframe\">dopframe()</a><div class=\"related-summary\">Returns the current frame of the simulation.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopframetost\">dopframetost()</a><div class=\"related-summary\">Returns the simulation time equivalent of a simulation frame.</div></p></div>",
        "return": "float"
    },
    "dopsttot": {
        "argnames": [
            "dop",
            "simulationtime"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsttot\">dopsttot</a></h1><p class=\"summary\">Returns the global time of a given simulation time.</p><p><code>float dopsttot(string dop, float simulationtime)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/doptime\">doptime()</a><div class=\"related-summary\">Returns the current time of a simulation.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopttost\">dopttost()</a><div class=\"related-summary\">Returns the simulation time equivalent to a given global time.</div></p></div>",
        "return": "float"
    },
    "dopsubdataname": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName",
            "subDataNum"
        ],
        "args": [
            "string",
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopsubdataname\">dopsubdataname</a></h1><p class=\"summary\">Returns the name of a subdata of a given DOP object.</p><p><code>string dopsubdataname(string dop, string objectSpec, string subDataName, float subDataNum)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopsubdataname(\"/obj/dopnet1\", \"foobar\", \"\", 0)\n\n</div>\n<p>Returns the name of the first data attached to the object foobar.</p>\n<div class=\"code-container\">\ndopsubdataname(\"/obj/dopnet1\", \"foobar\", \"Geometry\", 3)\n\n</div>\n<p>Returns the name of the 4th subdata attached to the object foobar\u2019s\n    data \"Geometry\".</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "doptime": {
        "argnames": [
            "dop"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/doptime\">doptime</a></h1><p class=\"summary\">Returns the current time of a simulation.</p><p><code>float doptime(string dop)</code></p>\n\n\n\n<p>This will often be equal to the global time $T,\nunless the Time Scale or Offset Time\nparameters of the DOP Network have been changed from their default\nvalues.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopframe\">dopframe()</a><div class=\"related-summary\">Returns the current frame of the simulation.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsttot\">dopsttot()</a><div class=\"related-summary\">Returns the global time of a given simulation time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopttost\">dopttost()</a><div class=\"related-summary\">Returns the simulation time equivalent to a given global time.</div></p></div>",
        "return": "float"
    },
    "doptransform": {
        "argnames": [
            "dop",
            "objectSpec",
            "subDataName"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/doptransform\">doptransform</a></h1><p class=\"summary\">Returns a transformation matrix associated with a piece of data.</p><p><code>matrix doptransform(string dop, string objectSpec, string subDataName)</code></p>\n\n\n\n<p>The data must be either Position data or Geometry data.\nFor Geometry data, if the data name is \"Geometry\", then the transform\nfor any Position data attached to the object is also applied. Thus this\nfunction can be used to transform a point position from the space of the\nraw geometry to simulation space.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndoptransform(\"/obj/dopnet1\", \"obj0\", \"Geometry\")\n\n</div>\n<p>Returns a matrix which is the product of the transform in the\n    Geometry data multiplied by the transform of any Position data on\n    the object.</p>\n</div>\n\n\n</div>",
        "return": "matrix"
    },
    "dopttost": {
        "argnames": [
            "dop",
            "globaltime"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopttost\">dopttost</a></h1><p class=\"summary\">Returns the simulation time equivalent to a given global time.</p><p><code>float dopttost(string dop, float globaltime)</code></p>\n\n\n\n<p>This is similar to the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/doptime\" title=\"Returns the current time of a simulation.\">doptime()</a> expression except\nfor the ability to specify a global time other than the current time.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/dopsttot\">dopsttot()</a><div class=\"related-summary\">Returns the global time of a given simulation time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/doptime\">doptime()</a><div class=\"related-summary\">Returns the current time of a simulation.</div></p></div>",
        "return": "float"
    },
    "dopvelatpos": {
        "argnames": [
            "dop",
            "objectSpec",
            "posx",
            "posy",
            "posz",
            "usevolumevelocity",
            "usepointvelocity"
        ],
        "args": [
            "string",
            "string",
            "float",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dopvelatpos\">dopvelatpos</a></h1><p class=\"summary\">Returns the velocity that a point at a location in simulation space\nwould have if it were attached to a DOP object.</p><p><code>vector dopvelatpos(string dop, string objectSpec, float posx, float posy, float posz, float usevolumevelocity, float usepointvelocity)</code></p>\n\n\n\n<p>This velocity calculation takes into account the velocity and angular\nvelocity of the simulation object as stored in its Position data.</p>\n<p>Setting the usevolumevelocity argument to a non-zero value causes the\nreturned velocity to be affected by a geometry space velocity calculated\nfrom changes in the volumetric representation of the geometry.</p>\n<p>Setting the usepointvelocity argument to a non-zero value causes the\nreturned velocity to be affected by the velocity attribute on the\ngeometry for the object. The geometry velocity attribute is added to the\nresult as a geometry space velocity which is added to the velocity from\nthe Position data. If both usedsdfvelocity and usepointvelocity are\nnon-zero, then the sdf velocity is used, not the point velocity.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ndopvelatpos(\"/obj/dopnet1\", \"obj0\", point(\"/obj/dopnet1:obj0/Geometry\", 0, \"P\", 0), point(\"/obj/dopnet1:obj0/Geometry\", 0, \"P\", 1), point(\"/obj/dopnet1:obj0/Geometry\", 0, \"P\", 2), 1, 0)\n\n</div>\n<p>Returns the simulation space velocity of point 0 of the geometry\n    attached to obj0, taking into account any velocity attribute on the\n    geometry.</p>\n</div>\n\n\n</div>",
        "return": "vector"
    },
    "dot": {
        "argnames": [
            "v0",
            "v1"
        ],
        "args": [
            "vector",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/dot\">dot</a></h1><p class=\"summary\">Computes the dot product of two vectors.</p><p><code>float dot(vector v0, vector v1)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "ease": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ease\">ease</a></h1><p class=\"summary\">Channel segment function: ease-in and -out.</p><p><code>float ease()</code></p>\n\n\n\n<p>Starts at rest and slowly increases the amount\nof change, and then, near the end of the function, gradually reduces the\nrate of change until it is at rest.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easep\">easep()</a><div class=\"related-summary\">Channel segment function: ease-in and -out with configurable acceleration.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easein\">easein()</a><div class=\"related-summary\">Channel segment function: ease-in.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeout\">easeout()</a><div class=\"related-summary\">Channel segment function: ease-out</div></p></div>",
        "return": "float"
    },
    "easein": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/easein\">easein</a></h1><p class=\"summary\">Channel segment function: ease-in.</p><p><code>float easein()</code></p>\n\n\n\n<p>Will slowly ease in to any\nchange.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeinp\">easeinp()</a><div class=\"related-summary\">Channel segment function: ease-in with configurable acceleration.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ease\">ease()</a><div class=\"related-summary\">Channel segment function: ease-in and -out.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeout\">easeout()</a><div class=\"related-summary\">Channel segment function: ease-out</div></p></div>",
        "return": "float"
    },
    "easeinp": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/easeinp\">easeinp</a></h1><p class=\"summary\">Channel segment function: ease-in with configurable acceleration.</p><p><code>float easeinp(float number)</code></p>\n\n\n\n<p>Slowly increases the motion of the model to its maximum value.\nThis is similar to the motion\nof an object accelerating due to gravity. The <code>number</code> controls how\nfast to ease into the motion: a large value defines a high speed at the\nend of the segment.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\neaseinp( 10 )\n\n</div>\n<p>Eases in with a fairly big final velocity.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easein\">easein()</a><div class=\"related-summary\">Channel segment function: ease-in.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easep\">easep()</a><div class=\"related-summary\">Channel segment function: ease-in and -out with configurable acceleration.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeoutp\">easeoutp()</a><div class=\"related-summary\">Channel segment function: ease-out with configurable acceleration.</div></p></div>",
        "return": "float"
    },
    "easeout": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/easeout\">easeout</a></h1><p class=\"summary\">Channel segment function: ease-out</p><p><code>float easeout()</code></p>\n\n\n\n<p>Slowly eases out of any change and comes to rest.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeoutp\">easeoutp()</a><div class=\"related-summary\">Channel segment function: ease-out with configurable acceleration.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ease\">ease()</a><div class=\"related-summary\">Channel segment function: ease-in and -out.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easein\">easein()</a><div class=\"related-summary\">Channel segment function: ease-in.</div></p></div>",
        "return": "float"
    },
    "easeoutp": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/easeoutp\">easeoutp</a></h1><p class=\"summary\">Channel segment function: ease-out with configurable acceleration.</p><p><code>float easeoutp(float number)</code></p>\n\n\n\n<p>Similar to the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/easeinp\" title=\"Channel segment function: ease-in with configurable acceleration.\">easeinp()</a>\nexpression only reversed. The change starts rapidly and begins to slow\nuntil it comes to rest. The <code>number</code> determines the speed (i.e., the\nrate of channel change) at the beginning of the segment. A large value\ndefines a high speed.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\neaseoutp( 3 )\n\n</div>\n<p>Eases out of a fairly high initial speed.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeout\">easeout()</a><div class=\"related-summary\">Channel segment function: ease-out</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easep\">easep()</a><div class=\"related-summary\">Channel segment function: ease-in and -out with configurable acceleration.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeinp\">easeinp()</a><div class=\"related-summary\">Channel segment function: ease-in with configurable acceleration.</div></p></div>",
        "return": "float"
    },
    "easep": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/easep\">easep</a></h1><p class=\"summary\">Channel segment function: ease-in and -out with configurable acceleration.</p><p><code>float easep(float number)</code></p>\n\n\n\n<p>This is a channel expression function which will gradually ease in to\nthe motion and gradually ease out. The <code>number</code> controls how fast to\nease in or out. Mathematically, this argument determines the inflection\npoint of the curve. Increasing the number will shift the inflection\npoint to the right, while fractional numbers will towards zero will\nshift the inflection point to the right.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\neasep( 3 )\n\n</div>\n<p>Eases in slowly and eases out quickly.</p>\n<div class=\"code-container\">\neasep( 0.4 )\n\n</div>\n<p>Eases in quickly and eases out slowly.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ease\">ease()</a><div class=\"related-summary\">Channel segment function: ease-in and -out.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeinp\">easeinp()</a><div class=\"related-summary\">Channel segment function: ease-in with configurable acceleration.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/easeoutp\">easeoutp()</a><div class=\"related-summary\">Channel segment function: ease-out with configurable acceleration.</div></p></div>",
        "return": "float"
    },
    "edgegrouplist": {
        "argnames": [
            "surface_node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/edgegrouplist\">edgegrouplist</a></h1><p class=\"summary\">Returns the list of edge groups in a surface node.</p><p><code>string edgegrouplist(string surface_node)</code></p>\n\n\n\n<p>The returned string is a space separated list of group names.</p>\n<p>To get a list of groups whose names match a pattern, use\n<a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/edgegroupmask\" title=\"Returns the list of edge groups matching a pattern in a surface node.\">edgegroupmask()</a>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primgrouplist\">primgrouplist()</a><div class=\"related-summary\">Returns the list of primitive groups in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointgrouplist\">pointgrouplist()</a><div class=\"related-summary\">Returns the list of point groups in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/edgegroupmask\">edgegroupmask()</a><div class=\"related-summary\">Returns the list of edge groups matching a pattern in a surface node.</div></p></div>",
        "return": "string"
    },
    "edgegroupmask": {
        "argnames": [
            "surface_node",
            "pattern"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/edgegroupmask\">edgegroupmask</a></h1><p class=\"summary\">Returns the list of edge groups matching a pattern in a surface node.</p><p><code>string edgegroupmask(string surface_node, string pattern)</code></p>\n\n\n\n<p>The returned string is a space separated list of group names.</p>\n<p>To simply get a list of all edge groups (no pattern),\nuse <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/edgegrouplist\" title=\"Returns the list of edge groups in a surface node.\">edgegrouplist()</a>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nedgegroupmask(\"/obj/model\", \"group*\")\n\n</div>\n<p>Returns the names of all edge groups in the specified surface node which\n    start with \"group\". So this may be something like \"group1 group2\n    group_smoke\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primgroupmask\">primgroupmask()</a><div class=\"related-summary\">Returns the list of groups matching a pattern in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointgroupmask\">pointgroupmask()</a><div class=\"related-summary\">Returns the list of point groups matching a pattern in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/edgegrouplist\">edgegrouplist()</a><div class=\"related-summary\">Returns the list of edge groups in a surface node.</div></p></div>",
        "return": "string"
    },
    "eval": {
        "argnames": [
            "expression"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/eval\">eval</a></h1><p class=\"summary\">Evaulates a string as an expression returning a float.</p><p><code>float eval(string expression)</code></p>\n\n\n\n<p>Useful for evaluating variables which contain more complex\nexpressions. Returns a floating point value.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nset foo = 1+2 echo `eval($foo)` \n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "evals": {
        "argnames": [
            "expression"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/evals\">evals</a></h1><p class=\"summary\">Evaulates a string as an expression returning a string.</p><p><code>string evals(string expression)</code></p>\n\n\n\n<p>Useful for evaluating variables which contain more complex\nexpressions. This function returns a string value.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nset foo = system(\"ls\") echo `evals($foo)` \n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "execute": {
        "argnames": [
            "command"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/execute\">execute</a></h1><p class=\"summary\">Runs a string as an HScript command and returns the command\u2019s output.</p><p><code>string execute(string command)</code></p>\n\n\n\n<p>Returns a string containing the regular output of the command,\nbut not the error output.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/executee\">executee()</a><div class=\"related-summary\">Runs a string as an HScript command and returns any error output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/executeb\">executeb()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the\ncommand and error output.</div></p></div>",
        "return": "string"
    },
    "executeb": {
        "argnames": [
            "command"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/executeb\">executeb</a></h1><p class=\"summary\">Runs a string as an HScript command and returns the\ncommand and error output.</p><p><code>string executeb(string command)</code></p>\n\n\n\n<p>Returns a string containing\nboth the regular and error output of the command, separated by <code>~~~~</code>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/execute\">execute()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the command\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/executee\">executee()</a><div class=\"related-summary\">Runs a string as an HScript command and returns any error output.</div></p></div>",
        "return": "string"
    },
    "executee": {
        "argnames": [
            "command"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/executee\">executee</a></h1><p class=\"summary\">Runs a string as an HScript command and returns any error output.</p><p><code>string executee(string command)</code></p>\n\n\n\n<p>Returns a string containing\nthe error output of the command, but not the regular output.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/execute\">execute()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the command\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/executeb\">executeb()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the\ncommand and error output.</div></p></div>",
        "return": "string"
    },
    "exp": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/exp\">exp</a></h1><p class=\"summary\">Returns the logarithmic exponentiation of the argument.</p><p><code>float exp(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nexp (x)= $E^x\n\n</div><div class=\"code-container\">\nexp (2)= 7.3338906\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "explodematrix": {
        "argnames": [
            "mat",
            "trs",
            "xyz",
            "component"
        ],
        "args": [
            "matrix",
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/explodematrix\">explodematrix</a></h1><p class=\"summary\">Explodes a 3\u00d73 or 4\u00d74 matrix into the euler rotations required to\nrebuild it.</p><p><code>float explodematrix(matrix mat, string trs, string xyz, string component)</code></p>\n\n\n\n<p>The returned components can be stuffed directly into Houdini\nrotation, scale, and translate channels.</p>\n<p>If you know the pivot point for the transformation, you may want to use the\n<a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/explodematrixp\" title=\"Explodes a 3\u00d73 or 4\u00d74 matrix into the euler rotations required to\nrebuild it.\">explodematrixp()</a> function instead.</p>\n<p><code>mat</code> is the matrix to transform. <code>trs</code> and <code>xyz</code> give the order of the\nexpansion. In trs, a \"t\" represents translation, \"r\" rotation, and \"s\"\nscale. The xyz refers to the order of the rotations. The component is a\nstring describing which channel to extract. It is <code>[trs][xyz]</code>\n(e.g. <code>\"tx\"</code> or <code>\"ry\"</code>), where the <code>t</code>, <code>r</code>, or <code>s</code> chooses the channel\n(translate, rotate, or scale), and the <code>x</code>, <code>y</code>, or <code>z</code> chooses the axis.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nexplodematrix(mlookat(vector(\"[1,0,0]\"),vector(\"[0,1,0]\")), \"RST\", \"XYZ\", \"RZ\")\n</div><div class=\"code-container\">\nexplodematrix(identity(3)*2, \"RST\", \"XYZ\", \"SZ\")\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "explodematrixp": {
        "argnames": [
            "mat",
            "p",
            "trs",
            "xyz",
            "component"
        ],
        "args": [
            "matrix",
            "vector",
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/explodematrixp\">explodematrixp</a></h1><p class=\"summary\">Explodes a 3\u00d73 or 4\u00d74 matrix into the euler rotations required to\nrebuild it.</p><p><code>float explodematrixp(matrix mat, vector p, string trs, string xyz, string component)</code></p>\n\n\n\n<p>The returned components can be stuffed directly into Houdini\nrotation, scale, and translate channels.</p>\n<p>This expression is exactly like\n<a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/explodematrix\" title=\"Explodes a 3\u00d73 or 4\u00d74 matrix into the euler rotations required to\nrebuild it.\">explodematrix()</a>, except it requires you to specify a pivot position\nvector. This is useful if you know the pivot position of the matrix\nbeing processed.</p>\n<p><code>mat</code> is the matrix to transform. <code>trs</code> and <code>xyz</code> give the order of the\nexpansion. In trs, a \"t\" represents translation, \"r\" rotation, and \"s\"\nscale. The xyz refers to the order of the rotations. The component is a\nstring describing which channel to extract. It is <code>[trs][xyz]</code>\n(e.g. <code>\"tx\"</code> or <code>\"ry\"</code>), where the <code>t</code>, <code>r</code>, or <code>s</code> chooses the channel\n(translate, rotate, or scale), and the <code>x</code>, <code>y</code>, or <code>z</code> chooses the axis.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nexplodematrixp(optransform(\"/obj/geo1\"), vector3(ch(\"/obj/geo1/px\"), ch(\"/obj/geo1/py\"), ch(\"/obj/geo1/pz\")), \"RST\", \"XYZ\", \"RZ\")\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "findfile": {
        "argnames": [
            "filename"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/findfile\">findfile</a></h1><p class=\"summary\">Searches the Houdini path for a file.</p><p><code>string findfile(string filename)</code></p>\n\n\n\n<p>The filename specified should be relative to one of the paths specified in the <code>HOUDINI_PATH</code> environment variable.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nfindfile(\"scripts/123.cmd\")\n\n</div><div class=\"code-container\">\nfindfile(\"config/Audio/Error.aiff\")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/findfiles\">findfiles()</a><div class=\"related-summary\">Searches the Houdini path for a file or directory.</div></p></div>",
        "return": "string"
    },
    "findfiles": {
        "argnames": [
            "filename",
            "separator"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/findfiles\">findfiles</a></h1><p class=\"summary\">Searches the Houdini path for a file or directory.</p><p><code>string findfiles(string filename, string separator)</code></p>\n\n\n\n<p>Searches the houdini path for the specified file or\ndirectory, returning a list of all the matches separated by the\nspecified separator. It is handy to use a separator of <code>\\\\n</code> when echoing\nthe results. The filename specified should be relative to one of the paths specified in the <code>HOUDINI_PATH</code> environment variable.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nfindfiles(\"config\", \" \")\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/findfile\">findfile()</a><div class=\"related-summary\">Searches the Houdini path for a file.</div></p></div>",
        "return": "string"
    },
    "fit": {
        "argnames": [
            "num",
            "oldmin",
            "oldmax",
            "newmin",
            "newmax"
        ],
        "args": [
            "float",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/fit\">fit</a></h1><p class=\"summary\">Fits a value from one range to another.</p><p><code>float fit(float num, float oldmin, float oldmax, float newmin, float newmax)</code></p>\n\n\n\n<p>Return a number between newmin and newmax that is relative to num in\nthe range between oldmin and oldmax. If the value is outside the old\nrange, it will be clamped to the new range.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nfit(3,1,4,5,20)=15\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit01\">fit01()</a><div class=\"related-summary\">Fits a value to the 0-1 range.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit11\">fit11()</a><div class=\"related-summary\">Fits a number to the -1 to 1 range.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit10\">fit10()</a><div class=\"related-summary\">Fits a number in the 0-1 range.</div></p></div>",
        "return": "float"
    },
    "fit01": {
        "argnames": [
            "num",
            "newmin",
            "newmax"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/fit01\">fit01</a></h1><p class=\"summary\">Fits a value to the 0-1 range.</p><p><code>float fit01(float num, float newmin, float newmax)</code></p>\n\n\n\n<p>Returns a number between newmin and newmax that is relative to num in\nthe range between 0 and 1. If the value is outside the 0 to 1 it will be\nclamped to the new range.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nfit01(.3,5,20)=9.5\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit\">fit()</a><div class=\"related-summary\">Fits a value from one range to another.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit11\">fit11()</a><div class=\"related-summary\">Fits a number to the -1 to 1 range.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit10\">fit10()</a><div class=\"related-summary\">Fits a number in the 0-1 range.</div></p></div>",
        "return": "float"
    },
    "fit10": {
        "argnames": [
            "num",
            "newmin",
            "newmax"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/fit10\">fit10</a></h1><p class=\"summary\">Fits a number in the 0-1 range.</p><p><code>float fit10(float num, float newmin, float newmax)</code></p>\n\n\n\n<p>Return a number between newmin and newmax that is relative to num in\nthe range between 1 and 0. If the value is outside the 1 and 0 it will\nbe clamped to the new range.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nfit(.3,5,20)=15.5\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit\">fit()</a><div class=\"related-summary\">Fits a value from one range to another.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit01\">fit01()</a><div class=\"related-summary\">Fits a value to the 0-1 range.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit11\">fit11()</a><div class=\"related-summary\">Fits a number to the -1 to 1 range.</div></p></div>",
        "return": "float"
    },
    "fit11": {
        "argnames": [
            "num",
            "newmin",
            "newmax"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/fit11\">fit11</a></h1><p class=\"summary\">Fits a number to the -1 to 1 range.</p><p><code>float fit11(float num, float newmin, float newmax)</code></p>\n\n\n\n<p>Return a number between newmin and newmax that is relative to num in\nthe range between -1 and 1. If the value is outside the -1 to 1 it will\nbe clamped to the new range.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nfit(.3,5,20)=14.75\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit\">fit()</a><div class=\"related-summary\">Fits a value from one range to another.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit01\">fit01()</a><div class=\"related-summary\">Fits a value to the 0-1 range.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/fit10\">fit10()</a><div class=\"related-summary\">Fits a number in the 0-1 range.</div></p></div>",
        "return": "float"
    },
    "floor": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/floor\">floor</a></h1><p class=\"summary\">Returns the largest integer not greater than a number.</p><p><code>float floor(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nfloor(10.2)=10\n\n</div><div class=\"code-container\">\nfloor(-10.2)=-11\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ceil\">ceil()</a><div class=\"related-summary\">Returns the smallest integer not less than the value passed in.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/trunc\">trunc()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part, rounding towards 0.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/int\">int()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/round\">round()</a><div class=\"related-summary\">Rounds a number to the nearest integer.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/frac\">frac()</a><div class=\"related-summary\">Returns the fractional part of a floating-point number.</div></p></div>",
        "return": "float"
    },
    "frac": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/frac\">frac</a></h1><p class=\"summary\">Returns the fractional part of a floating-point number.</p><p><code>float frac(float number)</code></p>\n\n\n\n<p>The fractional\ncomponent is computed using the expression <code>(number - floor(number))</code>,\nwhich may result in unexpected values for negative numbers. If negative\nnumbers are an issue, you may want to call <code>frac(abs(number))</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nfrac(2.501) = 0.501\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/trunc\">trunc()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part, rounding towards 0.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/floor\">floor()</a><div class=\"related-summary\">Returns the largest integer not greater than a number.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ceil\">ceil()</a><div class=\"related-summary\">Returns the smallest integer not less than the value passed in.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/round\">round()</a><div class=\"related-summary\">Rounds a number to the nearest integer.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/int\">int()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part.</div></p></div>",
        "return": "float"
    },
    "ftoa": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ftoa\">ftoa</a></h1><p class=\"summary\">Converts a number to a string.</p><p><code>string ftoa(float number)</code></p>\n\n\n\n<p>Type conversion is usually done automatically.\nHowever, you may wish to use this to force the conversion.</p>\n\n</div>",
        "return": "string"
    },
    "groupbyval": {
        "argnames": [
            "surface_node",
            "class",
            "attribute",
            "id"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/groupbyval\">groupbyval</a></h1><p class=\"summary\">Returns a string describing the set of elements with a given value for an integer attribute.</p><p><code>string groupbyval(string surface_node, float class, string attribute, float id)</code></p>\n\n\n\n<p>The <code>class</code> can be one of <code>D_VERTEX</code>,<code>D_POINT</code>, <code>D_PRIMITIVE</code>, or <code>D_DETAIL</code> for the corresponding attribute class.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ngroupbyval(\"/obj/geo1/facet1\", D_PRIMITIVE, \"piece\", 1)\n\n</div>\n<p>Returns a string describing the set of primitives with a value of 1\n    for the <code>piece</code> attribute in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "groupbyvals": {
        "argnames": [
            "surface_node",
            "class",
            "attribute",
            "id"
        ],
        "args": [
            "string",
            "float",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/groupbyvals\">groupbyvals</a></h1><p class=\"summary\">Returns a string describing the set of elements with a given value for a string attribute.</p><p><code>string groupbyvals(string surface_node, float class, string attribute, string id)</code></p>\n\n\n\n<p>The <code>class</code> can be one of <code>D_VERTEX</code>, <code>D_POINT</code>, <code>D_PRIMITIVE</code>, or <code>D_DETAIL</code> for the corresponding attribute class.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ngroupbyvals(\"/obj/geo1/facet1\", D_PRIMITIVE, \"name\", \"piece1\")\n\n</div>\n<p>Returns a string describing the set of primitives with a value of <code>piece1</code>\n    for the <code>name</code> attribute in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "hasdetailattrib": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/hasdetailattrib\">hasdetailattrib</a></h1><p class=\"summary\">Returns 1 if a specified detail attribute exists.</p><p><code>float hasdetailattrib(string surface_node, string attribute)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "haspoint": {
        "argnames": [
            "group_name",
            "surface_node",
            "point_num"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/haspoint\">haspoint</a></h1><p class=\"summary\">Returns 1 if a specified point is in a specified group.</p><p><code>float haspoint(string group_name, string surface_node, float point_num)</code></p>\n\n\n\n<p>The function will return 0 if the group is a primitive group.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nhaspoint(\"ears\", \"/obj/geo1/facet1\", 4)\n\n</div>\n<p>Returns 1 if the group \"ears\" contains point number 4, otherwise\n    returns 0.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/hasprim\">hasprim()</a><div class=\"related-summary\">Returns 1 if a specified primitive is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointlist\">pointlist()</a><div class=\"related-summary\">Returns a list of all points in a point group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primlist\">primlist()</a><div class=\"related-summary\">Returns a list of all primitives in a surface node.</div></p></div>",
        "return": "float"
    },
    "haspointattrib": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/haspointattrib\">haspointattrib</a></h1><p class=\"summary\">Returns 1 if a specified point attribute exists.</p><p><code>float haspointattrib(string surface_node, string attribute)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "hasprim": {
        "argnames": [
            "group_name",
            "surface_node",
            "prim_num"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/hasprim\">hasprim</a></h1><p class=\"summary\">Returns 1 if a specified primitive is in a specified group.</p><p><code>float hasprim(string group_name, string surface_node, float prim_num)</code></p>\n\n\n\n<p>The function will return 0 if the group is a point group.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nhasprim(\"ears\", \"/obj/geo1/facet1\", 3)\n\n</div>\n<p>Returns 1 if the group \"ears\" contains primitive number 3, otherwise\n    returns 0.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/haspoint\">haspoint()</a><div class=\"related-summary\">Returns 1 if a specified point is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointlist\">pointlist()</a><div class=\"related-summary\">Returns a list of all points in a point group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primlist\">primlist()</a><div class=\"related-summary\">Returns a list of all primitives in a surface node.</div></p></div>",
        "return": "float"
    },
    "hasprimattrib": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/hasprimattrib\">hasprimattrib</a></h1><p class=\"summary\">Returns 1 if a specified primitive attribute exists.</p><p><code>float hasprimattrib(string surface_node, string attribute)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "hasvertexattrib": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/hasvertexattrib\">hasvertexattrib</a></h1><p class=\"summary\">Returns 1 if a specified vertex attribute exists.</p><p><code>float hasvertexattrib(string surface_node, string attribute)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "hextoint": {
        "argnames": [
            "value"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/hextoint\">hextoint</a></h1><p class=\"summary\">Converts a hexadecimal argument string into an integer.</p><p><code>float hextoint(string value)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nhextoint(\"A1\")\n\n</div>\n<p>Returns 161.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/inttohex\">inttohex()</a><div class=\"related-summary\">Converts a number into a hexadecimal string.</div></p></div>",
        "return": "float"
    },
    "hsv": {
        "argnames": [
            "red",
            "green",
            "blue",
            "component"
        ],
        "args": [
            "float",
            "float",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/hsv\">hsv</a></h1><p class=\"summary\">Converts RGB values to HSV components.</p><p><code>float hsv(float red, float green, float blue, string component)</code></p>\n\n\n\n<p>The <code>component</code> should be one of <code>\"h\"</code>, <code>\"s\"</code> or <code>\"v\"</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nhsv(.3, .6, .4, \"h\")\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "ic": {
        "argnames": [
            "input_index",
            "channel_index",
            "index"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ic\">ic</a></h1><p class=\"summary\">Evaluates a CHOP\u2019s input channel at a specific index.</p><p><code>float ic(float input_index, float channel_index, float index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nic(0, 2, 10)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "ice": {
        "argnames": [
            "input_index"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ice\">ice</a></h1><p class=\"summary\">Returns the end index of a CHOP\u2019s input.</p><p><code>float ice(float input_index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nice(0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "icl": {
        "argnames": [
            "input_index"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/icl\">icl</a></h1><p class=\"summary\">Returns the length of a CHOP\u2019s input, in samples.</p><p><code>float icl(float input_index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nicl(0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "icmax": {
        "argnames": [
            "input_index",
            "channel_index"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax</a></h1><p class=\"summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</p><p><code>float icmax(float input_index, float channel_index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nicmax(0, 2)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "icmin": {
        "argnames": [
            "input_index",
            "channel_index"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin</a></h1><p class=\"summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</p><p><code>float icmin(float input_index, float channel_index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nicmin(0, 2)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "icn": {
        "argnames": [
            "input_index"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/icn\">icn</a></h1><p class=\"summary\">Returns the number of channels in a CHOP\u2019s input.</p><p><code>float icn(float input_index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nicn(0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "icr": {
        "argnames": [
            "input_index"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/icr\">icr</a></h1><p class=\"summary\">Returns the sample rate of a CHOP\u2019s input.</p><p><code>float icr(float input_index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nicr(0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "ics": {
        "argnames": [
            "input_index"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ics\">ics</a></h1><p class=\"summary\">Returns the start index of a CHOP\u2019s input.</p><p><code>float ics(float input_index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nics(0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "identity": {
        "argnames": [
            "size"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/identity\">identity</a></h1><p class=\"summary\">Creates an identity matrix.</p><p><code>matrix identity(float size)</code></p>\n\n\n\n<p>The resulting identity matrix will have <code>size</code> rows\nand <code>size</code> columns.</p>\n\n</div>",
        "return": "matrix"
    },
    "if": {
        "argnames": [
            "expression",
            "true_value",
            "false_value"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/if\">if</a></h1><p class=\"summary\">Returns the value of the second or third argument depending on the\ntruth of the first argument.</p><p><code>float if(float expression, float true_value, float false_value)</code></p>\n\n\n\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>This is a function, which means all parameters to the function are\n    evaluated. So something like if($F &gt; 1, system('echo 1'),\n    system('echo 2')) will result in both system calls being run\n    regardless of the result of the expression.</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nif ($F&lt;12, $F, 75)\n\n</div>\n<p>When the current frame number (<code>$F</code>) is less than 12,\n    returns the current frame number, otherwise returns <code>75</code>.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ifs\">ifs()</a><div class=\"related-summary\">Returns the string value of the second or third argument depending on the\ntruth of the first argument.</div></p></div>",
        "return": "float"
    },
    "ifs": {
        "argnames": [
            "expression",
            "true_value",
            "false_value"
        ],
        "args": [
            "float",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ifs\">ifs</a></h1><p class=\"summary\">Returns the string value of the second or third argument depending on the\ntruth of the first argument.</p><p><code>string ifs(float expression, string true_value, string false_value)</code></p>\n\n\n\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>This is a function, which means all parameters to the function are\n    evaluated. So something like ifs($F &gt; 1, system('echo one'),\n    system('echo two')) will result in both system calls being run\n    regardless of the result of the expression.</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nifs ($F&lt;12, padzero(4, $F), \"0075\")\n\n</div>\n<p>When the current frame number (<code>$F</code>) is less than 12,\n    returns a string containing the current frame number padded\n    to four digits, otherwise returns <code>0075</code>.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/if\">if()</a><div class=\"related-summary\">Returns the value of the second or third argument depending on the\ntruth of the first argument.</div></p></div>",
        "return": "string"
    },
    "imgbounds": {
        "argnames": [
            "foo",
            "bar",
            "baz",
            "qux"
        ],
        "args": [
            "string",
            "string",
            "string",
            "float"
        ],
        "return": "float"
    },
    "index": {
        "argnames": [
            "source",
            "pattern"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/index\">index</a></h1><p class=\"summary\">Finds the first occurrence of a pattern in a string.</p><p><code>float index(string source, string pattern)</code></p>\n\n\n\n<p>Returns the number of characters before <code>pattern</code> occurs in\n<code>source</code>. Returns -1 if the pattern is not found.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `index(\"Testing index\", \"sting\")`\n\n</div>\n<p>Prints 2</p>\n<div class=\"code-container\">\necho `index(\"Testing index\", \"i\")`\n\n</div>\n<p>Prints 4</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rindex\">rindex()</a><div class=\"related-summary\">Finds the last occurrence of a pattern in a string.</div></p></div>",
        "return": "float"
    },
    "instancepoint": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/instancepoint\">instancepoint</a></h1><p class=\"summary\">Returns the point number currently being instanced onto.</p><p><code>float instancepoint()</code></p>\n\n\n\n<p>This function takes no arguments. You can use this function in\nparameter expressions on objects being instanced\n(see <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../copy/instancing\">point instancing</a>). It returns the point\nnumber the object is being instanced onto. You can use this to\nvary <em>object-level</em> parameters (such as transforms or material\noverrides) between instances.</p>\n<p>You can <strong>not</strong> use this function at the surface level, because\ninstancing only works at the object level.</p>\n\n</div>",
        "return": "float"
    },
    "int": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/int\">int</a></h1><p class=\"summary\">Converts a number to an integer by truncating any fractional part.</p><p><code>float int(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nint(2.501)=2\n\n</div><div class=\"code-container\">\nint(-2.501)=-2\n\n</div><div class=\"code-container\">\nint(0.2)=0\n\n</div><div class=\"code-container\">\nint(-.2)=0\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/trunc\">trunc()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part, rounding towards 0.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/floor\">floor()</a><div class=\"related-summary\">Returns the largest integer not greater than a number.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ceil\">ceil()</a><div class=\"related-summary\">Returns the smallest integer not less than the value passed in.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/round\">round()</a><div class=\"related-summary\">Rounds a number to the nearest integer.</div></p></div>",
        "return": "float"
    },
    "inttohex": {
        "argnames": [
            "value"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/inttohex\">inttohex</a></h1><p class=\"summary\">Converts a number into a hexadecimal string.</p><p><code>string inttohex(float value)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ninttohex(123)\n\n</div>\n<p>Returns \"0000007B\"</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/hextoint\">hextoint()</a><div class=\"related-summary\">Converts a hexadecimal argument string into an integer.</div></p></div>",
        "return": "string"
    },
    "invert": {
        "argnames": [
            "mat"
        ],
        "args": [
            "matrix"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/invert\">invert</a></h1><p class=\"summary\">Inverts a matrix.</p><p><code>matrix invert(matrix mat)</code></p>\n\n\n\n<p>This is only valid if the matrix is a 4\u00d74 or\n3\u00d73 matrix. If the matrix is larger than 4\u00d74, the matrix will be\nconverted to a 4\u00d74 matrix before it is inverted. If the matrix is\nsmaller than 3\u00d73, the matrix will be enlarged to a 3\u00d73 matrix before it\nis inverted. The results of enlarging the matrix to a 3\u00d73 are not\nguaranteed.</p>\n\n</div>",
        "return": "matrix"
    },
    "iprquery": {
        "argnames": [
            "query",
            "pane",
            "x",
            "y"
        ],
        "args": [
            "string",
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/iprquery\">iprquery</a></h1><p class=\"summary\">Queries numeric (floating point) data from an interactive render pane.</p><p><code>float iprquery(string query, string pane, float x, float y)</code></p>\n\n\n\n<p>Use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/iprquerys\" title=\"Queries textual (string) data from an interactive render pane.\">iprquerys()</a> to query textual (string) information.</p>\n<p>The <code>query</code> string argument specifies what type of information to\nretrieve (see below). The <code>pane</code> argument specifies the name of the\npane you want to retrieve information for.</p>\n<p>The <code>x</code> and <code>y</code> arguments are used by some query types to specify\nadditional query parameters. For queries that do not require extra\nparameters, they are ignored.</p>\n<p>The <code>query</code> string can be one of the following values:</p>\n\n<p>\n<code>cropx0</code>, <code>cropx1</code>, <code>cropy0</code>, <code>cropy1</code>\n\n<div class=\"content\">\n<p>Returns the left, right, top, or bottom values of the currently\n    selected crop region.</p>\n</div>\n</p>\n<p>\n<code>exist.<code>plane_name</code></code>\n\n<div class=\"content\">\n<p>Returns the index of the given plane if it exists in the rendered\n    image, or -1 if it does not.</p>\n</div>\n</p>\n<p>\n<code>ipr</code>\n\n<div class=\"content\">\n<p>Returns 1 if the IPR button is on, or 0 if it is off.</p>\n</div>\n</p>\n<p>\n<code>lock</code>\n\n<div class=\"content\">\n<p>Returns 1 if the lock button is on (prevents automatic\n    re-rendering), or 0 if it is off.</p>\n</div>\n</p>\n<p>\n<code>nplanes</code>\n\n<div class=\"content\">\n<p>Returns the number of deep raster planes in the current image.</p>\n</div>\n</p>\n<p>\n<code>object.ptinstance</code>\n\n<div class=\"content\">\n<p>Point number of the instance object (see \"Object queries\" below)\n    that contributed the pixel at <code>x</code>,<code>y</code>. The <code>x</code> and <code>y</code>\n    variables are coordinates in the rendered image.</p>\n</div>\n</p>\n<p>\n<code>object.primitive</code>\n\n<div class=\"content\">\n<p>Primitive number of the geometry object (see \"Object queries\" below)\n    that contributed the pixel at <code>x</code>,<code>y</code>. The <code>x</code> and <code>y</code>\n    variables are coordinates in the rendered image.</p>\n</div>\n</p>\n<p>\n<code>pindex.<code>name</code></code>\n\n<div class=\"content\">\n<p>Returns the index of the deep raster plane named <code>name</code>. If there\n    is no plane by that name, returns -1.</p>\n</div>\n</p>\n<p>\n<code>plane.vsize</code>\n\n<div class=\"content\">\n<p>Returns the vector size of the plane at the index specified by the\n    <code>x</code> argument to this function. For example, to get the vector size\n    of the third deep raster plane:</p>\n<div class=\"code-container\">\niprquery(\"plane.vsize\", $PANE, 2, 0)\n\n</div>\n<p>(The <code>y</code> argument, here set to 0, is ignored.)</p>\n</div>\n</p>\n<p>\n<code>plane.<code>name</code>[.r|g|b|a]</code>\n\n<div class=\"content\">\n<p>Returns the value of the pixel component at <code>x</code>,<code>y</code> of the plane\n    named <code>name</code>. For example:</p>\n<div class=\"code-container\">\niprquery(\"plane.C.g\", $PANE, $IX, $IY)\n\n</div>\n<p>If you don\u2019t specify a component name (<code>.r</code>, <code>.g</code>, <code>.b</code>, or <code>.a</code>),\n    returns the value of the first component.</p>\n<p>You can also use <code>.x</code>, <code>.y</code>, <code>.z</code>, and <code>.w</code> as alternate names for\n    <code>.r</code>, <code>.g</code>, <code>.b</code>, and <code>.a</code>. For example, <code>plane.N.y</code> is equivalent\n    to <code>plane.N.g</code>.</p>\n</div>\n</p>\n<p>\n<code>xres</code>, <code>yres</code>\n\n<div class=\"content\">\n<p>horizontal or vertical resolution of the image in the interactive\n    render viewer.</p>\n</div>\n</p>\n\n\n<h2 class=\"label heading\" id=\"object-queries\">\n            \n            Object queries\n        </h2>\n<div class=\"content\" id=\"object-queries-body\">\n<p>The queries beginning with <code>object.</code> give you information about the\nHoudini objects that produced the IPR image. These queries use two\ndeep raster planes mantra creates automatically when rendering.\nThese floating-point planes are named <code>Op-Id</code> and <code>Prim-Id</code>. Houdini\nmaintains a table mapping the data <code>Op-Id</code> plane to information\nabout the instance and geometry in the render. <em>The numbers in the\nOp-Id plane are meaningless otherwise</em>.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/iprquerys\">iprquerys()</a><div class=\"related-summary\">Queries textual (string) data from an interactive render pane.</div></p></div>",
        "return": "float"
    },
    "iprquerys": {
        "argnames": [
            "query",
            "pane",
            "x",
            "y"
        ],
        "args": [
            "string",
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/iprquerys\">iprquerys</a></h1><p class=\"summary\">Queries textual (string) data from an interactive render pane.</p><p><code>string iprquerys(string query, string pane, float x, float y)</code></p>\n\n\n\n<p>Use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/iprquery\" title=\"Queries numeric (floating point) data from an interactive render pane.\">iprquery()</a> to query numeric (floating point) information.</p>\n<p>The <code>query</code> string argument specifies what type of information to\nretrieve (see below). The <code>pane</code> argument specifies the name of the\npane you want to retrieve information for.</p>\n<p>The <code>x</code> and <code>y</code> arguments are used by some query types to specify\nadditional query parameters. For queries that do not require extra\nparameters, they are ignored.</p>\n<p>The <code>query</code> string can be one of the following values:</p>\n\n<p>\nobject.instance\n        \n<div class=\"content\">\n<p>Full path of the instanced object that contributed the pixel at\n    <code>x</code>, <code>y</code>. If the object was not instanced, this will be the same\n    as <code>object.geometry</code>. See \"Object queries\" below. The <code>x</code> and\n    <code>y</code> arguments are coordinates in the rendered image.</p>\n</div>\n</p>\n<p>\nobject.geometry\n        \n<div class=\"content\">\n<p>Full path of the geometry object that contributed the pixel at\n    <code>x</code>, <code>y</code>. See \"Object queries\" below. The <code>x</code> and <code>y</code>\n    arguments are coordinates in the rendered image.</p>\n</div>\n</p>\n<p>\nobject.surface\n        \n<div class=\"content\">\n<p>Full path of the surface shader that contributed the pixel at <code>x</code>,\n    <code>y</code>. See \"Object queries\" below. The <code>x</code> and <code>y</code> arguments are\n    coordinates in the rendered image.</p>\n</div>\n</p>\n<p>\nobject.displace\n        \n<div class=\"content\">\n<p>Full path of the displacement shader that affected the pixel at\n    <code>x</code>, <code>y</code>. See \"Object queries\" below. The <code>x</code> and <code>y</code>\n    arguments are coordinates in the rendered image.</p>\n</div>\n</p>\n<p>\nplane.name\n        \n<div class=\"content\">\n<p>Returns the name of the plane at the index specified by the <code>x</code>\n    argument to this function. For example, to get the name of the third\n    deep raster plane:</p>\n<div class=\"code-container\">\niprquerys(\"plane.name\", $PANE, 2, 0)\n\n</div>\n<p>(The <code>y</code> argument, here set to 0, is ignored.)</p>\n</div>\n</p>\n<p>\nrop\n        \n<div class=\"content\">\n<p>Returns the full path of the output driver node displayed in the\n    interactive render pane.</p>\n</div>\n</p>\n\n\n<h2 class=\"label heading\" id=\"object-queries\">\n            \n            Object queries\n        </h2>\n<div class=\"content\" id=\"object-queries-body\">\n<p>The queries beginning with <code>object.</code> give you information about the\nHoudini objects that produced the IPR image. These queries use two\ndeep raster planes mantra creates automatically when rendering.\nThese floating-point planes are named <code>Op_Id</code> and <code>Prim_Id</code>. Houdini\nmaintains a table mapping the data <code>Op_Id</code> plane to information\nabout the instance and geometry in the render. The numbers in the\n<code>Op_Id</code> plane are meaningless otherwise.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/iprquery\">iprquery()</a><div class=\"related-summary\">Queries numeric (floating point) data from an interactive render pane.</div></p></div>",
        "return": "string"
    },
    "isclosed": {
        "argnames": [
            "surface_node",
            "prim_num"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/isclosed\">isclosed</a></h1><p class=\"summary\">Returns 1 if a primitive is closed.</p><p><code>float isclosed(string surface_node, float prim_num)</code></p>\n\n\n\n<p>This is the same as <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/iswrapu\" title=\"Returns 1 if a specified primitive is wrapped in U.\">iswrapu()</a>, and\nworks on polygonal, NURBS, and Bezier curves and surfaces.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/iswrapu\">iswrapu()</a><div class=\"related-summary\">Returns 1 if a specified primitive is wrapped in U.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/iswrapv\">iswrapv()</a><div class=\"related-summary\">Returns 1 if a specified primitive is wrapped in V.</div></p></div>",
        "return": "float"
    },
    "iscollided": {
        "argnames": [
            "surface_node",
            "pointnumber"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/iscollided\">iscollided</a></h1><p class=\"summary\">Returns 1 if a specified point has collided with something.</p><p><code>float iscollided(string surface_node, float pointnumber)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\niscollided(\"../particle1\", $PT)\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "ishvariable": {
        "argnames": [
            "variable_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/ishvariable\">ishvariable</a></h1><p class=\"summary\">Returns 1 if a specified Houdini environment variable exists.</p><p><code>float ishvariable(string variable_name)</code></p>\n\n\n\n<p>Checks only houdini variables to see if <code>variable_name</code> exists.\nSystem variables are not checked.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/isvariable\">isvariable()</a><div class=\"related-summary\">Returns 1 if a specified Houdini or system environment variable exists.</div></p></div>",
        "return": "float"
    },
    "isspline": {
        "argnames": [
            "surface_node",
            "prim_num"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/isspline\">isspline</a></h1><p class=\"summary\">Returns 1 if a specified primitive is a NURBs or Bezier curve or surface.</p><p><code>float isspline(string surface_node, float prim_num)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "isstuck": {
        "argnames": [
            "surface_node",
            "pointnumber"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/isstuck\">isstuck</a></h1><p class=\"summary\">Returns 1 if a specified point is a stuck particle.</p><p><code>float isstuck(string surface_node, float pointnumber)</code></p>\n\n\n\n<p>Warning: this function can be slow.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nisstuck(\"../particle1\", $PT)\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "isvariable": {
        "argnames": [
            "variable_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/isvariable\">isvariable</a></h1><p class=\"summary\">Returns 1 if a specified Houdini or system environment variable exists.</p><p><code>float isvariable(string variable_name)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ishvariable\">ishvariable()</a><div class=\"related-summary\">Returns 1 if a specified Houdini environment variable exists.</div></p></div>",
        "return": "float"
    },
    "iswrapu": {
        "argnames": [
            "surface_node",
            "prim_num"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/iswrapu\">iswrapu</a></h1><p class=\"summary\">Returns 1 if a specified primitive is wrapped in U.</p><p><code>float iswrapu(string surface_node, float prim_num)</code></p>\n\n\n\n<p>Returns 1 if the primitive is wrapped in the u direction. For curves,\nthis is the same as <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/isclosed\" title=\"Returns 1 if a primitive is closed.\">isclosed()</a>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/isclosed\">isclosed()</a><div class=\"related-summary\">Returns 1 if a primitive is closed.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/iswrapv\">iswrapv()</a><div class=\"related-summary\">Returns 1 if a specified primitive is wrapped in V.</div></p></div>",
        "return": "float"
    },
    "iswrapv": {
        "argnames": [
            "surface_node",
            "prim_num"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/iswrapv\">iswrapv</a></h1><p class=\"summary\">Returns 1 if a specified primitive is wrapped in V.</p><p><code>float iswrapv(string surface_node, float prim_num)</code></p>\n\n\n\n<p>Curves, circles, etc, are always considered to be unwrapped in V\nsince they are only exist in U.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/isclosed\">isclosed()</a><div class=\"related-summary\">Returns 1 if a primitive is closed.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/iswrapu\">iswrapu()</a><div class=\"related-summary\">Returns 1 if a specified primitive is wrapped in U.</div></p></div>",
        "return": "float"
    },
    "length": {
        "argnames": [
            "x",
            "y",
            "z"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/length\">length</a></h1><p class=\"summary\">Returns the length of a vector.</p><p><code>float length(float x, float y, float z)</code></p>\n\n\n\n<p>A.K.A <code>sqrt(x*x + y*y + z*z)</code>.</p>\n\n</div>",
        "return": "float"
    },
    "linear": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/linear\">linear</a></h1><p class=\"summary\">Channel segment function: linear interpolation.</p><p><code>float linear()</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/constant\">constant()</a><div class=\"related-summary\">Channel segment function: constant value.</div></p></div>",
        "return": "float"
    },
    "listbyval": {
        "argnames": [
            "surface_node",
            "class",
            "attribute",
            "id"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/listbyval\">listbyval</a></h1><p class=\"summary\">Returns a list of elements with a given value for an integer attribute.</p><p><code>string listbyval(string surface_node, float class, string attribute, float id)</code></p>\n\n\n\n<p>The <code>class</code> can be one of <code>D_VERTEX</code>,<code>D_POINT</code>, <code>D_PRIMITIVE</code>, or <code>D_DETAIL</code> for the corresponding attribute class.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nlistbyval(\"/obj/geo1/facet1\", D_PRIMITIVE, \"piece\", 1)\n\n</div>\n<p>Returns a list of primitives with a value of 1 for the <code>piece</code> attribute\n    in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "listbyvals": {
        "argnames": [
            "surface_node",
            "class",
            "attribute",
            "id"
        ],
        "args": [
            "string",
            "float",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/listbyvals\">listbyvals</a></h1><p class=\"summary\">Returns a list of elements with a given value for a string attribute.</p><p><code>string listbyvals(string surface_node, float class, string attribute, string id)</code></p>\n\n\n\n<p>The <code>class</code> can be one of <code>D_VERTEX</code>, <code>D_POINT</code>, <code>D_PRIMITIVE</code>, or <code>D_DETAIL</code> for the corresponding attribute class.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nlistbyvals(\"/obj/geo1/facet1\", D_PRIMITIVE, \"name\", \"piece1\")\n\n</div>\n<p>Returns a list of primitives with a value of <code>piece1</code> for the <code>name</code>\n    attribute in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "lock": {
        "argnames": [
            "float"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/lock\">lock</a></h1><p class=\"summary\">Returns a value that cannot be changed.</p><p><code>float lock(float float)</code></p>\n\n\n\n<p>This function simply returns the value of its argument. However, it is\nspecial in that if an expression is enclosed in a lock function, then\nits values cannot be changed, until the lock expression is removed.</p>\n\n</div>",
        "return": "float"
    },
    "log": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/log\">log</a></h1><p class=\"summary\">Returns the natural logarithm of the argument.</p><p><code>float log(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nlog (2.718281828)= 1\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "log10": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/log10\">log10</a></h1><p class=\"summary\">Returns the base 10 logarithm of the argument.</p><p><code>float log10(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nlog10(10) = 1\n\n</div><div class=\"code-container\">\nlog10(100) = 2\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "match": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/match\">match</a></h1><p class=\"summary\">Channel segment function: matches the incoming and outgoing slopes.</p><p><code>float match()</code></p>\n\n\n\n<p>The curve will move smoothly from the in coming value to\nthe out going value.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatch\">vmatch()</a><div class=\"related-summary\">Channel segment function: matches the incoming and outgoing slopes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/matchin\">matchin()</a><div class=\"related-summary\">Channel segment function: matches the incoming slope.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/matchout\">matchout()</a><div class=\"related-summary\">Channel segment function: matches the outgoing slope.</div></p></div>",
        "return": "float"
    },
    "matchin": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/matchin\">matchin</a></h1><p class=\"summary\">Channel segment function: matches the incoming slope.</p><p><code>float matchin()</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatchin\">vmatchin()</a><div class=\"related-summary\">Channel segment function: matches the incoming slope.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/match\">match()</a><div class=\"related-summary\">Channel segment function: matches the incoming and outgoing slopes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/matchout\">matchout()</a><div class=\"related-summary\">Channel segment function: matches the outgoing slope.</div></p></div>",
        "return": "float"
    },
    "matchout": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/matchout\">matchout</a></h1><p class=\"summary\">Channel segment function: matches the outgoing slope.</p><p><code>float matchout()</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatchout\">vmatchout()</a><div class=\"related-summary\">Channel segment function: matches the outgoing slope.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/match\">match()</a><div class=\"related-summary\">Channel segment function: matches the incoming and outgoing slopes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/matchin\">matchin()</a><div class=\"related-summary\">Channel segment function: matches the incoming slope.</div></p></div>",
        "return": "float"
    },
    "matrix": {
        "argnames": [
            "pattern"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/matrix\">matrix</a></h1><p class=\"summary\">Converts a string specification into a matrix.</p><p><code>matrix matrix(string pattern)</code></p>\n\n\n\n<p>The string should start with a square bracket,\nfollowed by a series of rows (specified as vector\npatterns - see the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/vector\" title=\"Converts a string specification into a vector.\">vector()</a> function), followed by a trailing square\nbracket.</p>\n<p>To access a row out of the matrix, use the square bracket operator.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nmatrix m = matrix(\"[[1,2,3][2,3,5][-3,2,-3]]\");\nvector v = m[0];    # v is [1,2,3]\nfloat  f = m[0][2]; # f is 3\n\n</div>\n</div>\n\n\n</div>",
        "return": "matrix"
    },
    "matrixtoquat": {
        "argnames": [
            "m"
        ],
        "args": [
            "matrix"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/matrixtoquat\">matrixtoquat</a></h1><p class=\"summary\">Converts a rotation matrix to a quaternion.</p><p><code>vector matrixtoquat(matrix m)</code></p>\n\n\n\n<p>Computes a quaternion which represents the rotation specified by the\nmatrix.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/quattomatrix\">quattomatrix()</a><div class=\"related-summary\">Converts quaternion to a 3\u00d73 rotation matrix.</div></p></div>",
        "return": "vector"
    },
    "max": {
        "argnames": [
            "value1",
            "value2"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/max\">max</a></h1><p class=\"summary\">Returns the larger of two values.</p><p><code>float max(float value1, float value2)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nmax (5,3) = 5\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "mcols": {
        "argnames": [
            "mat"
        ],
        "args": [
            "matrix"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mcols\">mcols</a></h1><p class=\"summary\">Returns the number of columns in a matrix.</p><p><code>float mcols(matrix mat)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "metaweight": {
        "argnames": [
            "surface_node",
            "x",
            "y",
            "z"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/metaweight\">metaweight</a></h1><p class=\"summary\">Returns the weight of a metaball at a specific location.</p><p><code>float metaweight(string surface_node, float x, float y, float z)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nmetaweight(\"/obj/geo1/metaball\", $TX, $TX, $TZ)\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "min": {
        "argnames": [
            "value1",
            "value2"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/min\">min</a></h1><p class=\"summary\">Returns the smaller of two values.</p><p><code>float min(float value1, float value2)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nmin (5,3) = 3\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "mindist": {
        "argnames": [
            "surface_node",
            "point_num",
            "surface_node",
            "prim_num",
            "return_type"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mindist\">mindist</a></h1><p class=\"summary\">Finds the smallest distance between a point and a primitive.</p><p><code>float mindist(string surface_node, float point_num, string surface_node, float prim_num, float return_type)</code></p>\n\n\n\n<p>This expression is an alias for <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/pointdist\" title=\"Returns the distance between a point and a primitive.\">pointdist()</a>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointdist\">pointdist()</a><div class=\"related-summary\">Returns the distance between a point and a primitive.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primdist\">primdist()</a><div class=\"related-summary\">Returns the minimum distance and closest points between two primitives.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/distance\">distance()</a><div class=\"related-summary\">Returns the distance between two 3D points.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/uvdist\">uvdist()</a><div class=\"related-summary\">Returns the distance between parameteric locations on two primitives.</div></p></div>",
        "return": "float"
    },
    "mlookat": {
        "argnames": [
            "v1",
            "v2"
        ],
        "args": [
            "vector",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mlookat\">mlookat</a></h1><p class=\"summary\">Computes the transformation matrix of a lookat from one vector to another.</p><p><code>matrix mlookat(vector v1, vector v2)</code></p>\n\n\n\n<p>Computes a transform matrix specifying a lookat from vector <code>v1</code> to\nthe vector <code>v2</code>.</p>\n<p>The vectors are converted to 3 vectors for\nthis computation. The resulting matrix will be a 3\u00d73 matrix.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nexplodematrix(mlookat(vtorigin(\"\",\"/obj/from\"),vtorigin(\"\",\"/obj/to\")),\"SRT\",\"XYZ\",\"RX\")\n\n</div>\n<p>Computes the lookat matrix and returns the rotation value for RX.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/mlookatup\">mlookatup()</a><div class=\"related-summary\">Computes the transformation matrix of a lookat from one vector to another, with an up vector.</div></p></div>",
        "return": "matrix"
    },
    "mlookatup": {
        "argnames": [
            "v1",
            "v2",
            "upv"
        ],
        "args": [
            "vector",
            "vector",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mlookatup\">mlookatup</a></h1><p class=\"summary\">Computes the transformation matrix of a lookat from one vector to another, with an up vector.</p><p><code>matrix mlookatup(vector v1, vector v2, vector upv)</code></p>\n\n\n\n<p>Computes a transform matrix specifying a lookat from vector <code>v1</code> to\nthe vector <code>v2</code>, taking up vector <code>upv</code> into consideration.</p>\n<p>The vectors are converted to 3 vectors for\nthis computation. The resulting matrix will be a 3\u00d73 matrix.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nexplodematrix(mlookatup(vtorigin(\"\",\"/obj/from\"),vtorigin(\"\",\"/obj/to\"),vtorigin(\"\",\"/obj/up\")),\"SRT\",\"XYZ\",\"RX\")\n\n</div>\n<p>Computes the lookat matrix and returns the rotation value for RX.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/mlookat\">mlookat()</a><div class=\"related-summary\">Computes the transformation matrix of a lookat from one vector to another.</div></p></div>",
        "return": "matrix"
    },
    "mobjlookat": {
        "argnames": [
            "base_node",
            "target_node",
            "upv"
        ],
        "args": [
            "string",
            "string",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mobjlookat\">mobjlookat</a></h1><p class=\"summary\">Computes the transformation matrix\nof a lookat from one object to another.</p><p><code>matrix mobjlookat(string base_node, string target_node, vector upv)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nmobjlookat(\"/obj/null1\", \"/obj/null2\", vector3(0,1,0))\n\n</div>\n<p>Returns the transformation matrix to get null1 to look at null2</p>\n</div>\n\n\n</div>",
        "return": "matrix"
    },
    "modblend": {
        "argnames": [
            "val1",
            "val2",
            "length",
            "weight"
        ],
        "args": [
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/modblend\">modblend</a></h1><p class=\"summary\">Blends the two modular values.</p><p><code>float modblend(float val1, float val2, float length, float weight)</code></p>\n\n\n\n<p>This function can be used to correctly\nblend two angles or other cyclic values.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nmodblend(355, 5, 360, 0.5)\n\n</div>\n<p>Returns 0. Simple linearly blending of the two values would result\n    in an incorrect value of 180.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "morient": {
        "argnames": [
            "zaxis",
            "yaxis"
        ],
        "args": [
            "vector",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/morient\">morient</a></h1><p class=\"summary\">Computes the transformation matrix to orient along specific Z and Y axes.</p><p><code>matrix morient(vector zaxis, vector yaxis)</code></p>\n\n\n\n<p>Computes the transform matrix to rotate the x,y,z axes such that the\nspecified zaxis is the new zaxis and yaxis the new yaxis. The resulting\nmatrix is a 3\u00d73 matrix.</p>\n\n</div>",
        "return": "matrix"
    },
    "mousepane": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mousepane\">mousepane</a></h1><p class=\"summary\">Returns the full name of the pane currently under the mouse pointer.</p><p><code>string mousepane()</code></p>\n\n\n\n<p>If this function is executed when the mouse pointer is not over any pane\n(such as when it is outside the Houdini window) an empty string is\nreturned. An empty string is also returned when this function is\nexecuted within non-graphical Houdini applications such as hscript.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/mousepath\">mousepath()</a><div class=\"related-summary\">Returns the node path of the pane currently under the mouse pointer.</div></p></div>",
        "return": "string"
    },
    "mousepath": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mousepath\">mousepath</a></h1><p class=\"summary\">Returns the node path of the pane currently under the mouse pointer.</p><p><code>string mousepath()</code></p>\n\n\n\n<p>If this function is executed when the mouse\npointer is not over any pane (such as when it is outside the Houdini\nwindow) an empty string is returned. An empty string is also returned\nwhen this function is executed within non-graphical Houdini applications\nsuch as hscript.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/mousepane\">mousepane()</a><div class=\"related-summary\">Returns the full name of the pane currently under the mouse pointer.</div></p></div>",
        "return": "string"
    },
    "mrows": {
        "argnames": [
            "mat"
        ],
        "args": [
            "matrix"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mrows\">mrows</a></h1><p class=\"summary\">Returns the number of rows in a matrix.</p><p><code>float mrows(matrix mat)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "mzero": {
        "argnames": [
            "mat"
        ],
        "args": [
            "matrix"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/mzero\">mzero</a></h1><p class=\"summary\">Returns a matrix with all values set to 0.</p><p><code>matrix mzero(matrix mat)</code></p>\n\n\n\n\n</div>",
        "return": "matrix"
    },
    "nearpoint": {
        "argnames": [
            "surface_node",
            "x",
            "y",
            "z"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/nearpoint\">nearpoint</a></h1><p class=\"summary\">Finds the point in a geometry nearest to specific 3D coordinates.</p><p><code>float nearpoint(string surface_node, float x, float y, float z)</code></p>\n\n\n\n<p>Finds the nearest point in the surface node\u2019s geometry to the given point \n(<code>x</code>, <code>y</code>, <code>z</code>).\nThe return value is the point number of the nearest point.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nnearpoint(\"/obj/geo1/grid1\", 1, 2, 3)\n\n</div>\n<p>Returns the point in the grid closest to (1, 2, 3).</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/xyzdist\">xyzdist()</a><div class=\"related-summary\">Returns the distance between a 3D coordinate and a primitive.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primdist\">primdist()</a><div class=\"related-summary\">Returns the minimum distance and closest points between two primitives.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointdist\">pointdist()</a><div class=\"related-summary\">Returns the distance between a point and a primitive.</div></p></div>",
        "return": "float"
    },
    "noise": {
        "argnames": [
            "X",
            "Y",
            "Z"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/noise\">noise</a></h1><p class=\"summary\">Generates 3D noise.</p><p><code>float noise(float X, float Y, float Z)</code></p>\n\n\n\n<p>The noise is calculated on a unit-spaced lattice and then internal\npoints are interpolated from lattice points.  This means the\nnoise will be independent between points one unit distance apart.  You\ncan scale the inputs to achieve different frequencies.</p>\n<p>This function can be used to apply noise to geometry. For example to\nmake a bumpy grid you could append a point surface node and use the following\nin the pos Z field:</p>\n<p><code>noise($TX, $TY, $TZ)</code></p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/snoise\">snoise()</a><div class=\"related-summary\">Generates sparse convolution 3D noise.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/turb\">turb()</a><div class=\"related-summary\">Generates spatially coherent 3D noise.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/sturb\">sturb()</a><div class=\"related-summary\">Generates spatially coherent 3D noise based on sparse convolution.</div></p></div>",
        "return": "float"
    },
    "normal": {
        "argnames": [
            "surface_node",
            "prim_num",
            "u",
            "v",
            "index"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/normal\">normal</a></h1><p class=\"summary\">Returns the components of the surface normal specific UV coordinates.</p><p><code>float normal(string surface_node, float prim_num, float u, float v, float index)</code></p>\n\n\n\n<p><code>u</code> and <code>v</code> are unit values, defined in the <code>[0,1]</code> interval.\nIf the primitive is a mesh, u and v are defined in terms its number\nof rows and columns.</p>\n<p><code>index</code> specifies which component to return, where <code>0</code> means X, <code>1</code> means Y,\nand <code>2</code> means Z.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv()</a><div class=\"related-summary\">Converts real UV to unit UV.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primuv\">primuv()</a><div class=\"related-summary\">Returns the value of a primitive attribute at a certain UV location.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primduv\">primduv()</a><div class=\"related-summary\">Returns the partial derivatives of a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/curvature\">curvature()</a><div class=\"related-summary\">Returns the curvature of the surface at the given UV coordinates.</div></p></div>",
        "return": "float"
    },
    "normalize": {
        "argnames": [
            "v"
        ],
        "args": [
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/normalize\">normalize</a></h1><p class=\"summary\">Normalizes a vector.</p><p><code>vector normalize(vector v)</code></p>\n\n\n\n\n</div>",
        "return": "vector"
    },
    "npoints": {
        "argnames": [
            "surface_node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/npoints\">npoints</a></h1><p class=\"summary\">Returns the number of points in a geometry.</p><p><code>float npoints(string surface_node)</code></p>\n\n\n\n<p>Returns -1 if the surface node cannot be cooked.</p>\n\n</div>",
        "return": "float"
    },
    "npointsgroup": {
        "argnames": [
            "surface_node",
            "group_name"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/npointsgroup\">npointsgroup</a></h1><p class=\"summary\">Returns the number of points in the specified group.</p><p><code>float npointsgroup(string surface_node, string group_name)</code></p>\n\n\n\n<p>Returns -1 if the surface node cannot be cooked\nor 0 if the group does not exist.</p>\n\n</div>",
        "return": "float"
    },
    "nprims": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/nprims\">nprims</a></h1><p class=\"summary\">Returns the number of primitives in a surface node.</p><p><code>float nprims(string name)</code></p>\n\n\n\n<p>Returns -1 if the surface node cannot be cooked.</p>\n\n</div>",
        "return": "float"
    },
    "nprimsgroup": {
        "argnames": [
            "surface_node",
            "group_name"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/nprimsgroup\">nprimsgroup</a></h1><p class=\"summary\">Returns the number of primitives in the specified group.</p><p><code>float nprimsgroup(string surface_node, string group_name)</code></p>\n\n\n\n<p>Returns -1 if the surface node cannot be cooked\nor 0 if the group does not exist.</p>\n\n</div>",
        "return": "float"
    },
    "nuniquevals": {
        "argnames": [
            "surface_node",
            "class",
            "attribute"
        ],
        "args": [
            "string",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/nuniquevals\">nuniquevals</a></h1><p class=\"summary\">Returns the number of unique values for an integer or string attribute in a surface node.</p><p><code>float nuniquevals(string surface_node, float class, string attribute)</code></p>\n\n\n\n<p>The <code>class</code> can be one of <code>D_VERTEX</code>, <code>D_POINT</code>, <code>D_PRIMITIVE</code>, or <code>D_DETAIL</code> for the corresponding attribute class.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nnuniquevals(\"/obj/geo1/facet1\", D_PRIMITIVE, \"name\")\n\n</div>\n<p>Returns the number of unique values for the primitive attribute <code>name</code> in\n    the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "objkinoverride": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/objkinoverride\">objkinoverride</a></h1><p class=\"summary\">Returns the current global kinematic override setting for bone objects.</p><p><code>string objkinoverride()</code></p>\n\n\n\n<p>This is equivalent to running the <a class=\"link Cmd\" href=\"https://www.sidefx.com/docs/houdini/expressions/../commands/objkinoverride\" title=\"Sets the kinematic override option.\">objkinoverride</a>\ncommand without any arguments.</p>\n<p>Return values are: <code>none</code> (no overrides, <code>rest</code> (bones cook using the rest\ntransform), or <code>capture</code> (bones cook using the capture pose transform).</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nobjkinoverride()\n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "objlightmask": {
        "argnames": [
            "geometry",
            "options"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/objlightmask\">objlightmask</a></h1><p class=\"summary\">Returns a list of lights matching an object\u2019s light mask.</p><p><code>string objlightmask(string geometry, string options)</code></p>\n\n\n\n<p>This is a slightly more general form of the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/oplightmask\" title=\"Returns a list of lights matching an object\u2019s light mask.\">oplightmask()</a> function.</p>\n<p>Returns a string containing a space separated list of path names.</p>\n<p>The options allow some control over how the light names are generated.\nCurrently, options include:</p>\n\n<p>\n<code>f</code>\n\n<div class=\"content\">\n<p>Generate full path names for the lights. If this option is excluded,\n    the path names will be generated relative to /obj</p>\n</div>\n</p>\n<p>\n<code>a</code>\n\n<div class=\"content\">\n<p>Ignore ambient lights.</p>\n</div>\n</p>\n<p>\n<code>A</code>\n\n<div class=\"content\">\n<p>Only include ambient lights.</p>\n</div>\n</p>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nobjlightmask(\"/obj/geo1\", \"fa\")\n\n</div>\n<p>Returns all the lights in /obj/geo1's light-mask. Any ambient lights\n    will be excluded from the expanded string, and the paths generated\n    will be the full path name of the light. The string might look\n    something like \"/obj/light1 /obj/light2 /obj/subnet1/light1\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oplightmask\">oplightmask()</a><div class=\"related-summary\">Returns a list of lights matching an object\u2019s light mask.</div></p></div>",
        "return": "string"
    },
    "objlookat": {
        "argnames": [
            "base_node",
            "target_node",
            "upv"
        ],
        "args": [
            "string",
            "string",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/objlookat\">objlookat</a></h1><p class=\"summary\">Computes the rotation vector\nof a lookat from one object to another.</p><p><code>vector objlookat(string base_node, string target_node, vector upv)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nobjlookat(\"/obj/null1\",\"/obj/null2\",vector3(0,1,0))[0]\n\n</div>\n<p>Returns the rotation parameter for Rx to get null1 to look at null2</p>\n</div>\n\n\n</div>",
        "return": "vector"
    },
    "objpretransform": {
        "argnames": [
            "object_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/objpretransform\">objpretransform</a></h1><p class=\"summary\">Returns an object\u2019s pre-transform matrix.</p><p><code>matrix objpretransform(string object_name)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nobjpretransform(\"/obj/bone1\")\n\n</div>\n<p>Returns the pretransform matrix for /obj/bone1.</p>\n</div>\n\n\n</div>",
        "return": "matrix"
    },
    "oc": {
        "argnames": [
            "output_channel_index",
            "index"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/oc\">oc</a></h1><p class=\"summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</p><p><code>float oc(float output_channel_index, float index)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\noc(0, 10)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ics\">ics()</a><div class=\"related-summary\">Returns the start index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ic\">ic()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel at a specific index.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ice\">ice()</a><div class=\"related-summary\">Returns the end index of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icr\">icr()</a><div class=\"related-summary\">Returns the sample rate of a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icn\">icn()</a><div class=\"related-summary\">Returns the number of channels in a CHOP\u2019s input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmin\">icmin()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s minimum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icmax\">icmax()</a><div class=\"related-summary\">Evaluates a CHOP\u2019s input channel\u2019s maximum value.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/icl\">icl()</a><div class=\"related-summary\">Returns the length of a CHOP\u2019s input, in samples.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oc\">oc()</a><div class=\"related-summary\">Returns the value of a CHOP\u2019s output at a specific sample index.</div></p></div>",
        "return": "float"
    },
    "oldrand": {
        "argnames": [
            "value"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/oldrand\">oldrand</a></h1><p class=\"summary\">Returns a pseudo-random number between 0 and 1.</p><p><code>float oldrand(float value)</code></p>\n\n\n\n<p>Using the same <code>value</code> will give the same result each time. A\ndifferent number is returned if fractional values are different.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>It is a good idea to use non-integer values as the argument to\n    oldrand(). This function is similar to rand() but uses a different\n    algorithm for generating the random numbers.</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\noldrand(12.1) gives a different result than oldrand(12.2)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rand\">rand()</a><div class=\"related-summary\">Returns a pseudo-random number from 0 to 1.</div></p></div>",
        "return": "float"
    },
    "opblist": {
        "argnames": [
            "bundle_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opblist\">opblist</a></h1><p class=\"summary\">Returns the full paths of all operators in a bundle.</p><p><code>string opblist(string bundle_name)</code></p>\n\n\n\n<p>Returns a string containing a space separated list of paths.</p>\n\n</div>",
        "return": "string"
    },
    "opcreator": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opcreator\">opcreator</a></h1><p class=\"summary\">Returns the creator of this node.</p><p><code>string opcreator(string name)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nopcreator(\"/obj/geo1/line1\")\n\n</div>\n<p>Returns <code>/obj/geo1</code>, indicating that object <code>geo1</code> is the creator network for <code>line1</code>.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/optypeinfo\">optypeinfo()</a><div class=\"related-summary\">Returns type information about a node.</div></p></div>",
        "return": "string"
    },
    "opdigits": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opdigits\">opdigits</a></h1><p class=\"summary\">Returns the numeric suffix of a node name.</p><p><code>float opdigits(string name)</code></p>\n\n\n\n<p>This function will return the numeric value of the last set of\nconsecutive digits in a node\u2019s name.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nopdigits(\"/obj/geo1\") = 1\n\n</div><div class=\"code-container\">\nopdigits(\".\") = 1\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "opexist": {
        "argnames": [
            "op_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opexist\">opexist</a></h1><p class=\"summary\">Returns 1 if the specified node, group, or bundle exists.</p><p><code>float opexist(string op_name)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `opexist(\"../box1\")`\n\n</div><div class=\"code-container\">\necho `opexist(\"/obj/@mygroup\")`\n\n</div><div class=\"code-container\">\necho `opexist(\"@mybundle\")`\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "opflag": {
        "argnames": [
            "network",
            "flag"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opflag\">opflag</a></h1><p class=\"summary\">Returns a list nodes with a particular flag set.</p><p><code>string opflag(string network, string flag)</code></p>\n\n\n\n<p>The <code>flag</code> argument follows the same convention as the opset\ncommand. Examples are:</p>\n\n<p>\n\"d\"\n        \n<div class=\"content\">\n<p>Display Flag</p>\n</div>\n</p>\n<p>\n\"r\"\n        \n<div class=\"content\">\n<p>Render Flag</p>\n</div>\n</p>\n<p>\n\"t\"\n        \n<div class=\"content\">\n<p>Template</p>\n</div>\n</p>\n<p>\n\"b\"\n        \n<div class=\"content\">\n<p>Bypass</p>\n</div>\n</p>\n<p>\n\"l\"\n        \n<div class=\"content\">\n<p>Lock.</p>\n</div>\n</p>\n<p>\n\"e\"\n        \n<div class=\"content\">\n<p>Expose</p>\n</div>\n</p>\n<p>\n\"h\"\n        \n<div class=\"content\">\n<p>Highlight</p>\n</div>\n</p>\n<p>\n\"f\"\n        \n<div class=\"content\">\n<p>Footprint</p>\n</div>\n</p>\n<p>\n\"s\"\n        \n<div class=\"content\">\n<p>This should be the save data in a motion file flag. However, for\n    backwards compatibility it is aliased to the pick flag. Use of \"s\"\n    should be replaced with \"p\"</p>\n</div>\n</p>\n<p>\n\"u\"\n        \n<div class=\"content\">\n<p>Unload data after cook (surface nodes and CHOPs only).</p>\n</div>\n</p>\n<p>\n\"c\"\n        \n<div class=\"content\">\n<p>This should be the compress icon flag. However, for backwards\n    compatibility it is aliased to the \"C\" flag. Use of \"c\" should be\n    replaced by \"C\".</p>\n</div>\n</p>\n<p>\n\"C\"\n        \n<div class=\"content\">\n<p>Current</p>\n</div>\n</p>\n<p>\n\"p\"\n        \n<div class=\"content\">\n<p>Picked</p>\n</div>\n</p>\n<p>\n\"P\"\n        \n<div class=\"content\">\n<p>Display descriptive parm.</p>\n</div>\n</p>\n\n<p>The following flags are only available for objects:</p>\n\n<p>\n\"S\"\n        \n<div class=\"content\">\n<p>Selectable in viewport</p>\n</div>\n</p>\n<p>\n\"x\"\n        \n<div class=\"content\">\n<p>Object pivot axes</p>\n</div>\n</p>\n<p>\n\"y\"\n        \n<div class=\"content\">\n<p>Xray</p>\n</div>\n</p>\n\n<p>The following flags are only available for CHOPs.</p>\n\n<p>\n\"a\"\n        \n<div class=\"content\">\n<p>Audio</p>\n</div>\n</p>\n<p>\n\"o\"\n        \n<div class=\"content\">\n<p>Export</p>\n</div>\n</p>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nhscript -&gt; echo `opflag(\"/obj\", \"d\")`\n\n</div>\n<p>Lists all displayed objects</p>\n<div class=\"code-container\">\nhscript -&gt; echo `opflag(\"/obj/geo1\", \"l\")`\n\n</div>\n<p>Lists all locked surface nodes in object geo1.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselect\">opselect()</a><div class=\"related-summary\">Returns a list of the selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectrecurse\">opselectrecurse()</a><div class=\"related-summary\">Returns a recursive list of the selected nodes.</div></p></div>",
        "return": "string"
    },
    "opfullpath": {
        "argnames": [
            "relpath"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opfullpath\">opfullpath</a></h1><p class=\"summary\">Returns the full path of a node.</p><p><code>string opfullpath(string relpath)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opfullpathfrom\">opfullpathfrom()</a><div class=\"related-summary\">Returns the path of a node relative to another node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oprelativepath\">oprelativepath()</a><div class=\"related-summary\">Returns the relative path from one node to another.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opname\">opname()</a><div class=\"related-summary\">Returns the name of a node given its path.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opsubpath\">opsubpath()</a><div class=\"related-summary\">Returns the full path of a node including any containing subnets.</div></p></div>",
        "return": "string"
    },
    "opfullpathfrom": {
        "argnames": [
            "node",
            "basenode"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opfullpathfrom\">opfullpathfrom</a></h1><p class=\"summary\">Returns the path of a node relative to another node.</p><p><code>string opfullpathfrom(string node, string basenode)</code></p>\n\n\n\n<p>This function will return the full path to <code>node</code>,\nrelative to <code>basenode</code>. If <code>basenode</code> is a relative\npath it is relative to the current nodes.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oprelativepath\">oprelativepath()</a><div class=\"related-summary\">Returns the relative path from one node to another.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opfullpath\">opfullpath()</a><div class=\"related-summary\">Returns the full path of a node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opname\">opname()</a><div class=\"related-summary\">Returns the name of a node given its path.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opsubpath\">opsubpath()</a><div class=\"related-summary\">Returns the full path of a node including any containing subnets.</div></p></div>",
        "return": "string"
    },
    "opid": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opid\">opid</a></h1><p class=\"summary\">Returns the unique ID of a node.</p><p><code>float opid(string name)</code></p>\n\n\n\n<p>The value of the ID is unique to that operator at any given\nmoment, however it changes each time Houdini is reloaded.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nopid(\"/obj/model\")\n\n</div>\n<p>Returns a unique ID of the model object.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "opinput": {
        "argnames": [
            "name",
            "index"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opinput\">opinput</a></h1><p class=\"summary\">Returns the name of the node connected to a given input.</p><p><code>string opinput(string name, float index)</code></p>\n\n\n\n<p><code>index</code> is the 0-based number of the input. For example,\nto get the name of the node connected to the first input,\nuse <code>opinput(\".\", 0)</code>, and for the second input, use\n<code>opinput(\".\", 1)</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npoint(\"../\" + opinput(\".\", 0), $PT, \"P\", 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinputpath\">opinputpath()</a><div class=\"related-summary\">Returns the full path of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opninputs\">opninputs()</a><div class=\"related-summary\">Returns the maximum number of connected inputs.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutput\">opoutput()</a><div class=\"related-summary\">Returns the name of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutputpath\">opoutputpath()</a><div class=\"related-summary\">Returns the full path of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opnoutputs\">opnoutputs()</a><div class=\"related-summary\">Returns the number of nodes connected to a node\u2019s output.</div></p></div>",
        "return": "string"
    },
    "opinputpath": {
        "argnames": [
            "name",
            "index"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opinputpath\">opinputpath</a></h1><p class=\"summary\">Returns the full path of the node connected to a given input.</p><p><code>string opinputpath(string name, float index)</code></p>\n\n\n\n<p><code>index</code> is the 0-based number of the input. For example,\nto get the path of the node connected to the first input,\nuse <code>opinputpath(\".\", 0)</code>, and for the second input, use\n<code>opinputpath(\".\", 1)</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npoint(opinputpath(\".\", 0), $PT, \"P\", 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinput\">opinput()</a><div class=\"related-summary\">Returns the name of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opninputs\">opninputs()</a><div class=\"related-summary\">Returns the maximum number of connected inputs.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutput\">opoutput()</a><div class=\"related-summary\">Returns the name of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutputpath\">opoutputpath()</a><div class=\"related-summary\">Returns the full path of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opnoutputs\">opnoutputs()</a><div class=\"related-summary\">Returns the number of nodes connected to a node\u2019s output.</div></p></div>",
        "return": "string"
    },
    "opisloading": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opisloading\">opisloading</a></h1><p class=\"summary\">Returns 1 if Houdini is currently loading a scene file.</p><p><code>float opisloading()</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "opisquitting": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opisquitting\">opisquitting</a></h1><p class=\"summary\">Returns 1 if Houdini is currently shutting down.</p><p><code>float opisquitting()</code></p>\n\n\n\n<p>This information is particularly useful in node deletion scripts to\ndetermine if the node is being deleted because Houdini is quitting\nrather than because the user chose to delete it.</p>\n\n</div>",
        "return": "float"
    },
    "oplightmask": {
        "argnames": [
            "geometry"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/oplightmask\">oplightmask</a></h1><p class=\"summary\">Returns a list of lights matching an object\u2019s light mask.</p><p><code>string oplightmask(string geometry)</code></p>\n\n\n\n<p>Returns a string containing a space separated list of path names.</p>\n<p>This function is equivalent to <code>objlightmask(geometry, \"f\")</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\noplightmask(\"/obj/geo1\")\n\n</div>\n<p>Might return the string\n    <code>\"/obj/ambient1 /obj/light1 /obj/subnet1/light1\"</code>.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/objlightmask\">objlightmask()</a><div class=\"related-summary\">Returns a list of lights matching an object\u2019s light mask.</div></p></div>",
        "return": "string"
    },
    "opname": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opname\">opname</a></h1><p class=\"summary\">Returns the name of a node given its path.</p><p><code>string opname(string name)</code></p>\n\n\n\n<p>This is useful to find out the name of the network containing the node,\ne.g. <code>opname(\"..\")</code> will return the name of the network containing the\ncurrent node.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opfullpath\">opfullpath()</a><div class=\"related-summary\">Returns the full path of a node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opsubpath\">opsubpath()</a><div class=\"related-summary\">Returns the full path of a node including any containing subnets.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oprelativepath\">oprelativepath()</a><div class=\"related-summary\">Returns the relative path from one node to another.</div></p></div>",
        "return": "string"
    },
    "opnchildren": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opnchildren\">opnchildren</a></h1><p class=\"summary\">Returns the number of nodes inside a container node.</p><p><code>float opnchildren(string name)</code></p>\n\n\n\n<p>This will return the number of nodes in a subnetwork or the number of surface\nnodes in an Geometry container object.</p>\n<p>The count is non-recursive: it only counts the direct contents of the node,\nnot of the sub-nodes as well.</p>\n\n</div>",
        "return": "float"
    },
    "opninputs": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opninputs\">opninputs</a></h1><p class=\"summary\">Returns the maximum number of connected inputs.</p><p><code>float opninputs(string name)</code></p>\n\n\n\n<p>Returns the number of the highest connected input. This is <em>not</em> the number of\nconnected inputs. If a node has four inputs and the fourth input is connected,\n<code>opninputs</code> will return <code>4</code>. If the first and third inputs are connected,\n<code>opninputs</code> will return <code>3</code>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinput\">opinput()</a><div class=\"related-summary\">Returns the name of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutput\">opoutput()</a><div class=\"related-summary\">Returns the name of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opnoutputs\">opnoutputs()</a><div class=\"related-summary\">Returns the number of nodes connected to a node\u2019s output.</div></p></div>",
        "return": "float"
    },
    "opnoutputs": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opnoutputs\">opnoutputs</a></h1><p class=\"summary\">Returns the number of nodes connected to a node\u2019s output.</p><p><code>float opnoutputs(string name)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinput\">opinput()</a><div class=\"related-summary\">Returns the name of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutput\">opoutput()</a><div class=\"related-summary\">Returns the name of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opninputs\">opninputs()</a><div class=\"related-summary\">Returns the maximum number of connected inputs.</div></p></div>",
        "return": "float"
    },
    "opoutput": {
        "argnames": [
            "name",
            "index"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opoutput\">opoutput</a></h1><p class=\"summary\">Returns the name of a node connected a given node\u2019s output.</p><p><code>string opoutput(string name, float index)</code></p>\n\n\n\n<p>Multiple operators may be connected to a node\u2019s output\nand the index ordering is arbitrary.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinput\">opinput()</a><div class=\"related-summary\">Returns the name of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinputpath\">opinputpath()</a><div class=\"related-summary\">Returns the full path of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opninputs\">opninputs()</a><div class=\"related-summary\">Returns the maximum number of connected inputs.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutputpath\">opoutputpath()</a><div class=\"related-summary\">Returns the full path of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opnoutputs\">opnoutputs()</a><div class=\"related-summary\">Returns the number of nodes connected to a node\u2019s output.</div></p></div>",
        "return": "string"
    },
    "opoutputpath": {
        "argnames": [
            "name",
            "index"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opoutputpath\">opoutputpath</a></h1><p class=\"summary\">Returns the full path of a node connected a given node\u2019s output.</p><p><code>string opoutputpath(string name, float index)</code></p>\n\n\n\n<p>Multiple operators may be connected to a node\u2019s output\nand the index ordering is arbitrary.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinput\">opinput()</a><div class=\"related-summary\">Returns the name of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opinputpath\">opinputpath()</a><div class=\"related-summary\">Returns the full path of the node connected to a given input.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opninputs\">opninputs()</a><div class=\"related-summary\">Returns the maximum number of connected inputs.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opoutput\">opoutput()</a><div class=\"related-summary\">Returns the name of a node connected a given node\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opnoutputs\">opnoutputs()</a><div class=\"related-summary\">Returns the number of nodes connected to a node\u2019s output.</div></p></div>",
        "return": "string"
    },
    "oppinput": {
        "argnames": [
            "name",
            "index"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/oppinput\">oppinput</a></h1><p class=\"summary\">Deprecated: replaced by opinput.</p><p><code>string oppinput(string name, float index)</code></p>\n\n\n\n<p>Use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/opinput\" title=\"Returns the name of the node connected to a given input.\">opinput()</a> instead.</p>\n\n</div>",
        "return": "string"
    },
    "oppwd": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/oppwd\">oppwd</a></h1><p class=\"summary\">Returns the path of the current network.</p><p><code>string oppwd()</code></p>\n\n\n\n<p>This is a shortcut for <code>execute(\"oppwf\")</code>.</p>\n\n</div>",
        "return": "string"
    },
    "oppwf": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/oppwf\">oppwf</a></h1><p class=\"summary\">Prints the path of the current network.</p><p><code>string oppwf()</code></p>\n\n\n\n<p>This is a short form for execute(\"oppwf\").</p>\n\n</div>",
        "return": "string"
    },
    "oprelativepath": {
        "argnames": [
            "srcpath",
            "destpath"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/oprelativepath\">oprelativepath</a></h1><p class=\"summary\">Returns the relative path from one node to another.</p><p><code>string oprelativepath(string srcpath, string destpath)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opfullpathfrom\">opfullpathfrom()</a><div class=\"related-summary\">Returns the path of a node relative to another node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opfullpath\">opfullpath()</a><div class=\"related-summary\">Returns the full path of a node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opname\">opname()</a><div class=\"related-summary\">Returns the name of a node given its path.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opsubpath\">opsubpath()</a><div class=\"related-summary\">Returns the full path of a node including any containing subnets.</div></p></div>",
        "return": "string"
    },
    "opselect": {
        "argnames": [
            "network"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opselect\">opselect</a></h1><p class=\"summary\">Returns a list of the selected nodes.</p><p><code>string opselect(string network)</code></p>\n\n\n\n<p>Returns a string with a space separated list of the selected nodes\nin the given network.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `opselect(\"/obj\")`\n\n</div>\n<p>Returns \"geo1 geo2\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectpath\">opselectpath()</a><div class=\"related-summary\">Returns a list of the full paths of selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectrecurse\">opselectrecurse()</a><div class=\"related-summary\">Returns a recursive list of the selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectrecursepath\">opselectrecursepath()</a><div class=\"related-summary\">Returns a recursive list of the full paths of selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opflag\">opflag()</a><div class=\"related-summary\">Returns a list nodes with a particular flag set.</div></p></div>",
        "return": "string"
    },
    "opselectpath": {
        "argnames": [
            "network"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opselectpath\">opselectpath</a></h1><p class=\"summary\">Returns a list of the full paths of selected nodes.</p><p><code>string opselectpath(string network)</code></p>\n\n\n\n<p>Returns a string with a space separated list of the full paths of selected\nnodes in the given network.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `opselectpath(\"/obj\")`\n\n</div>\n<p>Returns \"/obj/geo1 /obj/geo2\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselect\">opselect()</a><div class=\"related-summary\">Returns a list of the selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectrecurse\">opselectrecurse()</a><div class=\"related-summary\">Returns a recursive list of the selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectrecursepath\">opselectrecursepath()</a><div class=\"related-summary\">Returns a recursive list of the full paths of selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opflag\">opflag()</a><div class=\"related-summary\">Returns a list nodes with a particular flag set.</div></p></div>",
        "return": "string"
    },
    "opselectrecurse": {
        "argnames": [
            "network",
            "flag"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opselectrecurse\">opselectrecurse</a></h1><p class=\"summary\">Returns a recursive list of the selected nodes.</p><p><code>string opselectrecurse(string network, float flag)</code></p>\n\n\n\n<p>Returns a string with a space separated list of the selected nodes\nin the given network, including selected children according to the context.</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>flag</code> = 0: Do not keep the context. Every selected node will be\n  returned.\n</li>\n<li class=\"bullet \">\n<code>flag</code> = 1: Keep the context. It will return only selected nodes\n  belonging to the same context as the \"network\" argument.\n</li>\n</ul>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `opselectrecurse(\"/obj/model\",1)`\n\n</div>\n<p>Returns \"edgecusp1 subnet1 subnet1/sphere2\"</p>\n<div class=\"code-container\">\necho `opselectrecurse(\"/obj/model\",0)`\n\n</div>\n<p>Returns \"edgecusp1 shopnet1 subnet1 subnet1/sphere2\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselect\">opselect()</a><div class=\"related-summary\">Returns a list of the selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectpath\">opselectpath()</a><div class=\"related-summary\">Returns a list of the full paths of selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectrecursepath\">opselectrecursepath()</a><div class=\"related-summary\">Returns a recursive list of the full paths of selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opflag\">opflag()</a><div class=\"related-summary\">Returns a list nodes with a particular flag set.</div></p></div>",
        "return": "string"
    },
    "opselectrecursepath": {
        "argnames": [
            "network",
            "flag"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opselectrecursepath\">opselectrecursepath</a></h1><p class=\"summary\">Returns a recursive list of the full paths of selected nodes.</p><p><code>string opselectrecursepath(string network, float flag)</code></p>\n\n\n\n<p>Returns a string with a space separated list of the full paths of selected\nnodes in the given network, including selected children according to the\ncontext.</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>flag</code> = 0: Do not keep the context. Every selected node will be\n  returned.\n</li>\n<li class=\"bullet \">\n<code>flag</code> = 1: Keep the context. It will return only selected nodes\n  belonging to the same context as the \"network\" argument.\n</li>\n</ul>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `opselectrecursepath(\"/obj/model\",1)`\n\n</div>\n<p>Returns \"/obj/model/edgecusp1 /obj/model/subnet1 /obj/model/subnet1/sphere2\"</p>\n<div class=\"code-container\">\necho `opselectrecursepath(\"/obj/model\",0)`\n\n</div>\n<p>Returns \"/obj/model/edgecusp1 /obj/model/shopnet1 /obj/model/subnet1 /obj/model/subnet1/sphere2\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselect\">opselect()</a><div class=\"related-summary\">Returns a list of the selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectpath\">opselectpath()</a><div class=\"related-summary\">Returns a list of the full paths of selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opselectrecurse\">opselectrecurse()</a><div class=\"related-summary\">Returns a recursive list of the selected nodes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opflag\">opflag()</a><div class=\"related-summary\">Returns a list nodes with a particular flag set.</div></p></div>",
        "return": "string"
    },
    "opstreamname": {
        "argnames": [
            "nodepath"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opstreamname\">opstreamname</a></h1><p class=\"summary\">Computes the active stream of a node.</p><p><code>string opstreamname(string nodepath)</code></p>\n\n\n<p>In POPs there is the idea of an active stream.  This is the set of particles a micro solver should work on by virtue of its inputs.  The <code>opstreamname</code> expression computes the ad hoc point group for the nodes active stream.</p>\n<p>If the node has only a single solid input that leads to a generator, this will evaluate to the <code>streamname</code> parameter of that generator. But, in the presence of merge nodes, it may produce a list of groups that form the active stream.</p>\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">string opstreamname(nodepath)\n</code>\n\n\n</li>\n</div>\n\n</div>",
        "return": "string"
    },
    "opsubpath": {
        "argnames": [
            "node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/opsubpath\">opsubpath</a></h1><p class=\"summary\">Returns the full path of a node including any containing subnets.</p><p><code>string opsubpath(string node)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opfullpath\">opfullpath()</a><div class=\"related-summary\">Returns the full path of a node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/oprelativepath\">oprelativepath()</a><div class=\"related-summary\">Returns the relative path from one node to another.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/opname\">opname()</a><div class=\"related-summary\">Returns the name of a node given its path.</div></p></div>",
        "return": "string"
    },
    "optransform": {
        "argnames": [
            "object_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/optransform\">optransform</a></h1><p class=\"summary\">Returns the transformation matrix of an object at the current time.</p><p><code>matrix optransform(string object_name)</code></p>\n\n\n\n\n</div>",
        "return": "matrix"
    },
    "optype": {
        "argnames": [
            "name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/optype\">optype</a></h1><p class=\"summary\">Returns the type of a node.</p><p><code>string optype(string name)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\noptype(\"/obj/geo1\")\n\n</div>\n<p>Returns \"geo\", indicating that object geo1 is a Geometry container object.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/optypeinfo\">optypeinfo()</a><div class=\"related-summary\">Returns type information about a node.</div></p></div>",
        "return": "string"
    },
    "optypeinfo": {
        "argnames": [
            "name",
            "pattern"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/optypeinfo\">optypeinfo</a></h1><p class=\"summary\">Returns type information about a node.</p><p><code>string optypeinfo(string name, string pattern)</code></p>\n\n\n\n<p>Unlike <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/optype\" title=\"Returns the type of a node.\">optype()</a> which just returns a node\u2019s type, this allows\nyou to specify a string of parameters which will cause different things\nto be output.</p>\n<p>The pattern string may contain the following characters.</p>\n\n<p>\nN\n        \n<div class=\"content\">\n<p>The name of the node. For <code>/obj/geo1</code>, this would be <code>geo1</code>.</p>\n</div>\n</p>\n<p>\nr\n        \n<div class=\"content\">\n<p>The type of the node, same as in <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/optype\" title=\"Returns the type of a node.\">optype()</a>. For\n    <code>/obj/geo1</code>, this would be <code>geo</code>.</p>\n</div>\n</p>\n<p>\ne\n        \n<div class=\"content\">\n<p>The type\u2019s label. For <code>/obj/geo1</code>, this would be <code>Geometry</code>.</p>\n</div>\n</p>\n<p>\nn\n        \n<div class=\"content\">\n<p>The network type of the operator. For <code>/obj/geo1</code>, this would be\n    <code>OBJ</code>.</p>\n</div>\n</p>\n<p>\ns\n        \n<div class=\"content\">\n<p>The script path of the operator. For <code>/obj/geo1</code>, this would be\n    <code>obj</code>.</p>\n</div>\n</p>\n<p>\ni\n        \n<div class=\"content\">\n<p>The operator\u2019s index. This number corresponds to the network type.</p>\n</div>\n</p>\n<p>\nT\n        \n<div class=\"content\">\n<p>The table name of the operator. For <code>/obj/geo1</code>, this would be\n    <code>Object</code>.</p>\n</div>\n</p>\n<p>\nt\n        \n<div class=\"content\">\n<p>The operator type. For <code>/obj/model</code>, this would be <code>geo</code>.</p>\n</div>\n</p>\n<p>\no\n        \n<div class=\"content\">\n<p>The full operator type name, consisting of the table name and operator name,\n    separated by a <code>/</code>, while also taking into account any namespace \n    or version operator type name components. For <code>/obj/model</code>, this would be\n    <code>Object/geo</code>, or for namespaced HDA it may be <code>ns::Object/myhda::1.0</code>.</p>\n</div>\n</p>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\noptypeinfo(\"/obj/geo1\", \"NtT\")\n\n\"geo1 geo Object\"\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/optype\">optype()</a><div class=\"related-summary\">Returns the type of a node.</div></p></div>",
        "return": "string"
    },
    "origin": {
        "argnames": [
            "obj1",
            "obj2",
            "constant_type"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/origin\">origin</a></h1><p class=\"summary\">Returns components of an object\u2019s transforms.</p><p><code>float origin(string obj1, string obj2, string constant_type)</code></p>\n\n\n\n<p>This function will return one of TX, TY, TZ, RX, RY, RZ, SX, SY, SZ\nvalue necessary to transform obj1 to obj2, depending on the type\nargument (\"TX\", \"TY\", \"TZ\", \"RX\", \"RY\", \"RZ\", \"SX\", \"SY\" or \"SZ\" ).</p>\n<p>This can also be thought of as the position of obj2 relative to obj1.\nIt will compute the position of obj1 relative to obj2 and returns one of\nTX, TY, TZ, RX, RY, RZ, SX, SY, SZ based on the type argument.</p>\n<p>If the empty string (\"\") is specified for either obj1 or obj2, then the\nidentity transform will be used instead.  For example, if obj1 is the\nempty string, then the world space position of obj2 is returned.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vorigin\">vorigin()</a><div class=\"related-summary\">Returns a vector of an objects' transforms.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vtorigin\">vtorigin()</a><div class=\"related-summary\">Returns a vector of an object\u2019s translations.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vrorigin\">vrorigin()</a><div class=\"related-summary\">Returns a vector of an object\u2019s rotations.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/originoffset\">originoffset()</a><div class=\"related-summary\">Returns components of an object\u2019s offset transforms.</div></p></div>",
        "return": "float"
    },
    "originoffset": {
        "argnames": [
            "obj1",
            "pos1",
            "obj2",
            "pos2",
            "constant_type"
        ],
        "args": [
            "string",
            "vector",
            "string",
            "vector",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/originoffset\">originoffset</a></h1><p class=\"summary\">Returns components of an object\u2019s offset transforms.</p><p><code>float originoffset(string obj1, vector pos1, string obj2, vector pos2, string constant_type)</code></p>\n\n\n\n<p>This function will return one of TX, TY, TZ, RX, RY, RZ value necessary\nto transform the point pos1 in the space of object obj1 to point pos2 in\nthe space of object obj2, depending on the type argument (\"TX\", \"TY\",\n\"TZ\", \"RX\", \"RY\" or \"RZ\").</p>\n<p>This can also be thought of as the position of pos2 in obj2 relative to\npos1 in obj1.</p>\n<p>If the empty string (\"\") is specified for either obj1 or obj2, then the\nidentity transform will be used instead.  For example, if obj1 is the\nempty string, then the world space position of obj2 is returned.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/origin\">origin()</a><div class=\"related-summary\">Returns components of an object\u2019s transforms.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vorigin\">vorigin()</a><div class=\"related-summary\">Returns a vector of an objects' transforms.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vtorigin\">vtorigin()</a><div class=\"related-summary\">Returns a vector of an object\u2019s translations.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vrorigin\">vrorigin()</a><div class=\"related-summary\">Returns a vector of an object\u2019s rotations.</div></p></div>",
        "return": "float"
    },
    "padzero": {
        "argnames": [
            "size",
            "value"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/padzero\">padzero</a></h1><p class=\"summary\">Returns a string padding a number to a given length with zeros.</p><p><code>string padzero(float size, float value)</code></p>\n\n\n\n<p>Returns a string containing <code>value</code> preceded by enough zeros to make up\n<code>size</code> digits.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npadzero(5, 126) = 00126\n\n</div><div class=\"code-container\">\npadzero(5, 23) = 00023\n\n</div><div class=\"code-container\">\npadzero(1, 23) = 23\n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "param": {
        "argnames": [
            "token",
            "value"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/param\">param</a></h1><p class=\"summary\">Deprecated: use stamp instead.</p><p><code>float param(string token, float value)</code></p>\n\n\n\n<p>This function is now obsolete, please use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/stamp\" title=\"Returns a copy stamping floating point value.\">stamp()</a> instead. A\nwarning will be generated if used.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/stamp\">stamp()</a><div class=\"related-summary\">Returns a copy stamping floating point value.</div></p></div>",
        "return": "float"
    },
    "parmisstring": {
        "argnames": [
            "parameter_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/parmisstring\">parmisstring</a></h1><p class=\"summary\">Returns 1 if a specified parameter is a string.</p><p><code>float parmisstring(string parameter_name)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `parmisstring(\"/obj/model/lookatpath\")`\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "pic": {
        "argnames": [
            "copname",
            "U",
            "V",
            "color_type"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pic\">pic</a></h1><p class=\"summary\">Returns the color of a pixel in a compositing node.</p><p><code>float pic(string copname, float U, float V, float color_type)</code></p>\n\n\n\n<p>The color_type parameter can be one of the\nfollowing: D_CR, D_CG, D_CB, D_CA, D_CHUE, D_CSAT, D_CVAL, D_CLUM for\nthe red, green, blue, alpha, hue, saturation, value, or luminance of the\npixel.</p>\n<p>The color returned will be interpolated smoothly between adjacent\npixels. For the non-interpolated color, use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/picni\" title=\"Returns the non-interpolated color of a pixel in a compositing node.\">picni()</a>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npic(\"/img/img1/color1\", .5, .5, D_CLUM)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/picni\">picni()</a><div class=\"related-summary\">Returns the non-interpolated color of a pixel in a compositing node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/tex\">tex()</a><div class=\"related-summary\">Returns the interpolated color of a point on an on-disk texture map.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/texni\">texni()</a><div class=\"related-summary\">Returns the non-interpolated color of a point on an on-disk texture map.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/res\">res()</a><div class=\"related-summary\">Returns the natural resolution of the image in a compositing node.</div></p></div>",
        "return": "float"
    },
    "picni": {
        "argnames": [
            "copname",
            "U",
            "V",
            "color_type"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/picni\">picni</a></h1><p class=\"summary\">Returns the non-interpolated color of a pixel in a compositing node.</p><p><code>float picni(string copname, float U, float V, float color_type)</code></p>\n\n\n\n<p>The color_type parameter can be one of the\nfollowing: D_CR, D_CG, D_CB, D_CA, D_CHUE, D_CSAT, D_CVAL, D_CLUM for\nthe red, green, blue, alpha, hue, saturation, value, or luminance of the\npixel.</p>\n<p>The color returned will not be interpolated. That is, it will be\nthe exact color of the pixel.\nFor the interpolated color, use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/pic\" title=\"Returns the color of a pixel in a compositing node.\">pic()</a>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npicni(\"/img/img1/color1\", .5, .5, D_CLUM)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pic\">pic()</a><div class=\"related-summary\">Returns the color of a pixel in a compositing node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/tex\">tex()</a><div class=\"related-summary\">Returns the interpolated color of a point on an on-disk texture map.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/texni\">texni()</a><div class=\"related-summary\">Returns the non-interpolated color of a point on an on-disk texture map.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/res\">res()</a><div class=\"related-summary\">Returns the natural resolution of the image in a compositing node.</div></p></div>",
        "return": "float"
    },
    "pluralize": {
        "argnames": [
            "s"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pluralize\">pluralize</a></h1><p class=\"summary\">Converts an English noun to its plural.</p><p><code>string pluralize(string s)</code></p>\n\n\n\n\n</div>",
        "return": "string"
    },
    "point": {
        "argnames": [
            "surface_node",
            "point_number",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/point\">point</a></h1><p class=\"summary\">Returns the value of a point attribute.</p><p><code>float point(string surface_node, float point_number, string attribute, float index)</code></p>\n\n\n\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>This function will interpolate between point values if the point\n    number is fractional, such as 3.35</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npoint(\"/obj/geo1/facet1\", 3, \"P\", 0)\n</div>\n<p>Returns the X component of point 3 of the facet1 surface node in geo1.</p>\n<div class=\"code-container\">\npoint(\"/obj/geo1/facet1\", 3, \"N\", 2)\n</div>\n<p>Returns the Z component of the normal attribute of point 3 in the</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointavg\">pointavg()</a><div class=\"related-summary\">Returns the average of an attribute across all points in a geometry.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertex\">vertex()</a><div class=\"related-summary\">Returns the value of a vertex attribute.</div></p></div>",
        "return": "float"
    },
    "pointattribsize": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointattribsize\">pointattribsize</a></h1><p class=\"summary\">Returns the number of components in a point attribute.</p><p><code>float pointattribsize(string surface_node, string attribute)</code></p>\n\n\n\n<p>If the surface node or attribute is not found, returns 0.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npointattribsize( \"/obj/model/grid1\", \"P\" )\n\n</div>\n<p>Returns 3, the number of components in a \"P\"\n    (position) attribute (X, Y, and Z).</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/point\">point()</a><div class=\"related-summary\">Returns the value of a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertexattribsize\">vertexattribsize()</a><div class=\"related-summary\">Returns the number of components in a vertex attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primattribsize\">primattribsize()</a><div class=\"related-summary\">Returns the number of components in a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/detailattribsize\">detailattribsize()</a><div class=\"related-summary\">Returns the number of components in a detail attribute.</div></p></div>",
        "return": "float"
    },
    "pointattribtype": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointattribtype\">pointattribtype</a></h1><p class=\"summary\">Returns the type of a point attribute.</p><p><code>float pointattribtype(string surface_node, string attribute)</code></p>\n\n\n\n<p>If the surface node or attribute are not found, returns -1.</p>\n\n<p>\nTypes are\n        \n<div class=\"content\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\n-1 - Unknown/Invalid\n</li>\n<li class=\"bullet \">\n0 - Integer\n</li>\n<li class=\"bullet \">\n1 - Float\n</li>\n<li class=\"bullet \">\n2 - String\n</li>\n</ul>\n</div>\n</p>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npointattribsize( \"/obj/model/box\", \"Cd\" )\n\n</div>\n<p>Returns 1 to denote a float attribute.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/point\">point()</a><div class=\"related-summary\">Returns the value of a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primattribtype\">primattribtype()</a><div class=\"related-summary\">Returns the type of a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertexattribtype\">vertexattribtype()</a><div class=\"related-summary\">Returns the type of a vertex attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/detailattribtype\">detailattribtype()</a><div class=\"related-summary\">Returns the type of a detail attribute.</div></p></div>",
        "return": "float"
    },
    "pointavg": {
        "argnames": [
            "surface_node",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointavg\">pointavg</a></h1><p class=\"summary\">Returns the average of an attribute across all points in a geometry.</p><p><code>float pointavg(string surface_node, string attribute, float index)</code></p>\n\n\n\n<p>This function works much like the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/point\" title=\"Returns the value of a point attribute.\">point()</a> function, except that it\nreturns the average value of the attribute for all points in the\nspecified surface node.</p>\n<p><code>index</code> specifies the component position in multi-component attributes such as vectors, colors, and arrays. For example, if the attribute is a color, an <code>index</code> value of <code>0</code> returns the red component, <code>1</code> returns the green component, and <code>2</code> returns the blue component.</p>\n\n</div>",
        "return": "float"
    },
    "pointdist": {
        "argnames": [
            "surface_node",
            "point_num",
            "surface_node",
            "prim_num",
            "return_type"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointdist\">pointdist</a></h1><p class=\"summary\">Returns the distance between a point and a primitive.</p><p><code>float pointdist(string surface_node, float point_num, string surface_node, float prim_num, float return_type)</code></p>\n\n\n\n<p>Given a point and a primitive, this function finds the distance between\nthe point and the closest spot on the primitive. If prim_num is minus\none, the closest distance to any primitive is found.</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\nreturn_type = 0 returns the minimum distance.\n</li>\n<li class=\"bullet \">\nreturn_type = 1 returns the u parametric value at the point of minimum\n  distance.\n</li>\n<li class=\"bullet \">\nreturn_type = 2 returns the v parametric value at the point of minimum\n  distance.\n</li>\n<li class=\"bullet \">\nreturn_type = 3 returns the primitive number that was closest. Enter\n  -1 as the <code>prim_num</code>.\n</li>\n</ul>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npointdist(\"/obj/geo1/add1\", 0, \"/obj/geo1/grid1\", 0, 0)\n</div>\n<p>Returns the distance between point 0 of add1 and the closest spot\nfrom the surface of grid1 primitive number 0. If the return_type\nwere 1, the u parametric value that is closest to the point would be\nreturned.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primdist\">primdist()</a><div class=\"related-summary\">Returns the minimum distance and closest points between two primitives.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/xyzdist\">xyzdist()</a><div class=\"related-summary\">Returns the distance between a 3D coordinate and a primitive.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/nearpoint\">nearpoint()</a><div class=\"related-summary\">Finds the point in a geometry nearest to specific 3D coordinates.</div></p></div>",
        "return": "float"
    },
    "pointgrouplist": {
        "argnames": [
            "surface_node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointgrouplist\">pointgrouplist</a></h1><p class=\"summary\">Returns the list of point groups in a surface node.</p><p><code>string pointgrouplist(string surface_node)</code></p>\n\n\n\n<p>The returned string is a space separated list of group names.</p>\n<p>To get a list of groups whose names match a pattern, use\n<a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/pointgroupmask\" title=\"Returns the list of point groups matching a pattern in a surface node.\">pointgroupmask()</a>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/haspoint\">haspoint()</a><div class=\"related-summary\">Returns 1 if a specified point is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointlist\">pointlist()</a><div class=\"related-summary\">Returns a list of all points in a point group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/hasprim\">hasprim()</a><div class=\"related-summary\">Returns 1 if a specified primitive is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primlist\">primlist()</a><div class=\"related-summary\">Returns a list of all primitives in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primgrouplist\">primgrouplist()</a><div class=\"related-summary\">Returns the list of primitive groups in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointgroupmask\">pointgroupmask()</a><div class=\"related-summary\">Returns the list of point groups matching a pattern in a surface node.</div></p></div>",
        "return": "string"
    },
    "pointgroupmask": {
        "argnames": [
            "surface_node",
            "pattern"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointgroupmask\">pointgroupmask</a></h1><p class=\"summary\">Returns the list of point groups matching a pattern in a surface node.</p><p><code>string pointgroupmask(string surface_node, string pattern)</code></p>\n\n\n\n<p>The returned string is a space separated list of group names.</p>\n<p>To simply get a list of all point groups (no pattern),\nuse <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/pointgrouplist\" title=\"Returns the list of point groups in a surface node.\">pointgrouplist()</a>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npointgroupmask(\"/obj/model\", \"group*\")\n\n</div>\n<p>Returns the names of all point groups in the specified surface node which\n    start with \"group\". So this may be something like \"group1 group2\n    group_smoke\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/haspoint\">haspoint()</a><div class=\"related-summary\">Returns 1 if a specified point is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointlist\">pointlist()</a><div class=\"related-summary\">Returns a list of all points in a point group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointgrouplist\">pointgrouplist()</a><div class=\"related-summary\">Returns the list of point groups in a surface node.</div></p></div>",
        "return": "string"
    },
    "pointlist": {
        "argnames": [
            "surface_node",
            "group_name"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointlist\">pointlist</a></h1><p class=\"summary\">Returns a list of all points in a point group.</p><p><code>string pointlist(string surface_node, string group_name)</code></p>\n\n\n\n<p>The returned string is a space separated list of point numbers.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/haspoint\">haspoint()</a><div class=\"related-summary\">Returns 1 if a specified point is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointgrouplist\">pointgrouplist()</a><div class=\"related-summary\">Returns the list of point groups in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointpattern\">pointpattern()</a><div class=\"related-summary\">Returns a list of points that match a specified pattern.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/hasprim\">hasprim()</a><div class=\"related-summary\">Returns 1 if a specified primitive is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primlist\">primlist()</a><div class=\"related-summary\">Returns a list of all primitives in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primgrouplist\">primgrouplist()</a><div class=\"related-summary\">Returns the list of primitive groups in a surface node.</div></p></div>",
        "return": "string"
    },
    "pointneighbours": {
        "argnames": [
            "surface_node",
            "point_num",
            "num_shared_prims"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointneighbours\">pointneighbours</a></h1><p class=\"summary\">Lists points that share a minimum number of primitives with\na specified point.</p><p><code>string pointneighbours(string surface_node, float point_num, float num_shared_prims)</code></p>\n\n\n\n<p>This function lists all the points that share at\nleast <code>num_shared_prims</code> primitives with the point specified by\n<code>point_num</code>.</p>\n<p>The returned string is a space separated list of point numbers.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npointneighbours(\"/obj/geo1/sphere1\", 88, 2)\n\n</div>\n<p>Returns a list of numbers that identify the points in sphere1 that\n    share at least 2 primitives (typically along an edge) with sphere1\n    point number 88.</p>\n<div class=\"code-container\">\npointneighbours(\"/obj/geo1/sphere1\", 88, 1)\n\n</div>\n<p>Returns a list of numbers that identify the points in sphere1 that\n    share at least 1 primitive with sphere1 point number 88.</p>\n<div class=\"code-container\">\npointneighbours(\"/obj/geo1/sphere1\", 88, 0)\n\n</div>\n<p>Returns a list of all the points in sphere1 except point number 88.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primneighbours\">primneighbours()</a><div class=\"related-summary\">Lists primitives that share a minimum number of points with a\nspecified primitive.</div></p></div>",
        "return": "string"
    },
    "pointpattern": {
        "argnames": [
            "surface_node",
            "pattern"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointpattern\">pointpattern</a></h1><p class=\"summary\">Returns a list of points that match a specified pattern.</p><p><code>string pointpattern(string surface_node, string pattern)</code></p>\n\n\n\n<p>The pattern is a space separated list of point numbers, point number ranges,\nor point group names.</p>\n<p>The returned string is a space separated list of point numbers.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npointpattern(\"/obj/model/sphere1\", \"2-5 10-12\")\n\n</div>\n<p>Returns \"2 3 4 5 10 11 12\", assuming the specified surface node exists and\n    has that many points.</p>\n<div class=\"code-container\">\npointpattern(\"/obj/model/group1\", \"10 group1 20\")\n\n</div>\n<p>Returns a list of all points in the group named \"group\", as well as\n    10 and 20. The order of the returned points is not guaranteed.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointlist\">pointlist()</a><div class=\"related-summary\">Returns a list of all points in a point group.</div></p></div>",
        "return": "string"
    },
    "points": {
        "argnames": [
            "surface_node",
            "point_number",
            "attribute"
        ],
        "args": [
            "string",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/points\">points</a></h1><p class=\"summary\">Returns the string value of a point attribute.</p><p><code>string points(string surface_node, float point_number, string attribute)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npoints(\"/obj/geo1/facet1\", 3, \"instance\")\n\n</div>\n<p>Returns the string associated with the string attribute \"instance\"\n    for point 3 in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "pointsmap": {
        "argnames": [
            "surface_node",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointsmap\">pointsmap</a></h1><p class=\"summary\">Returns a string from a list of strings in a point attribute.</p><p><code>string pointsmap(string surface_node, string attribute, float index)</code></p>\n\n\n\n<p>This function will return the <code>index</code>th unique string bound to the given\npoint attribute. Use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/pointsnummap\" title=\"Returns the number of unique strings bound to a point attribute.\">pointsnummap()</a> to find the total number of unique\nstrings. Note that the exact order of the strings is should not be\nrelied upon. The indexes start with 0 and go to pointsnummap()-1.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npointsmap(\"/obj/geo1/attribcreate1\", \"foo\", 0)\n\n</div>\n<p>Returns the first unique string on the given surface node.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "pointsnummap": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pointsnummap\">pointsnummap</a></h1><p class=\"summary\">Returns the number of unique strings bound to a point attribute.</p><p><code>float pointsnummap(string surface_node, string attribute)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npointsnummap(\"/obj/geo1/attribcreate1\", \"foo\")\n\n</div>\n<p>Returns number of unique strings in the foo attribute.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "popcontextgeo": {
        "argnames": [
            "index"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/popcontextgeo\">popcontextgeo</a></h1><p class=\"summary\">Returns the full path to a particle network context geometry.</p><p><code>string popcontextgeo(float index)</code></p>\n\n\n\n<p>An <code>index</code> of 0 corresponds to the first context geometry.\nThis function should only be used from within a particle node.</p>\n<p>The <a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/sop/popnet\" title=\"Contains a Particle node network.\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/NETWORKS/pop.svg\">[Image \ud83d\udd17]</a>POP Network surface node</a> has four inputs\nto which you can connect geometry. You can then access the connected\ngeometry using this function. This is simply a convenience to let\nyou associate geometry with a particle network without hard-coding\nnode paths.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>Pop Merge SOPs might also cook the particular POP network. In that case,\n    this function will give the path of the inputs of the corresponding Pop\n    Merge SOP.</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npopcontextgeo(0)\n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "popevent": {
        "argnames": [
            "event_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/popevent\">popevent</a></h1><p class=\"summary\">Returns 1 if a particle event is occurring.</p><p><code>float popevent(string event_name)</code></p>\n\n\n\n<p>You should only use this function in a particle node.</p>\n<p>See <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../particles/events\">particle events</a>.</p>\n\n</div>",
        "return": "float"
    },
    "popeventtime": {
        "argnames": [
            "event_name"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/popeventtime\">popeventtime</a></h1><p class=\"summary\">Returns the time of a particle event.</p><p><code>float popeventtime(string event_name)</code></p>\n\n\n\n<p>You should only use this function in a particle node.</p>\n<p>See <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../particles/events\">particle events</a>.</p>\n\n</div>",
        "return": "float"
    },
    "poppoint": {
        "argnames": [
            "point_number",
            "attribute",
            "index"
        ],
        "args": [
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/poppoint\">poppoint</a></h1><p class=\"summary\">Returns the value of a particle attribute, by particle number.</p><p><code>float poppoint(float point_number, string attribute, float index)</code></p>\n\n\n\n<p>You should only use this function in a particle node.</p>\n<p><code>index</code> specifies the component position in multi-component attributes such as vectors, colors, and arrays. For example, if the attribute is a color, an <code>index</code> value of <code>0</code> returns the red component, <code>1</code> returns the green component, and <code>2</code> returns the blue component.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/poppointid\">poppointid()</a><div class=\"related-summary\">Returns the value of a particle attribute, by particle ID.</div></p></div>",
        "return": "float"
    },
    "poppointid": {
        "argnames": [
            "particle_id",
            "attribute",
            "index"
        ],
        "args": [
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/poppointid\">poppointid</a></h1><p class=\"summary\">Returns the value of a particle attribute, by particle ID.</p><p><code>float poppointid(float particle_id, string attribute, float index)</code></p>\n\n\n\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item tip \">\nTip\n<div class=\"content\">\n<p>It is more efficient to use the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/poppoint\" title=\"Returns the value of a particle attribute, by particle number.\">poppoint()</a> function\n    (which looks up the particle by number instead of ID)\n    whenever possible.</p>\n</div>\n</div>\n</div>\n<p>You should only use this function in a particle node.</p>\n<p><code>index</code> specifies the component position in multi-component attributes such as vectors, colors, and arrays. For example, if the attribute is a color, an <code>index</code> value of <code>0</code> returns the red component, <code>1</code> returns the green component, and <code>2</code> returns the blue component.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/poppoint\">poppoint()</a><div class=\"related-summary\">Returns the value of a particle attribute, by particle number.</div></p></div>",
        "return": "float"
    },
    "poppointnum": {
        "argnames": [
            "particle_id"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/poppointnum\">poppointnum</a></h1><p class=\"summary\">Returns the point number of the particle with the specified ID.</p><p><code>float poppointnum(float particle_id)</code></p>\n\n\n\n<p>Given a particle ID, this function returns the particle\u2019s point number.</p>\n\n</div>",
        "return": "float"
    },
    "poppoints": {
        "argnames": [
            "point_number",
            "attribute"
        ],
        "args": [
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/poppoints\">poppoints</a></h1><p class=\"summary\">Returns the string value of a particle attribute, by particle number.</p><p><code>string poppoints(float point_number, string attribute)</code></p>\n\n\n\n<p>You should only use this function in a particle node.</p>\n<p><code>index</code> specifies the component position in multi-component attributes such as vectors, colors, and arrays. For example, if the attribute is a color, an <code>index</code> value of <code>0</code> returns the red component, <code>1</code> returns the green component, and <code>2</code> returns the blue component.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/poppointsid\">poppointsid()</a><div class=\"related-summary\">Returns the string value of a particle attribute, by particle ID.</div></p></div>",
        "return": "string"
    },
    "poppointsid": {
        "argnames": [
            "particle_id",
            "attribute"
        ],
        "args": [
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/poppointsid\">poppointsid</a></h1><p class=\"summary\">Returns the string value of a particle attribute, by particle ID.</p><p><code>string poppointsid(float particle_id, string attribute)</code></p>\n\n\n\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item tip \">\nTip\n<div class=\"content\">\n<p>It is more efficient to use the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/poppoints\" title=\"Returns the string value of a particle attribute, by particle number.\">poppoints()</a> function\n    (which looks up the particle by number instead of ID)\n    whenever possible.</p>\n</div>\n</div>\n</div>\n<p>You should only use this function in a particle node.</p>\n<p><code>index</code> specifies the component position in multi-component attributes such as vectors, colors, and arrays. For example, if the attribute is a color, an <code>index</code> value of <code>0</code> returns the red component, <code>1</code> returns the green component, and <code>2</code> returns the blue component.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/poppoints\">poppoints()</a><div class=\"related-summary\">Returns the string value of a particle attribute, by particle number.</div></p></div>",
        "return": "string"
    },
    "pow": {
        "argnames": [
            "base",
            "exponent"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pow\">pow</a></h1><p class=\"summary\">Raises a number to an exponent.</p><p><code>float pow(float base, float exponent)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npow(2, 3) = 8\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "prim": {
        "argnames": [
            "surface_node",
            "prim_num",
            "attrib_name",
            "attrib_index"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/prim\">prim</a></h1><p class=\"summary\">Returns the value of a primitive attribute.</p><p><code>float prim(string surface_node, float prim_num, string attrib_name, float attrib_index)</code></p>\n\n\n\n<p>When given the \"P\" or \"Pw\" attribute, returns the centroid of the primitive.</p>\n<p>This can also be used to read the value of a primitive intrinsic by specifying\n<code>\"intrinsic:name_of_intrinsic\"</code> instead of an attribute name.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprim(\"/obj/geo1/facet1\", 3, \"P\", 0)\n\n</div>\n<p>Evaluates the X component of the centroid of primitive 3 in the\n    specified surface node.</p>\n<div class=\"code-container\">\nprim(\"/obj/geo1/facet1\", 3, \"Cd\", 1)\n\n</div>\n<p>Evaluate the green color of the \"Cd\" attribute of primitive 3.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primuv\">primuv()</a><div class=\"related-summary\">Returns the value of a primitive attribute at a certain UV location.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/point\">point()</a><div class=\"related-summary\">Returns the value of a point attribute.</div></p></div>",
        "return": "float"
    },
    "primattribsize": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primattribsize\">primattribsize</a></h1><p class=\"summary\">Returns the number of components in a primitive attribute.</p><p><code>float primattribsize(string surface_node, string attribute)</code></p>\n\n\n\n<p>If the surface node or attribute are not found, returns 0.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimattribsize( \"/obj/model/box\", \"Cd\" )\n\n</div>\n<p>Returns the number of elements of a diffuse color attribute.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/prim\">prim()</a><div class=\"related-summary\">Returns the value of a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointattribsize\">pointattribsize()</a><div class=\"related-summary\">Returns the number of components in a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertexattribsize\">vertexattribsize()</a><div class=\"related-summary\">Returns the number of components in a vertex attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/detailattribsize\">detailattribsize()</a><div class=\"related-summary\">Returns the number of components in a detail attribute.</div></p></div>",
        "return": "float"
    },
    "primattribtype": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primattribtype\">primattribtype</a></h1><p class=\"summary\">Returns the type of a primitive attribute.</p><p><code>float primattribtype(string surface_node, string attribute)</code></p>\n\n\n\n<p>If the surface node or attribute are not found, returns -1.</p>\n\n<p>\nTypes are\n        \n<div class=\"content\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\n-1 - Unknown/Invalid\n</li>\n<li class=\"bullet \">\n0 - Integer\n</li>\n<li class=\"bullet \">\n1 - Float\n</li>\n<li class=\"bullet \">\n2 - String\n</li>\n</ul>\n</div>\n</p>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimattribsize( \"/obj/model/box\", \"Cd\" )\n\n</div>\n<p>Returns 1 to denote a float attribute.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/prim\">prim()</a><div class=\"related-summary\">Returns the value of a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointattribtype\">pointattribtype()</a><div class=\"related-summary\">Returns the type of a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertexattribtype\">vertexattribtype()</a><div class=\"related-summary\">Returns the type of a vertex attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/detailattribtype\">detailattribtype()</a><div class=\"related-summary\">Returns the type of a detail attribute.</div></p></div>",
        "return": "float"
    },
    "primdist": {
        "argnames": [
            "surface_node",
            "prim1_num",
            "surface_node",
            "prim2_num",
            "return_type"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primdist\">primdist</a></h1><p class=\"summary\">Returns the minimum distance and closest points between two primitives.</p><p><code>float primdist(string surface_node, float prim1_num, string surface_node, float prim2_num, float return_type)</code></p>\n\n\n\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>return_type</code> = 0: minimum distance\n</li>\n<li class=\"bullet \">\n<code>return_type</code> = 1: U value of closest point on primitive 1\n</li>\n<li class=\"bullet \">\n<code>return_type</code> = 2: V value of closest point on primitive 1\n</li>\n<li class=\"bullet \">\n<code>return_type</code> = 3: U value of closest point on primitive 2\n</li>\n<li class=\"bullet \">\n<code>return_type</code> = 4: V value of closest point on primitive 2\n</li>\n</ul>\n<p>Only works for faces, curves, and spline surfaces. Other types of\nprimitives will always return 0.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>Minimum works in two groups. You can either use minimum between curves and polygons or between meshes, nurbs surfaces, and bezier surfaces. However, it will not work between the two groups. For example, a NURBS curve + NURBS surface will not work. </p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimdist(\"/obj/geo1/sphere1\", 0, \"/obj/geo1/grid1\", 0, 0)\n\n</div>\n<p>Returns the distance between the first primitives in both sphere1\n    and grid1.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointdist\">pointdist()</a><div class=\"related-summary\">Returns the distance between a point and a primitive.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/xyzdist\">xyzdist()</a><div class=\"related-summary\">Returns the distance between a 3D coordinate and a primitive.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/nearpoint\">nearpoint()</a><div class=\"related-summary\">Finds the point in a geometry nearest to specific 3D coordinates.</div></p></div>",
        "return": "float"
    },
    "primduv": {
        "argnames": [
            "surface_node",
            "prim_num",
            "attrib_name",
            "attrib_index",
            "u",
            "v",
            "du",
            "dv"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primduv\">primduv</a></h1><p class=\"summary\">Returns the partial derivatives of a primitive attribute.</p><p><code>float primduv(string surface_node, float prim_num, string attrib_name, float attrib_index, float u, float v, float du, float dv)</code></p>\n\n\n\n<p>Evaluates the (partial) derivatives of a face or hull attribute at a\nparametric (u,v) position. u and v are unit values, defined in the\n<code>[0,1]</code> interval. When given the \"P\" or \"Pw\" attribute, the positional\nderivative of (u,v)'s image on the primitive will be returned. If the\nprimitive is a face type, v and dv are ignored. If both du and dv are 0,\nprimduv becomes equivalent to primuv.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>if the primitive is a polygon or a mesh, u and v are defined in\n    terms of the number of vertices, or rows or columns respectively.</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimduv(\"/obj/geo1/tube1\", 12, \"P\", 2, 0.4, 0.5, 1, 0)\n\n</div>\n<p>Evaluates the Z component of the first-order partial derivative of\n    primitive 12 with respect to u, at the parametric location\n    (0.4,0.5).</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primuv\">primuv()</a><div class=\"related-summary\">Returns the value of a primitive attribute at a certain UV location.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/normal\">normal()</a><div class=\"related-summary\">Returns the components of the surface normal specific UV coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/curvature\">curvature()</a><div class=\"related-summary\">Returns the curvature of the surface at the given UV coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv()</a><div class=\"related-summary\">Converts real UV to unit UV.</div></p></div>",
        "return": "float"
    },
    "primgrouplist": {
        "argnames": [
            "surface_node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primgrouplist\">primgrouplist</a></h1><p class=\"summary\">Returns the list of primitive groups in a surface node.</p><p><code>string primgrouplist(string surface_node)</code></p>\n\n\n\n<p>The returned string is a space separated list of group names.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/haspoint\">haspoint()</a><div class=\"related-summary\">Returns 1 if a specified point is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointlist\">pointlist()</a><div class=\"related-summary\">Returns a list of all points in a point group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointgrouplist\">pointgrouplist()</a><div class=\"related-summary\">Returns the list of point groups in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/hasprim\">hasprim()</a><div class=\"related-summary\">Returns 1 if a specified primitive is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primlist\">primlist()</a><div class=\"related-summary\">Returns a list of all primitives in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primgroupmask\">primgroupmask()</a><div class=\"related-summary\">Returns the list of groups matching a pattern in a surface node.</div></p></div>",
        "return": "string"
    },
    "primgroupmask": {
        "argnames": [
            "surface_node",
            "pattern"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primgroupmask\">primgroupmask</a></h1><p class=\"summary\">Returns the list of groups matching a pattern in a surface node.</p><p><code>string primgroupmask(string surface_node, string pattern)</code></p>\n\n\n\n<p>The returned string is a space separated list of group names.</p>\n<p>To simply get a list of all primitive groups (no pattern),\nuse <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/primgrouplist\" title=\"Returns the list of primitive groups in a surface node.\">primgrouplist()</a>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimgroupmask(\"/obj/model\", \"group*\")\n\n</div>\n<p>Returns the names of all primitive groups in the specified surface node \n    which start with \"group\". So this may be something like \"group1 group2\n    group_leftleg\".</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/hasprim\">hasprim()</a><div class=\"related-summary\">Returns 1 if a specified primitive is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primlist\">primlist()</a><div class=\"related-summary\">Returns a list of all primitives in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primgrouplist\">primgrouplist()</a><div class=\"related-summary\">Returns the list of primitive groups in a surface node.</div></p></div>",
        "return": "string"
    },
    "primlist": {
        "argnames": [
            "surface_node",
            "group_name"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primlist\">primlist</a></h1><p class=\"summary\">Returns a list of all primitives in a surface node.</p><p><code>string primlist(string surface_node, string group_name)</code></p>\n\n\n\n<p>The return string is a space separated list of primitive numbers.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/haspoint\">haspoint()</a><div class=\"related-summary\">Returns 1 if a specified point is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointlist\">pointlist()</a><div class=\"related-summary\">Returns a list of all points in a point group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointgrouplist\">pointgrouplist()</a><div class=\"related-summary\">Returns the list of point groups in a surface node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/hasprim\">hasprim()</a><div class=\"related-summary\">Returns 1 if a specified primitive is in a specified group.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primgrouplist\">primgrouplist()</a><div class=\"related-summary\">Returns the list of primitive groups in a surface node.</div></p></div>",
        "return": "string"
    },
    "primneighbours": {
        "argnames": [
            "surface_node",
            "prim_num",
            "num_shared_pts"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primneighbours\">primneighbours</a></h1><p class=\"summary\">Lists primitives that share a minimum number of points with a\nspecified primitive.</p><p><code>string primneighbours(string surface_node, float prim_num, float num_shared_pts)</code></p>\n\n\n\n<p>This function lists all the primitives that share\nat least the given number of points with the primitive specified. </p>\n<p>The returned string is a space separated list of primitive numbers.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimneighbours(\"/obj/geo1/sphere1\", 88, 2)\n\n</div>\n<p>Returns a list of numbers that identify the primitives in sphere1\n    that share at least 2 points (typically along an edge) with sphere1\n    primitive number 88.</p>\n<div class=\"code-container\">\nprimneighbours(\"/obj/geo1/sphere1\", 88, 1)\n\n</div>\n<p>Returns a list of numbers that identify the primitives in sphere1\n    that share at least 1 point with sphere1 primitive number 88.</p>\n<div class=\"code-container\">\nprimneighbours(\"/obj/geo1/sphere1\", 88, 0)\n\n</div>\n<p>Returns a list of all the primitives in sphere1 except primitive\n    number 88.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointneighbours\">pointneighbours()</a><div class=\"related-summary\">Lists points that share a minimum number of primitives with\na specified point.</div></p></div>",
        "return": "string"
    },
    "prims": {
        "argnames": [
            "surface_node",
            "primitive_number",
            "attribute"
        ],
        "args": [
            "string",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/prims\">prims</a></h1><p class=\"summary\">Returns the string value of a primitive attribute.</p><p><code>string prims(string surface_node, float primitive_number, string attribute)</code></p>\n\n\n\n<p>This can also be used to read the value of a primitive intrinsic by specifying\n<code>\"intrinsic:name_of_intrinsic\"</code> instead of an attribute name.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprims(\"/obj/geo1/facet1\", 3, \"texturemap\")\n\n</div>\n<p>Returns the string associated with the string attribute \"texturemap\"\n    for primitive 3 in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "primsmap": {
        "argnames": [
            "surface_node",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primsmap\">primsmap</a></h1><p class=\"summary\">Returns a string from a list of strings in a primitive attribute.</p><p><code>string primsmap(string surface_node, string attribute, float index)</code></p>\n\n\n\n<p>This function will return the <code>index</code>th unique string bound to the given\nprim attribute. Use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/primsnummap\" title=\"Returns the number of unique strings bound to a primitive attribute.\">primsnummap()</a> to find the total number of unique\nstrings. Note that the exact order of the strings is should not be\nrelied upon. The indexes start with 0 and go to primsnummap()-1.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimsmap(\"/obj/geo1/attribcreate1\", \"foo\", 0)\n\n</div>\n<p>Returns the first unique string in the foo attribute.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "primsnummap": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primsnummap\">primsnummap</a></h1><p class=\"summary\">Returns the number of unique strings bound to a primitive attribute.</p><p><code>float primsnummap(string surface_node, string attribute)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimsnummap(\"/obj/geo1/attribcreate1\", \"foo\")\n\n</div>\n<p>Returns number of unique strings tied to the foo attribute.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "primuv": {
        "argnames": [
            "surface_node",
            "prim_num",
            "attrib_name",
            "attrib_index",
            "u",
            "v"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/primuv\">primuv</a></h1><p class=\"summary\">Returns the value of a primitive attribute at a certain UV location.</p><p><code>float primuv(string surface_node, float prim_num, string attrib_name, float attrib_index, float u, float v)</code></p>\n\n\n\n<p>Evaluates the specified attribute at a parametric (u,v) position on the\nprimitive. u and v are unit values, defined in the <code>[0,1]</code> interval. When\ngiven the \"P\" or \"Pw\" attribute, the x, y, or z image of the (u,v)\ndomain point will be returned. If the primitive is a face type or a\ncircle, v is ignored.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>if the primitive is a polygon or a mesh, u and v are defined in\n    terms of the number of vertices, or rows or columns respectively.\n    Currently, only the position attribute of quadric primitives can\n    be evaluated.</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprimuv(\"/obj/geo1/tube1\", 0, \"Cd\", 1, 0.7, 0.3)\n\n</div>\n<p>Evaluates the Green component of the diffuse color attribute at a\n    location on primitive 0 given by the parametric coordinates\n    (0.7,0.3).</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primduv\">primduv()</a><div class=\"related-summary\">Returns the partial derivatives of a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/normal\">normal()</a><div class=\"related-summary\">Returns the components of the surface normal specific UV coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/curvature\">curvature()</a><div class=\"related-summary\">Returns the curvature of the surface at the given UV coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv()</a><div class=\"related-summary\">Converts real UV to unit UV.</div></p></div>",
        "return": "float"
    },
    "print": {
        "argnames": [
            "label",
            "expression"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/print\">print</a></h1><p class=\"summary\">Prints a message to the console.</p><p><code>float print(string label, float expression)</code></p>\n\n\n\n<p>This is useful diagnose parameters in nodes or channels.</p>\n<p>Returns the value of <code>expression</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nprint(\"wheel:\", sin($T))\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "property": {
        "argnames": [
            "foo",
            "bar"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/property\">property</a></h1><p class=\"summary\">Similar to <code>ch()</code>, but for render properties, with a default if the property doesn\u2019t exist.</p><p><code>float property(string foo, float bar)</code></p>\n\n\n\n<p>The <code>property</code>, <code>propertyf</code>, <code>propertyt</code>, <code>propertys</code>, <code>propertysop</code>, and <code>propertysraw</code>  functions are equivalent to the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/ch\" title=\"Returns the value of a parameter.\">ch()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chf\" title=\"Evaluates a parameter at a given frame.\">chf()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cht\" title=\"Returns the value of a parameter at a specified time.\">cht()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chs\" title=\"Evaluates the string value of a parameter at the current time.\">chs()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsraw\" title=\"Returns the raw (unexpanded) expression value of a parameter as a string.\">chsraw()</a> function but for evaluating <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../props/_index\" title=\"Properties let you set up flexible and powerful hierarchies of rendering, shading, lighting, and camera parameters.\">render properties</a>.</p>\n<p>The first argument is a path to a property on a node. Unlike their <code>ch*</code> counterparts, these functions take an extra <code>default</code> argument which the function returns if the property/parameter doesn\u2019t exist on the node.</p>\n<p>For example, for an object where the <code>vm_pointscale</code> attribute exists, but the <code>vm_samplecovingexpansion</code> property doesn\u2019t exist, you can get a default value back using the <code>property()</code> function:</p>\n<div class=\"code-container\">\nproperty(\"/obj/geo1/vm_pointscale\", 2.0) == 1\nproperty(\"/obj/geo1/vm_samplecovingexpansion,\", 0.2) == 0.2\n</div>\n<p>If you use the <code>ch()</code> function, it will silently fails and return <code>0</code> if the property doesn\u2019t exist:</p>\n<div class=\"code-container\">\nch(\"/obj/geo1/vm_pointscale\") == 1\nch(\"/obj/geo1/vm_samplecovingexpansion,\") == 0\n</div>\n<p>See the equivalent <code>ch</code> function for more information on each variant.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw()</a><div class=\"related-summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</div></p></div>",
        "return": "float"
    },
    "propertyf": {
        "argnames": [
            "foo",
            "bar",
            "baz"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/propertyf\">propertyf</a></h1><p class=\"summary\">Similar to <code>ch()</code>, but for render properties, with a default if the property doesn\u2019t exist.</p><p><code>float propertyf(string foo, float bar, float baz)</code></p>\n\n\n\n<p>The <code>property</code>, <code>propertyf</code>, <code>propertyt</code>, <code>propertys</code>, <code>propertysop</code>, and <code>propertysraw</code>  functions are equivalent to the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/ch\" title=\"Returns the value of a parameter.\">ch()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chf\" title=\"Evaluates a parameter at a given frame.\">chf()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cht\" title=\"Returns the value of a parameter at a specified time.\">cht()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chs\" title=\"Evaluates the string value of a parameter at the current time.\">chs()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsraw\" title=\"Returns the raw (unexpanded) expression value of a parameter as a string.\">chsraw()</a> function but for evaluating <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../props/_index\" title=\"Properties let you set up flexible and powerful hierarchies of rendering, shading, lighting, and camera parameters.\">render properties</a>.</p>\n<p>The first argument is a path to a property on a node. Unlike their <code>ch*</code> counterparts, these functions take an extra <code>default</code> argument which the function returns if the property/parameter doesn\u2019t exist on the node.</p>\n<p>For example, for an object where the <code>vm_pointscale</code> attribute exists, but the <code>vm_samplecovingexpansion</code> property doesn\u2019t exist, you can get a default value back using the <code>property()</code> function:</p>\n<div class=\"code-container\">\nproperty(\"/obj/geo1/vm_pointscale\", 2.0) == 1\nproperty(\"/obj/geo1/vm_samplecovingexpansion,\", 0.2) == 0.2\n</div>\n<p>If you use the <code>ch()</code> function, it will silently fails and return <code>0</code> if the property doesn\u2019t exist:</p>\n<div class=\"code-container\">\nch(\"/obj/geo1/vm_pointscale\") == 1\nch(\"/obj/geo1/vm_samplecovingexpansion,\") == 0\n</div>\n<p>See the equivalent <code>ch</code> function for more information on each variant.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw()</a><div class=\"related-summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</div></p></div>",
        "return": "float"
    },
    "propertys": {
        "argnames": [
            "foo",
            "bar"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/propertys\">propertys</a></h1><p class=\"summary\">Similar to <code>ch()</code>, but for render properties, with a default if the property doesn\u2019t exist.</p><p><code>string propertys(string foo, string bar)</code></p>\n\n\n\n<p>The <code>property</code>, <code>propertyf</code>, <code>propertyt</code>, <code>propertys</code>, <code>propertysop</code>, and <code>propertysraw</code>  functions are equivalent to the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/ch\" title=\"Returns the value of a parameter.\">ch()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chf\" title=\"Evaluates a parameter at a given frame.\">chf()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cht\" title=\"Returns the value of a parameter at a specified time.\">cht()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chs\" title=\"Evaluates the string value of a parameter at the current time.\">chs()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsraw\" title=\"Returns the raw (unexpanded) expression value of a parameter as a string.\">chsraw()</a> function but for evaluating <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../props/_index\" title=\"Properties let you set up flexible and powerful hierarchies of rendering, shading, lighting, and camera parameters.\">render properties</a>.</p>\n<p>The first argument is a path to a property on a node. Unlike their <code>ch*</code> counterparts, these functions take an extra <code>default</code> argument which the function returns if the property/parameter doesn\u2019t exist on the node.</p>\n<p>For example, for an object where the <code>vm_pointscale</code> attribute exists, but the <code>vm_samplecovingexpansion</code> property doesn\u2019t exist, you can get a default value back using the <code>property()</code> function:</p>\n<div class=\"code-container\">\nproperty(\"/obj/geo1/vm_pointscale\", 2.0) == 1\nproperty(\"/obj/geo1/vm_samplecovingexpansion,\", 0.2) == 0.2\n</div>\n<p>If you use the <code>ch()</code> function, it will silently fails and return <code>0</code> if the property doesn\u2019t exist:</p>\n<div class=\"code-container\">\nch(\"/obj/geo1/vm_pointscale\") == 1\nch(\"/obj/geo1/vm_samplecovingexpansion,\") == 0\n</div>\n<p>See the equivalent <code>ch</code> function for more information on each variant.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw()</a><div class=\"related-summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</div></p></div>",
        "return": "string"
    },
    "propertysop": {
        "argnames": [
            "foo",
            "bar"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/propertysop\">propertysop</a></h1><p class=\"summary\">Similar to <code>ch()</code>, but for render properties, with a default if the property doesn\u2019t exist.</p><p><code>string propertysop(string foo, string bar)</code></p>\n\n\n\n<p>The <code>property</code>, <code>propertyf</code>, <code>propertyt</code>, <code>propertys</code>, <code>propertysop</code>, and <code>propertysraw</code>  functions are equivalent to the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/ch\" title=\"Returns the value of a parameter.\">ch()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chf\" title=\"Evaluates a parameter at a given frame.\">chf()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cht\" title=\"Returns the value of a parameter at a specified time.\">cht()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chs\" title=\"Evaluates the string value of a parameter at the current time.\">chs()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsraw\" title=\"Returns the raw (unexpanded) expression value of a parameter as a string.\">chsraw()</a> function but for evaluating <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../props/_index\" title=\"Properties let you set up flexible and powerful hierarchies of rendering, shading, lighting, and camera parameters.\">render properties</a>.</p>\n<p>The first argument is a path to a property on a node. Unlike their <code>ch*</code> counterparts, these functions take an extra <code>default</code> argument which the function returns if the property/parameter doesn\u2019t exist on the node.</p>\n<p>For example, for an object where the <code>vm_pointscale</code> attribute exists, but the <code>vm_samplecovingexpansion</code> property doesn\u2019t exist, you can get a default value back using the <code>property()</code> function:</p>\n<div class=\"code-container\">\nproperty(\"/obj/geo1/vm_pointscale\", 2.0) == 1\nproperty(\"/obj/geo1/vm_samplecovingexpansion,\", 0.2) == 0.2\n</div>\n<p>If you use the <code>ch()</code> function, it will silently fails and return <code>0</code> if the property doesn\u2019t exist:</p>\n<div class=\"code-container\">\nch(\"/obj/geo1/vm_pointscale\") == 1\nch(\"/obj/geo1/vm_samplecovingexpansion,\") == 0\n</div>\n<p>See the equivalent <code>ch</code> function for more information on each variant.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw()</a><div class=\"related-summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</div></p></div>",
        "return": "string"
    },
    "propertysraw": {
        "argnames": [
            "foo",
            "bar"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/propertysraw\">propertysraw</a></h1><p class=\"summary\">Similar to <code>ch()</code>, but for render properties, with a default if the property doesn\u2019t exist.</p><p><code>string propertysraw(string foo, string bar)</code></p>\n\n\n\n<p>The <code>property</code>, <code>propertyf</code>, <code>propertyt</code>, <code>propertys</code>, <code>propertysop</code>, and <code>propertysraw</code>  functions are equivalent to the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/ch\" title=\"Returns the value of a parameter.\">ch()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chf\" title=\"Evaluates a parameter at a given frame.\">chf()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cht\" title=\"Returns the value of a parameter at a specified time.\">cht()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chs\" title=\"Evaluates the string value of a parameter at the current time.\">chs()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsraw\" title=\"Returns the raw (unexpanded) expression value of a parameter as a string.\">chsraw()</a> function but for evaluating <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../props/_index\" title=\"Properties let you set up flexible and powerful hierarchies of rendering, shading, lighting, and camera parameters.\">render properties</a>.</p>\n<p>The first argument is a path to a property on a node. Unlike their <code>ch*</code> counterparts, these functions take an extra <code>default</code> argument which the function returns if the property/parameter doesn\u2019t exist on the node.</p>\n<p>For example, for an object where the <code>vm_pointscale</code> attribute exists, but the <code>vm_samplecovingexpansion</code> property doesn\u2019t exist, you can get a default value back using the <code>property()</code> function:</p>\n<div class=\"code-container\">\nproperty(\"/obj/geo1/vm_pointscale\", 2.0) == 1\nproperty(\"/obj/geo1/vm_samplecovingexpansion,\", 0.2) == 0.2\n</div>\n<p>If you use the <code>ch()</code> function, it will silently fails and return <code>0</code> if the property doesn\u2019t exist:</p>\n<div class=\"code-container\">\nch(\"/obj/geo1/vm_pointscale\") == 1\nch(\"/obj/geo1/vm_samplecovingexpansion,\") == 0\n</div>\n<p>See the equivalent <code>ch</code> function for more information on each variant.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw()</a><div class=\"related-summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</div></p></div>",
        "return": "string"
    },
    "propertyt": {
        "argnames": [
            "foo",
            "bar",
            "baz"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/propertyt\">propertyt</a></h1><p class=\"summary\">Similar to <code>ch()</code>, but for render properties, with a default if the property doesn\u2019t exist.</p><p><code>float propertyt(string foo, float bar, float baz)</code></p>\n\n\n\n<p>The <code>property</code>, <code>propertyf</code>, <code>propertyt</code>, <code>propertys</code>, <code>propertysop</code>, and <code>propertysraw</code>  functions are equivalent to the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/ch\" title=\"Returns the value of a parameter.\">ch()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chf\" title=\"Evaluates a parameter at a given frame.\">chf()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cht\" title=\"Returns the value of a parameter at a specified time.\">cht()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chs\" title=\"Evaluates the string value of a parameter at the current time.\">chs()</a>, <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsop\" title=\"Evaluates the parameter at the current time as a node path string.\">chsop()</a>, and <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/chsraw\" title=\"Returns the raw (unexpanded) expression value of a parameter as a string.\">chsraw()</a> function but for evaluating <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../props/_index\" title=\"Properties let you set up flexible and powerful hierarchies of rendering, shading, lighting, and camera parameters.\">render properties</a>.</p>\n<p>The first argument is a path to a property on a node. Unlike their <code>ch*</code> counterparts, these functions take an extra <code>default</code> argument which the function returns if the property/parameter doesn\u2019t exist on the node.</p>\n<p>For example, for an object where the <code>vm_pointscale</code> attribute exists, but the <code>vm_samplecovingexpansion</code> property doesn\u2019t exist, you can get a default value back using the <code>property()</code> function:</p>\n<div class=\"code-container\">\nproperty(\"/obj/geo1/vm_pointscale\", 2.0) == 1\nproperty(\"/obj/geo1/vm_samplecovingexpansion,\", 0.2) == 0.2\n</div>\n<p>If you use the <code>ch()</code> function, it will silently fails and return <code>0</code> if the property doesn\u2019t exist:</p>\n<div class=\"code-container\">\nch(\"/obj/geo1/vm_pointscale\") == 1\nch(\"/obj/geo1/vm_samplecovingexpansion,\") == 0\n</div>\n<p>See the equivalent <code>ch</code> function for more information on each variant.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ch\">ch()</a><div class=\"related-summary\">Returns the value of a parameter.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chf\">chf()</a><div class=\"related-summary\">Evaluates a parameter at a given frame.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cht\">cht()</a><div class=\"related-summary\">Returns the value of a parameter at a specified time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chs\">chs()</a><div class=\"related-summary\">Evaluates the string value of a parameter at the current time.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsop\">chsop()</a><div class=\"related-summary\">Evaluates the parameter at the current time as a node path string.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/chsraw\">chsraw()</a><div class=\"related-summary\">Returns the raw (unexpanded) expression value of a parameter as a string.</div></p></div>",
        "return": "float"
    },
    "pulse": {
        "argnames": [
            "value",
            "start",
            "end"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pulse\">pulse</a></h1><p class=\"summary\">Returns 1 when a value is within a certain range.</p><p><code>float pulse(float value, float start, float end)</code></p>\n\n\n\n<p>If the value is less than start or greater than end,\npulse returns a 0. Otherwise, it returns 1.</p>\n<p>Frequently, start and end are frame numbers and val is based on\nthe current frame, <code>$F</code>. Using the modulus operator (<code>%</code>) you can\nset up a pulse that turns on and off repeatedly as the frame\nchanges. For example, to blink on for 5 frames and then off for\nfive frames repeated (i.e. return 1 for frames 0 to 4, then 0 for\nframes 5 to 9, then 1 for frames 10 to 14, etc.), use:</p>\n<div class=\"code-container\">\npulse($F % 10, 0, 4)\n</div>\n\n</div>",
        "return": "float"
    },
    "pythonexprf": {
        "argnames": [
            "expression"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pythonexprf\">pythonexprf</a></h1><p class=\"summary\">Evaluates a Python expression, returning a float result.</p><p><code>float pythonexprf(string expression)</code></p>\n\n\n\n<p>If the expression evaluates to something other than a string,\nor if it raises an exception, this function returns 0.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npythonexprf(\"hou.frame()\")\n\n</div>\n<p>Returns the current frame number.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pythonexprs\">pythonexprs()</a><div class=\"related-summary\">Evaluates a Python expression, returning a string result.</div></p></div>",
        "return": "float"
    },
    "pythonexprs": {
        "argnames": [
            "expression"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/pythonexprs\">pythonexprs</a></h1><p class=\"summary\">Evaluates a Python expression, returning a string result.</p><p><code>string pythonexprs(string expression)</code></p>\n\n\n\n<p>If the expression evaluates to something other than a string, this function \nreturns its string representation (i.e. the output from Python\u2019s <code>str()</code>\nfunction).</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>If the expression generates an exception, this function\n    returns the string representation of the exception.</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\npythonexprs(\"hou.node('/obj').children()\")\n\n</div>\n<p>Returns the string representation of a tuple containing the <code>hou.ObjectNode</code>\n    objects in <code>/obj</code>.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pythonexprf\">pythonexprf()</a><div class=\"related-summary\">Evaluates a Python expression, returning a float result.</div></p></div>",
        "return": "string"
    },
    "qlinear": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/qlinear\">qlinear</a></h1><p class=\"summary\">Channel segment function: uses quaternions to interpolate.</p><p><code>float qlinear()</code></p>\n\n\n\n<p>A channel expression function which uses quaternions to interpolate\nbetween the keyframed values. This function requires that it has two\nneighboring channels named appropriately. This means they should end\nwith x, y, and z, or be three consecutive numbers starting from 0 (such\nas 0, 1, 2, or 6, 7, 8).</p>\n<p>Because the interpolation is done in quaternion space, the orientations\nwill blend smoothly with no gimbal lock or unexpected spins. However,\nthe rotation values may appear to jump suddenly. This is because\ndifferent rotation values can represent the same orientation.</p>\n<p>Note in the graph editor a segment using this expression will show as a\ndashed straight line. This does not represent the actual intermediate\nchannel values, but does give an accurate visual feel for the behavior\nof the interpolation.</p>\n\n</div>",
        "return": "float"
    },
    "quattomatrix": {
        "argnames": [
            "q"
        ],
        "args": [
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/quattomatrix\">quattomatrix</a></h1><p class=\"summary\">Converts quaternion to a 3\u00d73 rotation matrix.</p><p><code>matrix quattomatrix(vector q)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/matrixtoquat\">matrixtoquat()</a><div class=\"related-summary\">Converts a rotation matrix to a quaternion.</div></p></div>",
        "return": "matrix"
    },
    "quintic": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/quintic\">quintic</a></h1><p class=\"summary\">Channel segment function: smoothly interpolates slopes and accelerations.</p><p><code>float quintic()</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "rad": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/rad\">rad</a></h1><p class=\"summary\">Converts from degrees to radians.</p><p><code>float rad(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nrad (180)=3.1415926\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "rand": {
        "argnames": [
            "value"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/rand\">rand</a></h1><p class=\"summary\">Returns a pseudo-random number from 0 to 1.</p><p><code>float rand(float value)</code></p>\n\n\n\n<p>Using the same <code>value</code> always gives the same result. To vary the\nresult, base the <code>value</code> on a changing number (usually the current\nframe <code>$F</code>).</p>\n<div class=\"code-container\">\nrand($F)\n</div>\n<p>When you're randomizing component values (such as X, Y, and Z),\nchange the <code>value</code> for each component so they don\u2019t all get the\nsame number:</p>\n\n<p>\nX\n        \n<div class=\"content\">\n<p><code>rand($F)</code></p>\n</div>\n</p>\n<p>\nY\n        \n<div class=\"content\">\n<p><code>rand($F * 0.1)</code></p>\n</div>\n</p>\n<p>\nZ\n        \n<div class=\"content\">\n<p><code>rand($F * 0.01)</code></p>\n</div>\n</p>\n\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>It is a good idea to use non-integer values as the argument to\n    rand().</p>\n</div>\n</div>\n</div>\n\n</div>",
        "return": "float"
    },
    "realuv": {
        "argnames": [
            "surface_node",
            "prim_num",
            "uv_unit",
            "D_U|D_V"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/realuv\">realuv</a></h1><p class=\"summary\">Converts unit UV to real UV.</p><p><code>float realuv(string surface_node, float prim_num, float uv_unit, float D_U|D_V)</code></p>\n\n\n\n<p>The unit value is defined in the <code>[0,1]</code> interval. The\nreal value is defined in the valid interval of the primitive\u2019s domain if\nthe primitive is a spline type. If the primitive is a polygon or a mesh,\nthe size of its domain is given by the number of vertices, or rows or\ncolumns respectively. If the primitive is a polygon or a curve, D_U and\nD_V are irrelevant.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>the result is undefined if the primitive is neither a face nor a\n    hull.</p>\n</div>\n</div>\n</div>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv()</a><div class=\"related-summary\">Converts real UV to unit UV.</div></p></div>",
        "return": "float"
    },
    "repeat": {
        "argnames": [
            "f1",
            "f2"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/repeat\">repeat</a></h1><p class=\"summary\">Channel segment function: repeats animation from previous frames.</p><p><code>float repeat(float f1, float f2)</code></p>\n\n\n\n<p>Repeats the animation from frames <code>f1</code> to <code>f2</code>.</p>\n<p>If you wish to repeat the animation cumulatively,\nuse the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cycle\" title=\"Channel segment function: repeats animation from previous frames.\">cycle()</a> function instead.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/repeatt\">repeatt()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycle\">cycle()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cyclet\">cyclet()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p></div>",
        "return": "float"
    },
    "repeatt": {
        "argnames": [
            "t1",
            "t2"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/repeatt\">repeatt</a></h1><p class=\"summary\">Channel segment function: repeats animation from previous frames.</p><p><code>float repeatt(float t1, float t2)</code></p>\n\n\n\n<p>Repeats the animation from <code>t1</code> seconds to <code>t2</code> seconds.</p>\n<p>If you wish to repeat the animation cumulatively, use\nthe <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/cyclet\" title=\"Channel segment function: repeats animation from previous frames.\">cyclet()</a> function instead.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/repeat\">repeat()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cycle\">cycle()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cyclet\">cyclet()</a><div class=\"related-summary\">Channel segment function: repeats animation from previous frames.</div></p></div>",
        "return": "float"
    },
    "res": {
        "argnames": [
            "compositing_node",
            "res_type"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/res\">res</a></h1><p class=\"summary\">Returns the natural resolution of the image in a compositing node.</p><p><code>float res(string compositing_node, float res_type)</code></p>\n\n\n\n<p><code>res_type</code> is either D_XRES or D_YRES.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nres(\"/img/img1/color1\", D_XRES)\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "rgb": {
        "argnames": [
            "hue",
            "saturation",
            "value",
            "component"
        ],
        "args": [
            "float",
            "float",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/rgb\">rgb</a></h1><p class=\"summary\">Converts HSV values to RGB components.</p><p><code>float rgb(float hue, float saturation, float value, string component)</code></p>\n\n\n\n<p>The <code>component</code> should be one of <code>\"r\"</code>, <code>\"g\"</code> or <code>\"b\"</code>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nrgb(270, .5, 1, \"b\")\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "rindex": {
        "argnames": [
            "source",
            "pattern"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/rindex\">rindex</a></h1><p class=\"summary\">Finds the last occurrence of a pattern in a string.</p><p><code>float rindex(string source, string pattern)</code></p>\n\n\n\n<p>Returns the number of characters before <code>pattern</code> occurs in\n<code>source</code>. Returns -1 if the pattern is not found.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `rindex(\"Testing rindex\", \"sting\")`\n\n</div>\n<p>Returns 2.</p>\n<div class=\"code-container\">\necho `rindex(\"Testing rindex\", \"i\")`\n\n</div>\n<p>Returns 8.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/index\">index()</a><div class=\"related-summary\">Finds the first occurrence of a pattern in a string.</div></p></div>",
        "return": "float"
    },
    "rint": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/rint\">rint</a></h1><p class=\"summary\">Rounds to the nearest integer.</p><p><code>float rint(float number)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/round\">round()</a><div class=\"related-summary\">Rounds a number to the nearest integer.</div></p></div>",
        "return": "float"
    },
    "rotate": {
        "argnames": [
            "angle",
            "axis"
        ],
        "args": [
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/rotate\">rotate</a></h1><p class=\"summary\">Returns a 4\u00d74 rotation matrix from an axis and angle.</p><p><code>matrix rotate(float angle, string axis)</code></p>\n\n\n\n<p><code>angle</code> is in degrees.</p>\n<p><code>axis</code> is one of <code>\"x\"</code>, <code>\"y\"</code>, or <code>\"z\"</code>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rotaxis\">rotaxis()</a><div class=\"related-summary\">Returns a 4\u00d74 rotation matrix from an angle and a vector.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/scale\">scale()</a><div class=\"related-summary\">Takes three scaling values and returns a scale matrix.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/translate\">translate()</a><div class=\"related-summary\">Takes X, Y, and Z translation values and returns a translation matrix.</div></p></div>",
        "return": "matrix"
    },
    "rotaxis": {
        "argnames": [
            "angle",
            "axisv"
        ],
        "args": [
            "float",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/rotaxis\">rotaxis</a></h1><p class=\"summary\">Returns a 4\u00d74 rotation matrix from an angle and a vector.</p><p><code>matrix rotaxis(float angle, vector axisv)</code></p>\n\n\n\n<p><code>angle</code> is in degrees.</p>\n<p>The rotation is taken from the angle around the axis specified by\nthe vector <code>axisv</code>.\nThe vector is converted to a 3 vector for the purposes of this computation.</p>\n<p>Houdini\u2019s expression language uses row vectors. Rotation matrices\nshould appear on the right-hand side of vector-matrix multiplications.</p>\n<p>For example, to rotate the vector <code>[1, 2, 3]</code> by 10 degrees around the\nY axis:</p>\n<div class=\"code-container\">\nvector(\"[1, 2, 3]\") * rotaxis(10, \"[0, 1, 0]\")\n</div>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rotate\">rotate()</a><div class=\"related-summary\">Returns a 4\u00d74 rotation matrix from an axis and angle.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/scale\">scale()</a><div class=\"related-summary\">Takes three scaling values and returns a scale matrix.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/translate\">translate()</a><div class=\"related-summary\">Takes X, Y, and Z translation values and returns a translation matrix.</div></p></div>",
        "return": "matrix"
    },
    "round": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/round\">round</a></h1><p class=\"summary\">Rounds a number to the nearest integer.</p><p><code>float round(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nround(2.501)=3\n\n</div><div class=\"code-container\">\nround(-2.501)=-3\n\n</div><div class=\"code-container\">\nround(0.2)=0\n\n</div><div class=\"code-container\">\nround(-.2)=0\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/trunc\">trunc()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part, rounding towards 0.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/int\">int()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ceil\">ceil()</a><div class=\"related-summary\">Returns the smallest integer not less than the value passed in.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/floor\">floor()</a><div class=\"related-summary\">Returns the largest integer not greater than a number.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/frac\">frac()</a><div class=\"related-summary\">Returns the fractional part of a floating-point number.</div></p></div>",
        "return": "float"
    },
    "run": {
        "argnames": [
            "command"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/run\">run</a></h1><p class=\"summary\">Runs a string as an HScript command and returns the command\u2019s output.</p><p><code>string run(string command)</code></p>\n\n\n\n<p>This is a short form for the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/execute\" title=\"Runs a string as an HScript command and returns the command\u2019s output.\">execute()</a> function.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/execute\">execute()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the command\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rune\">rune()</a><div class=\"related-summary\">Runs a string as an HScript command and returns any error output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/runb\">runb()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the\ncommand and error output.</div></p></div>",
        "return": "string"
    },
    "runb": {
        "argnames": [
            "command"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/runb\">runb</a></h1><p class=\"summary\">Runs a string as an HScript command and returns the\ncommand and error output.</p><p><code>string runb(string command)</code></p>\n\n\n\n<p>This is a short form for the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/executeb\" title=\"Runs a string as an HScript command and returns the\ncommand and error output.\">executeb()</a> function.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/executeb\">executeb()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the\ncommand and error output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/run\">run()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the command\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rune\">rune()</a><div class=\"related-summary\">Runs a string as an HScript command and returns any error output.</div></p></div>",
        "return": "string"
    },
    "rune": {
        "argnames": [
            "command"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/rune\">rune</a></h1><p class=\"summary\">Runs a string as an HScript command and returns any error output.</p><p><code>string rune(string command)</code></p>\n\n\n\n<p>This is a short form for the <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/executee\" title=\"Runs a string as an HScript command and returns any error output.\">executee()</a> function.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/executee\">executee()</a><div class=\"related-summary\">Runs a string as an HScript command and returns any error output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/run\">run()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the command\u2019s output.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/runb\">runb()</a><div class=\"related-summary\">Runs a string as an HScript command and returns the\ncommand and error output.</div></p></div>",
        "return": "string"
    },
    "scale": {
        "argnames": [
            "sx",
            "sy",
            "sz"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/scale\">scale</a></h1><p class=\"summary\">Takes three scaling values and returns a scale matrix.</p><p><code>matrix scale(float sx, float sy, float sz)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rotate\">rotate()</a><div class=\"related-summary\">Returns a 4\u00d74 rotation matrix from an axis and angle.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rotaxis\">rotaxis()</a><div class=\"related-summary\">Returns a 4\u00d74 rotation matrix from an angle and a vector.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/translate\">translate()</a><div class=\"related-summary\">Takes X, Y, and Z translation values and returns a translation matrix.</div></p></div>",
        "return": "matrix"
    },
    "seqanim": {
        "argnames": [
            "compositing_node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/seqanim\">seqanim</a></h1><p class=\"summary\">Returns 1 if a specified compositing node has an animated sequence.</p><p><code>float seqanim(string compositing_node)</code></p>\n\n\n\n<p>Returns 0 if <code>compositing_node</code> has a single image.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqstart\">seqstart()</a><div class=\"related-summary\">Returns the start frame of a compositing node\u2019s image sequence.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqend\">seqend()</a><div class=\"related-summary\">Returns the end frame of a compositing node\u2019s image sequence.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqlength\">seqlength()</a><div class=\"related-summary\">Returns the number of frames in a compositing node\u2019s image sequence.</div></p></div>",
        "return": "float"
    },
    "seqend": {
        "argnames": [
            "compositing_node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/seqend\">seqend</a></h1><p class=\"summary\">Returns the end frame of a compositing node\u2019s image sequence.</p><p><code>float seqend(string compositing_node)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqanim\">seqanim()</a><div class=\"related-summary\">Returns 1 if a specified compositing node has an animated sequence.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqstart\">seqstart()</a><div class=\"related-summary\">Returns the start frame of a compositing node\u2019s image sequence.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqlength\">seqlength()</a><div class=\"related-summary\">Returns the number of frames in a compositing node\u2019s image sequence.</div></p></div>",
        "return": "float"
    },
    "seqlength": {
        "argnames": [
            "compositing_node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/seqlength\">seqlength</a></h1><p class=\"summary\">Returns the number of frames in a compositing node\u2019s image sequence.</p><p><code>float seqlength(string compositing_node)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqanim\">seqanim()</a><div class=\"related-summary\">Returns 1 if a specified compositing node has an animated sequence.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqstart\">seqstart()</a><div class=\"related-summary\">Returns the start frame of a compositing node\u2019s image sequence.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqend\">seqend()</a><div class=\"related-summary\">Returns the end frame of a compositing node\u2019s image sequence.</div></p></div>",
        "return": "float"
    },
    "seqstart": {
        "argnames": [
            "compositing_node"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/seqstart\">seqstart</a></h1><p class=\"summary\">Returns the start frame of a compositing node\u2019s image sequence.</p><p><code>float seqstart(string compositing_node)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqanim\">seqanim()</a><div class=\"related-summary\">Returns 1 if a specified compositing node has an animated sequence.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqend\">seqend()</a><div class=\"related-summary\">Returns the end frame of a compositing node\u2019s image sequence.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/seqlength\">seqlength()</a><div class=\"related-summary\">Returns the number of frames in a compositing node\u2019s image sequence.</div></p></div>",
        "return": "float"
    },
    "shopstring": {
        "argnames": [
            "shop_path",
            "render_type"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/shopstring\">shopstring</a></h1><p class=\"summary\">Returns the shader string generated by a shader.</p><p><code>string shopstring(string shop_path, string render_type)</code></p>\n\n\n\n<p>The <code>render_type</code> is a string representing the renderer\n(\"RIB\" or \"VMantra\" for example). If this string is empty, then the\ndefault render type for the shader is used.</p>\n\n</div>",
        "return": "string"
    },
    "sign": {
        "argnames": [
            "value"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/sign\">sign</a></h1><p class=\"summary\">Returns -1, 0, or 1 depending on the sign of the argument.</p><p><code>float sign(float value)</code></p>\n\n\n\n<p>Returns 1 if <code>value</code> is positive, -1 if <code>value</code> is negative,\nand 0 if the <code>value</code> is zero.</p>\n\n</div>",
        "return": "float"
    },
    "sin": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/sin\">sin</a></h1><p class=\"summary\">Returns the sine of the argument.</p><p><code>float sin(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nsin (60)=0.866025\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "sinh": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/sinh\">sinh</a></h1><p class=\"summary\">Returns the hyperbolic sine of the argument.</p><p><code>float sinh(float number)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "smooth": {
        "argnames": [
            "value",
            "minimum",
            "maximum"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/smooth\">smooth</a></h1><p class=\"summary\">Takes a value and range and returns a smooth interpolation\nbetween 0 and 1.</p><p><code>float smooth(float value, float minimum, float maximum)</code></p>\n\n\n\n<p>When <code>value</code> is less than <code>minimum</code>, the return value is 0.\nIf <code>value</code> is greater than <code>maximum</code>, the return value is 1.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nsmooth ($F, 12, 55)\n\n</div>\n<p>This example will generate an ease-type curve between values 0 and 1,\n    starting at frame 12 and ending at frame 55. Dig it!</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "snoise": {
        "argnames": [
            "X",
            "Y",
            "Z"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/snoise\">snoise</a></h1><p class=\"summary\">Generates sparse convolution 3D noise.</p><p><code>float snoise(float X, float Y, float Z)</code></p>\n\n\n\n<p>The noise is generated on points scattered in space and interpolated\nbetween the points in the voronoi decomposition.  The output of the\nnoise function is approximately -1.15 to 1.15.</p>\n<div class=\"code-container\">\nsnoise($TX, $TY, $TZ)\n</div>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/noise\">noise()</a><div class=\"related-summary\">Generates 3D noise.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/turb\">turb()</a><div class=\"related-summary\">Generates spatially coherent 3D noise.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/sturb\">sturb()</a><div class=\"related-summary\">Generates spatially coherent 3D noise based on sparse convolution.</div></p></div>",
        "return": "float"
    },
    "spknot": {
        "argnames": [
            "surface_node",
            "prim_num",
            "knot_index",
            "du_or_dv"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/spknot\">spknot</a></h1><p class=\"summary\">Returns a knot value on a spline curve or surface.</p><p><code>float spknot(string surface_node, float prim_num, float knot_index, float du_or_dv)</code></p>\n\n\n\n<p>This spline-specific function returns the floating-point knot value,\ngiven the knot index in the U or V knot sequence. The first valid knot\nindex is 0. If the primitive is a Bezier curve or surface, the values\nreturned are those of its breakpoints.</p>\n<p>If the primitive is a curve, the fourth argument (<code>D_U</code> or <code>D_V</code>)\nis irrelevant.</p>\n\n</div>",
        "return": "float"
    },
    "spline": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/spline\">spline</a></h1><p class=\"summary\">Channel segment function: fits a curve to the keyframes.</p><p><code>float spline()</code></p>\n\n\n\n<p>A channel expression function which runs a spline through the timemarks\nof the consecutive channel segments that use that function. That is,\nthis spline interpolates the channel values at the keyframes of the\nsegments.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/bezier\">bezier()</a><div class=\"related-summary\">Channel segment function: Bezier interpoloation spline</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/cubic\">cubic()</a><div class=\"related-summary\">Channel segment function: cubic spline.</div></p></div>",
        "return": "float"
    },
    "sqrt": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/sqrt\">sqrt</a></h1><p class=\"summary\">Returns the square root of the argument.</p><p><code>float sqrt(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nsqrt (144)=12\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "stamp": {
        "argnames": [
            "scope",
            "token",
            "value"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/stamp\">stamp</a></h1><p class=\"summary\">Returns a copy stamping floating point value.</p><p><code>float stamp(string scope, string token, float value)</code></p>\n\n\n\n<p>Retrieves a stamping variable, usually from a downstream\n<a class=\"link Node\" href=\"https://www.sidefx.com/docs/houdini/expressions/../nodes/sop/copy\" title=\"Creates multiple copies of the input geometry, or copies the geometry\nonto the points of the second input.\"><a href=\"https://www.sidefx.com/docs/houdini/expressions/../icons/SOP/copy.svg\">[Image \ud83d\udd17]</a>Copy node</a>. See <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../copy/stamping\">copy stamping</a>.</p>\n<p>This function retrieves floating-point number values. For string\nvalues, use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/stamps\" title=\"Returns a copy stamping string value.\">stamps()</a>.</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>scope</code>: the path of the node to get the value from.\n</li>\n<li class=\"bullet \">\n<code>token</code>: the name of the variable to retrieve.\n</li>\n<li class=\"bullet \">\n<code>value</code>: the default value to use if <code>token</code> does not exist.\n</li>\n</ul>\n<p>Examples of stamping operators\ninclude: Cache, Copy, and LSystem surface nodes, and the\nCopy channel node.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstamp(\"../copy1\", \"sides\", 5)\n\n</div><div class=\"code-container\">\nstamp(\"..\", \"fuzzy\", 0.5)\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "stamps": {
        "argnames": [
            "stamp_op_path",
            "token",
            "value"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/stamps\">stamps</a></h1><p class=\"summary\">Returns a copy stamping string value.</p><p><code>string stamps(string stamp_op_path, string token, string value)</code></p>\n\n\n\n<p>Retrieves a stamping variable. See <a class=\"link \" href=\"https://www.sidefx.com/docs/houdini/expressions/../copy/stamping\">copy stamping</a>.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>This expression does not work with the Copy SOP.</p>\n</div>\n</div>\n</div>\n<p>This function retrieves string values. For floating-point number\nvalues, use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/stamp\" title=\"Returns a copy stamping floating point value.\">stamp()</a>.</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>scope</code>: the path of the node to get the value from.\n</li>\n<li class=\"bullet \">\n<code>token</code>: the name of the variable to retrieve.\n</li>\n<li class=\"bullet \">\n<code>value</code>: the default string to use if <code>token</code> does not exist.\n</li>\n</ul>\n<p>Returns the string value associated with the parameter named 'token'\nset in 'scope'. 'scope' is an operator path where the value is to be\nlooked up from. If the token has not been set, then 'value' is returned.\nStamping operators set these named tokens parameters recursively on\nthemselves and all ancestor parents.</p>\n<p>Examples of string stamping operators include the Apply Relationship\nDOP, and the Copy Data DOP.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstamps(\"../copydata1\", \"name\", \"defaultname\")\n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "strcasecmp": {
        "argnames": [
            "s1",
            "s2"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/strcasecmp\">strcasecmp</a></h1><p class=\"summary\">Compares two strings, ignoring case.</p><p><code>float strcasecmp(string s1, string s2)</code></p>\n\n\n\n<ul class=\"bullets\">\n<li class=\"bullet \">\nReturns <code>-1</code> if <code>s1</code> comes before <code>s2</code> according to ASCII.\n</li>\n<li class=\"bullet \">\nReturns <code>1</code> if <code>s1</code> comes after <code>s2</code> according to ASCII.\n</li>\n<li class=\"bullet \">\nReturns <code>0</code> if <code>s1</code> is equal to <code>s2</code>.\n</li>\n</ul>\n<p>This function is case-insensitive. For case-sensitive comparison,\nuse <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/strcmp\" title=\"Compares two strings.\">strcmp()</a>.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strcmp\">strcmp()</a><div class=\"related-summary\">Compares two strings.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strmatch\">strmatch()</a><div class=\"related-summary\">Returns 1 if a string matches a pattern, including case.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strcasematch\">strcasematch()</a><div class=\"related-summary\">Returns 1 if a string matches a pattern, ignoring case.</div></p></div>",
        "return": "float"
    },
    "strcasematch": {
        "argnames": [
            "pattern",
            "s"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/strcasematch\">strcasematch</a></h1><p class=\"summary\">Returns 1 if a string matches a pattern, ignoring case.</p><p><code>float strcasematch(string pattern, string s)</code></p>\n\n\n\n<p>This function is case-insensitive. For case-sensitive matches,\nuse <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/strmatch\" title=\"Returns 1 if a string matches a pattern, including case.\">strmatch()</a>.</p>\n\n<h2 class=\"label heading\" id=\"notes\">\n            \n            Notes\n        </h2>\n<div class=\"content\" id=\"notes-body\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\nReturns 1 if any patterns in the <code>pattern</code> string matches string <code>s</code>,\n  or 0 if no patterns match.\n</li>\n<li class=\"bullet \">\nIn order to match, a pattern must match the <code>s</code> string\n  <em>from beginning to end</em>. Use wildcards (<code>*</code>) to match substrings,\n  e.g.\n<div class=\"content\">\n<div class=\"code-container\">\nstrmatch(\"bar\", \"foobarbaz\") = 0\nstrmatch(\"*bar*\", \"foobarbaz\") = 1\n\n</div>\n</div>\n</li>\n<li class=\"bullet \">\n<code>pattern</code> is a space-separated list of one or more patterns.\n  <strong>This can cause unintuitive behavior of this function</strong>.\n  For example:\n<div class=\"content\">\n<div class=\"code-container\">\nstrmatch(\"foo bar\", \"foo bar\")\n\n</div>\n<p>\u2026<strong>will return 0</strong>, because the first argument consists of <em>two</em>\n  patterns, <code>foo</code> and <code>bar</code>, and neither of those patterns match\n  <code>foo bar</code> (since the pattern must match from beginning to end).</p>\n<p>Similarly,</p>\n<div class=\"code-container\">\nstrmatch(\"foo bar\", \"foo\")\n\n</div>\n<p>\u2026will return 1, because the string matches the first of the\n  two arguments in the pattern (<code>foo</code> and <code>bar</code>).</p>\n</div>\n</li>\n</ul>\n</div>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstrmatch(\"FOO*\", \"foobar\")\n</div>\n<p>Returns 1.</p>\n<div class=\"code-container\">\nstrmatch(\"?baR\", \"fred\")\n</div>\n<p>Returns 0.</p>\n<div class=\"code-container\">\nstrmatch(\"FoO*,bAr*, \"bar\")\n</div>\n<p>Returns 1.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strcmp\">strcmp()</a><div class=\"related-summary\">Compares two strings.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strcasecmp\">strcasecmp()</a><div class=\"related-summary\">Compares two strings, ignoring case.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strcasematch\">strcasematch()</a><div class=\"related-summary\">Returns 1 if a string matches a pattern, ignoring case.</div></p></div>",
        "return": "float"
    },
    "strcat": {
        "argnames": [
            "s1",
            "s2"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/strcat\">strcat</a></h1><p class=\"summary\">Returns the concatenation of two strings.</p><p><code>string strcat(string s1, string s2)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstrcat(\"Current motion file is \", $MOTNAME)\n\n</div>\n<p>Returns \"Current motion file is job1.bmot\"</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "strcmp": {
        "argnames": [
            "s1",
            "s2"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/strcmp\">strcmp</a></h1><p class=\"summary\">Compares two strings.</p><p><code>float strcmp(string s1, string s2)</code></p>\n\n\n\n<ul class=\"bullets\">\n<li class=\"bullet \">\nReturns <code>-1</code> if <code>s1</code> comes before <code>s2</code> according to ASCII.\n</li>\n<li class=\"bullet \">\nReturns <code>1</code> if <code>s1</code> comes after <code>s2</code> according to ASCII.\n</li>\n<li class=\"bullet \">\nReturns <code>0</code> if <code>s1</code> is equal to <code>s2</code>.\n</li>\n</ul>\n<p>This function is case-sensitive. For case-insensitive comparison,\nuse <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/strcasecmp\" title=\"Compares two strings, ignoring case.\">strcasecmp()</a>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstrcmp(\"abc\", \"xyz\") = -1\n</div><div class=\"code-container\">\nstrcmp(\"A\", \"a\") = -1\n</div><div class=\"code-container\">\nstrcmp(\"xyz, \"abc\") = 1\n</div><div class=\"code-container\">\nstrcmp(\"abc\", \"abc\") = 0\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "strdup": {
        "argnames": [
            "count",
            "s2"
        ],
        "args": [
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/strdup\">strdup</a></h1><p class=\"summary\">Duplicates a string.</p><p><code>string strdup(float count, string s2)</code></p>\n\n\n\n<p>Returns <code>s2</code> repeated <code>count</code> times.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstrdup(3, \"abc\") = \"abcabcabc\"\n\n</div><div class=\"code-container\">\nstrdup(0, \"Foobar\") = \"\"\n\n</div><div class=\"code-container\">\nstrdup(3, \"/(120)[B]\") = \"/(120)[B]/(120)[B]/(120)[B]\"\n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "stripmatrix": {
        "argnames": [
            "mat"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/stripmatrix\">stripmatrix</a></h1><p class=\"summary\">Strips non-essential characters from the string representation of\na matrix or vector.</p><p><code>string stripmatrix(string mat)</code></p>\n\n\n\n<p>This is useful when you\nwant to interpret the values of the matrix (i.e. to pass to a VEX\nfunction).</p>\n<p>Returns a string containing the floating point numbers (and only the\nnumbers) which make up the matrix.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstripmatrix(identity(3)) = \"1 0 0 0 1 0 0 0 1\"\n\n</div><div class=\"code-container\">\nstripmatrix(vector3(1,2,3)) = \"1 2 3\"\n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "strlen": {
        "argnames": [
            "s"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/strlen\">strlen</a></h1><p class=\"summary\">Returns the number of characters in a string.</p><p><code>float strlen(string s)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstrlen(\"abcde\")=5\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "strmatch": {
        "argnames": [
            "pattern",
            "s"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/strmatch\">strmatch</a></h1><p class=\"summary\">Returns 1 if a string matches a pattern, including case.</p><p><code>float strmatch(string pattern, string s)</code></p>\n\n\n\n<p>This function is case-sensitive. For case-insensitive matches,\nuse <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/strcasematch\" title=\"Returns 1 if a string matches a pattern, ignoring case.\">strcasematch()</a>.</p>\n\n<h2 class=\"label heading\" id=\"notes\">\n            \n            Notes\n        </h2>\n<div class=\"content\" id=\"notes-body\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\nReturns 1 if any patterns in the <code>pattern</code> string matches string <code>s</code>,\n  or 0 if no patterns match.\n</li>\n<li class=\"bullet \">\nIn order to match, a pattern must match the <code>s</code> string\n  <em>from beginning to end</em>. Use wildcards (<code>*</code>) to match substrings,\n  e.g.\n<div class=\"content\">\n<div class=\"code-container\">\nstrmatch(\"bar\", \"foobarbaz\") = 0\nstrmatch(\"*bar*\", \"foobarbaz\") = 1\n\n</div>\n</div>\n</li>\n<li class=\"bullet \">\n<code>pattern</code> is a space-separated list of one or more patterns.\n  <strong>This can cause unintuitive behavior of this function</strong>.\n  For example:\n<div class=\"content\">\n<div class=\"code-container\">\nstrmatch(\"foo bar\", \"foo bar\")\n\n</div>\n<p>\u2026<strong>will return 0</strong>, because the first argument consists of <em>two</em>\n  patterns, <code>foo</code> and <code>bar</code>, and neither of those patterns match\n  <code>foo bar</code> (since the pattern must match from beginning to end).</p>\n<p>Similarly,</p>\n<div class=\"code-container\">\nstrmatch(\"foo bar\", \"foo\")\n\n</div>\n<p>\u2026will return 1, because the string matches the first of the\n  two arguments in the pattern (<code>foo</code> and <code>bar</code>).</p>\n</div>\n</li>\n</ul>\n</div>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nstrmatch(\"foo*\", \"foobar\") = 1\n</div><div class=\"code-container\">\nstrmatch(\"?bar\", \"fred\") = 0\n</div><div class=\"code-container\">\nstrmatch(\"foo*,bar*\", \"bar\") = 1\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strcmp\">strcmp()</a><div class=\"related-summary\">Compares two strings.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strcasecmp\">strcasecmp()</a><div class=\"related-summary\">Compares two strings, ignoring case.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/strcasematch\">strcasematch()</a><div class=\"related-summary\">Returns 1 if a string matches a pattern, ignoring case.</div></p></div>",
        "return": "float"
    },
    "strreplace": {
        "argnames": [
            "s",
            "old",
            "new"
        ],
        "args": [
            "string",
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/strreplace\">strreplace</a></h1><p class=\"summary\">Replaces substrings with a new string.</p><p><code>string strreplace(string s, string old, string new)</code></p>\n\n\n\n<p>Returns a copy of <code>s</code> with any occurances of the\n<code>old</code> string replaces with the <code>new</code> string.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `strreplace(\"/project/project.hip\", \"project\", \"char01\")`\n</div>\n<p>Returns <code>/char01/char01.hip</code>.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "sturb": {
        "argnames": [
            "X",
            "Y",
            "Z",
            "depth"
        ],
        "args": [
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/sturb\">sturb</a></h1><p class=\"summary\">Generates spatially coherent 3D noise based on sparse convolution.</p><p><code>float sturb(float X, float Y, float Z, float depth)</code></p>\n\n\n\n<p>Spatially coherent noise gives random numbers which are close\nto each other when the X, Y, Z inputs are close to each other.</p>\n<p><code>depth</code> is the amount of fractalization of the noise.</p>\n<p>This is very similar to <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/turb\" title=\"Generates spatially coherent 3D noise.\">turb()</a>, except instead of finding noise values\non a fixed lattice and interpolating, this function finds noise\nvalues on points scattered in space and interpolated according\nto the Voronoi decomposition.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/turb\">turb()</a><div class=\"related-summary\">Generates spatially coherent 3D noise.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/noise\">noise()</a><div class=\"related-summary\">Generates 3D noise.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/snoise\">snoise()</a><div class=\"related-summary\">Generates sparse convolution 3D noise.</div></p></div>",
        "return": "float"
    },
    "substr": {
        "argnames": [
            "s",
            "start",
            "length"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/substr\">substr</a></h1><p class=\"summary\">Returns a substring of a string.</p><p><code>string substr(string s, float start, float length)</code></p>\n\n\n\n<p>Returns the characters of <code>s</code> between the <code>start</code>\nposition and the <code>start</code> + <code>length</code> position.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\necho `substr(\"STRING\", 3, 1)`\n</div>\n<p>Returns <code>I</code>.</p>\n<div class=\"code-container\">\necho `substr(\"STRING\", 0, 3)`\n</div>\n<p>Returns <code>STR</code>.</p>\n<div class=\"code-container\">\necho `substr(\"STRING\", 3, 2)`\n</div>\n<p>Returns <code>IN</code>.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "surflen": {
        "argnames": [
            "surface_node",
            "prim_num",
            "ustart",
            "vstart",
            "ustop",
            "vstop"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/surflen\">surflen</a></h1><p class=\"summary\">Returns the length of the 3D curve between two points on a surface.</p><p><code>float surflen(string surface_node, float prim_num, float ustart, float vstart, float ustop, float vstop)</code></p>\n\n\n\n<p>Given a surface and two parametric points in its domain (\n<code>[ustart,vstart]</code> and <code>[ustop,vstop]</code> ), surflen computes the length of the\n3D curve that stretches between the two points. This curve is the 3D\nimage of the line in the surface domain, whose end-points are\n<code>[ustart,vstart]</code> and <code>[ustop,vstop]</code>. If either u or v is kept constant,\nthe 3D curve coincides with an isoparm.</p>\n<p>All four uv numbers are unit values, defined in the <code>[0,1]</code> interval.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>the primitive must be either a NURBS surface or a Bezier surface. A\n    polygonal mesh can be simulated by a bi-linear Bezier surface (u and\n    v order 2).</p>\n</div>\n</div>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nsurflen(\"/obj/geo1/grid1\", 12, 0, 1, 0.2, 0.8)\n\n</div>\n<p>Computes the length of the curve on surface #12, defined\n    parametrically by the surface domain points <code>[0,1]</code> and <code>[0.2, 0.8]</code>.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/arclen\">arclen()</a><div class=\"related-summary\">Returns the arc length of a curve between two U positions.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/normal\">normal()</a><div class=\"related-summary\">Returns the components of the surface normal specific UV coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/curvature\">curvature()</a><div class=\"related-summary\">Returns the curvature of the surface at the given UV coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv()</a><div class=\"related-summary\">Converts real UV to unit UV.</div></p></div>",
        "return": "float"
    },
    "system": {
        "argnames": [
            "command_string"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/system\">system</a></h1><p class=\"summary\">Runs a system command line and returns the output.</p><p><code>string system(string command_string)</code></p>\n\n\n<p>This will transform all linefeeds and carriage returns into spaces.\nTo get the raw output, use systemRAW.</p>\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">system(command_string)\n</code>\n\n\n</li>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nsystem(\"finger\")\n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "systemES": {
        "argnames": [
            "command_string"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/systemES\">systemES</a></h1><p class=\"summary\">Runs a system command line and returns the exit status.</p><p><code>float systemES(string command_string)</code></p>\n\n\n\n<p>This function returns the <em>exit code</em> of the command. To get\nthe <em>output</em> of the command instead, use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/system\" title=\"Runs a system command line and returns the output.\">system()</a>.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nsystemES(\"test -r $HOME/houdini/123.cmd\") = 0\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "systemRAW": {
        "argnames": [
            "command_string"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/systemRAW\">systemRAW</a></h1><p class=\"summary\">Runs a system command line and returns the output with no processing.</p><p><code>string systemRAW(string command_string)</code></p>\n\n\n<p>Unlike the system command, this does not transform linefeeds or\ncarriage returns into spaces.</p>\n<div class=\"usage_group item_group\">\n<li class=\"usage item\">\n\n<code class=\"line\">systemRAW(command_string)\n</code>\n\n\n</li>\n</div>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nsystemRAW(\"cat myfile.txt\")\n\n</div>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "tan": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/tan\">tan</a></h1><p class=\"summary\">Returns the tangent of the argument.</p><p><code>float tan(float number)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ntan (60)=1.73205\n\n</div>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "tanh": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/tanh\">tanh</a></h1><p class=\"summary\">Returns the hyperbolic tangent of the argument.</p><p><code>float tanh(float number)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "tex": {
        "argnames": [
            "filename",
            "U",
            "V",
            "color_type"
        ],
        "args": [
            "string",
            "float",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/tex\">tex</a></h1><p class=\"summary\">Returns the interpolated color of a point on an on-disk texture map.</p><p><code>float tex(string filename, float U, float V, string color_type)</code></p>\n\n\n\n<p>Textures can be 1, 3 or 4 channel images containing 8-bit, 16-bit or\nfloating point data.</p>\n<p><code>color_type</code> can be one of:</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\nr, R, or D_CR = Red channel\n</li>\n<li class=\"bullet \">\ng, G, or D_CG = Green channel\n</li>\n<li class=\"bullet \">\nb, B, or D_CB = Blue channel\n</li>\n<li class=\"bullet \">\na, A, or D_CA = Alpha channel\n</li>\n<li class=\"bullet \">\nh, H, or D_CHUE = Color hue\n</li>\n<li class=\"bullet \">\ns, S, or D_CSAT = Color saturation\n</li>\n<li class=\"bullet \">\nv, V, or D_CVAL = Color value\n</li>\n<li class=\"bullet \">\nl, L, or D_CLUM = Color luminance\n</li>\n</ul>\n<p>This function will interpolate colors smoothly between pixels.\nFor the non-interpolated version, use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/texni\" title=\"Returns the non-interpolated color of a point on an on-disk texture map.\">texni()</a>.</p>\n<p>When the color component asked for doesn\u2019t match\nthe format of the image, some default behaviour will be taken.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ntex(\"Mandril.pic\", $BBX, $BBY, r).\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/texni\">texni()</a><div class=\"related-summary\">Returns the non-interpolated color of a point on an on-disk texture map.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pic\">pic()</a><div class=\"related-summary\">Returns the color of a pixel in a compositing node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/picni\">picni()</a><div class=\"related-summary\">Returns the non-interpolated color of a pixel in a compositing node.</div></p></div>",
        "return": "float"
    },
    "texni": {
        "argnames": [
            "diskfile",
            "U",
            "V",
            "color_type"
        ],
        "args": [
            "string",
            "float",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/texni\">texni</a></h1><p class=\"summary\">Returns the non-interpolated color of a point on an on-disk texture map.</p><p><code>float texni(string diskfile, float U, float V, string color_type)</code></p>\n\n\n\n<p>Textures can be 1, 3 or 4 channel images containing 8-bit, 16-bit or\nfloating point data.</p>\n<p><code>color_type</code> can be one of:</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\nr, R, or D_CR = Red channel\n</li>\n<li class=\"bullet \">\ng, G, or D_CG = Green channel\n</li>\n<li class=\"bullet \">\nb, B, or D_CB = Blue channel\n</li>\n<li class=\"bullet \">\na, A, or D_CA = Alpha channel\n</li>\n<li class=\"bullet \">\nh, H, or D_CHUE = Color hue\n</li>\n<li class=\"bullet \">\ns, S, or D_CSAT = Color saturation\n</li>\n<li class=\"bullet \">\nv, V, or D_CVAL = Color value\n</li>\n<li class=\"bullet \">\nl, L, or D_CLUM = Color luminance\n</li>\n</ul>\n<p>This function will <em>not</em> interpolate colors between pixels.\nFor the interpolated version, use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/tex\" title=\"Returns the interpolated color of a point on an on-disk texture map.\">tex()</a>.</p>\n<p>When the color component asked for doesn\u2019t match\nthe format of the image, some default behaviour will be taken.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ntexni(\"Mandril.pic\", $BBX, $BBY, r).\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/tex\">tex()</a><div class=\"related-summary\">Returns the interpolated color of a point on an on-disk texture map.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pic\">pic()</a><div class=\"related-summary\">Returns the color of a pixel in a compositing node.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/picni\">picni()</a><div class=\"related-summary\">Returns the non-interpolated color of a pixel in a compositing node.</div></p></div>",
        "return": "float"
    },
    "tolower": {
        "argnames": [
            "s"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/tolower\">tolower</a></h1><p class=\"summary\">Returns the all-lowercase version of a string.</p><p><code>string tolower(string s)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/toupper\">toupper()</a><div class=\"related-summary\">Returns the all-uppercase version of a string.</div></p></div>",
        "return": "string"
    },
    "toupper": {
        "argnames": [
            "s"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/toupper\">toupper</a></h1><p class=\"summary\">Returns the all-uppercase version of a string.</p><p><code>string toupper(string s)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/tolower\">tolower()</a><div class=\"related-summary\">Returns the all-lowercase version of a string.</div></p></div>",
        "return": "string"
    },
    "translate": {
        "argnames": [
            "tx",
            "ty",
            "tz"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/translate\">translate</a></h1><p class=\"summary\">Takes X, Y, and Z translation values and returns a translation matrix.</p><p><code>matrix translate(float tx, float ty, float tz)</code></p>\n\n\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rotate\">rotate()</a><div class=\"related-summary\">Returns a 4\u00d74 rotation matrix from an axis and angle.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/rotaxis\">rotaxis()</a><div class=\"related-summary\">Returns a 4\u00d74 rotation matrix from an angle and a vector.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/scale\">scale()</a><div class=\"related-summary\">Takes three scaling values and returns a scale matrix.</div></p></div>",
        "return": "matrix"
    },
    "transpose": {
        "argnames": [
            "mat"
        ],
        "args": [
            "matrix"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/transpose\">transpose</a></h1><p class=\"summary\">Transposes a matrix.</p><p><code>matrix transpose(matrix mat)</code></p>\n\n\n\n\n</div>",
        "return": "matrix"
    },
    "trunc": {
        "argnames": [
            "number"
        ],
        "args": [
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/trunc\">trunc</a></h1><p class=\"summary\">Converts a number to an integer by truncating any fractional part, rounding towards 0.</p><p><code>float trunc(float number)</code></p>\n\n\n\n<p>The number is rounded toward 0. That is, for positive numbers,\nthe largest integer less than the number will be returned.\nFor negative numbers, the smallest integer greater than the number\nwill be returned.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\ntrunc(2.6)=2\n\n</div><div class=\"code-container\">\ntrunc(-2.6)=-2\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/int\">int()</a><div class=\"related-summary\">Converts a number to an integer by truncating any fractional part.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/floor\">floor()</a><div class=\"related-summary\">Returns the largest integer not greater than a number.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/ceil\">ceil()</a><div class=\"related-summary\">Returns the smallest integer not less than the value passed in.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/round\">round()</a><div class=\"related-summary\">Rounds a number to the nearest integer.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/frac\">frac()</a><div class=\"related-summary\">Returns the fractional part of a floating-point number.</div></p></div>",
        "return": "float"
    },
    "turb": {
        "argnames": [
            "X",
            "Y",
            "Z",
            "depth"
        ],
        "args": [
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/turb\">turb</a></h1><p class=\"summary\">Generates spatially coherent 3D noise.</p><p><code>float turb(float X, float Y, float Z, float depth)</code></p>\n\n\n\n<p>Spatially coherent noise gives random numbers which are close\nto each other when the X, Y, Z inputs are close to each other.</p>\n<p><code>depth</code> is the amount of fractalization done to the noise.</p>\n<p>The noise is calculated on a unit-spaced lattice.  This means the\nnoise will be independent between points one unit distance apart.  You\ncan scale the inputs to achieve different frequencies.</p>\n<p>The range is usually within -1 to 1, but can exceed it depending on\nthe depth.  The maximum range is -2 to 2 for high depths.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/sturb\">sturb()</a><div class=\"related-summary\">Generates spatially coherent 3D noise based on sparse convolution.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/noise\">noise()</a><div class=\"related-summary\">Generates 3D noise.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/snoise\">snoise()</a><div class=\"related-summary\">Generates sparse convolution 3D noise.</div></p></div>",
        "return": "float"
    },
    "uniqueval": {
        "argnames": [
            "surface_node",
            "class",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/uniqueval\">uniqueval</a></h1><p class=\"summary\">Returns a unique value of an integer attribute.</p><p><code>float uniqueval(string surface_node, float class, string attribute, float index)</code></p>\n\n\n\n<p>The <code>class</code> can be one of <code>D_VERTEX</code>, <code>D_POINT</code>, <code>D_PRIMITIVE</code>, or <code>D_DETAIL</code> for the corresponding attribute class.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nuniqueval(\"/obj/geo1/facet1\", D_PRIMITIVE, \"piece\", 0)\n\n</div>\n<p>Returns the first unique integer value associated with the primitive\n    attribute <code>piece</code> in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "uniquevals": {
        "argnames": [
            "surface_node",
            "class",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/uniquevals\">uniquevals</a></h1><p class=\"summary\">Returns a unique value of a string attribute.</p><p><code>string uniquevals(string surface_node, float class, string attribute, float index)</code></p>\n\n\n\n<p>The <code>class</code> can be one of <code>D_VERTEX</code>, <code>D_POINT</code>, <code>D_PRIMITIVE</code>, or <code>D_DETAIL</code> for the corresponding attribute class.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nuniquevals(\"/obj/geo1/facet1\", D_PRIMITIVE, \"name\", 0)\n\n</div>\n<p>Returns the first unique string value associated with the primitive\n    attribute \"name\" in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "unituv": {
        "argnames": [
            "surface_node",
            "prim_num",
            "uv_real",
            "D_U|D_V"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv</a></h1><p class=\"summary\">Converts real UV to unit UV.</p><p><code>float unituv(string surface_node, float prim_num, float uv_real, float D_U|D_V)</code></p>\n\n\n\n<p>The unit value is defined in the <code>[0,1]</code> interval. The\nreal value is defined in the valid interval of the primitive\u2019s domain if\nthe primitive is a spline type. If the primitive is a polygon or a mesh,\nthe size of its domain is given by the number of vertices, or rows or\ncolumns respectively. If the primitive is a polygon or a curve, D_U and\nD_V are irrelevant.</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>the result is undefined if the primitive is neither a face nor a\n    hull.</p>\n</div>\n</div>\n</div>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/realuv\">realuv()</a><div class=\"related-summary\">Converts unit UV to real UV.</div></p></div>",
        "return": "float"
    },
    "uvdist": {
        "argnames": [
            "surface_node",
            "prim1_num",
            "u1",
            "v1",
            "surface_node",
            "prim2_num",
            "u2",
            "v2"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float",
            "string",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/uvdist\">uvdist</a></h1><p class=\"summary\">Returns the distance between parameteric locations on two primitives.</p><p><code>float uvdist(string surface_node, float prim1_num, float u1, float v1, string surface_node, float prim2_num, float u2, float v2)</code></p>\n\n\n\n<p>Valid u and v values are between 0 and 1.</p>\n<p>Any primitive type is allowed.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nuvdist(\"/obj/geo1/sphere1\", 0, 0.1, 0.8, \"/obj/geo1/grid1\", 2, 1, 0.5)\n\n</div>\n<p>Returns the distance between point (0.1, 0.8) on the first primitive\n    in sphere1 and point (1, 0.5) on the third primitive in grid1.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/distance\">distance()</a><div class=\"related-summary\">Returns the distance between two 3D points.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primdist\">primdist()</a><div class=\"related-summary\">Returns the minimum distance and closest points between two primitives.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointdist\">pointdist()</a><div class=\"related-summary\">Returns the distance between a point and a primitive.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/unituv\">unituv()</a><div class=\"related-summary\">Converts real UV to unit UV.</div></p></div>",
        "return": "float"
    },
    "vangle": {
        "argnames": [
            "v0",
            "v1"
        ],
        "args": [
            "vector",
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vangle\">vangle</a></h1><p class=\"summary\">Returns the angle between two vectors.</p><p><code>float vangle(vector v0, vector v1)</code></p>\n\n\n\n<p><code>vangle(a, b)</code> will return the same result as <code>acos ( dot (normalize(a), normalize(b)) )</code>. It will not produce a negative result because the dot product is symmetric, and does not take the order of a and b into consideration.</p>\n<p>You can define a turning order with the left hand rule or something similar. </p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item tip \">\nTip\n<div class=\"content\">\n<p>Try the following expression to get a signed result: <code>sign(dot(cross(cross(a,b),b),a)) * vangle(a,b)</code></p>\n</div>\n</div>\n</div>\n\n</div>",
        "return": "float"
    },
    "vector": {
        "argnames": [
            "pattern"
        ],
        "args": [
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vector\">vector</a></h1><p class=\"summary\">Converts a string specification into a vector.</p><p><code>vector vector(string pattern)</code></p>\n\n\n\n<p>The pattern should\nconsist of a leading square bracket followed by a comma-separated list\nof values and a closing square bracket.</p>\n<p>To access a value out of the vector, use the square bracket operator.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvector v = vector(\"[1,2,3,4,5]\");\nfloat  f = v[0]; # f is 1\n\n</div>\n</div>\n\n\n</div>",
        "return": "vector"
    },
    "vector3": {
        "argnames": [
            "x",
            "y",
            "z"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vector3\">vector3</a></h1><p class=\"summary\">Converts three values into a 3-component vector.</p><p><code>vector vector3(float x, float y, float z)</code></p>\n\n\n\n<p>The pattern should\nconsist of a leading square bracket followed by a comma-separated list\nof values and a closing square bracket.</p>\n<p>To access a value out of the vector, use the square bracket operator.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvector v = vector3(3,2,1);\nfloat  f = v[0]; # f is 3\n\n</div>\n</div>\n\n\n</div>",
        "return": "vector"
    },
    "vector4": {
        "argnames": [
            "x",
            "y",
            "z",
            "w"
        ],
        "args": [
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vector4\">vector4</a></h1><p class=\"summary\">Converts four values into a 4-component vector.</p><p><code>vector vector4(float x, float y, float z, float w)</code></p>\n\n\n\n<p>To access a value out of the vector, use the square bracket operator.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvector v = vector4(3,2,1,0);\nfloat  f = v[0]; # f is 3\n\n</div>\n</div>\n\n\n</div>",
        "return": "vector"
    },
    "vertex": {
        "argnames": [
            "surface_node",
            "primitive_number",
            "vertex_number",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "float",
            "float",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vertex\">vertex</a></h1><p class=\"summary\">Returns the value of a vertex attribute.</p><p><code>float vertex(string surface_node, float primitive_number, float vertex_number, string attribute, float index)</code></p>\n\n\n\n<p><code>attribute</code> is the name of the attribute (eg. \"Cd\"\nfor diffuse color). Two special attributes exist \"P\" and \"Pw\" which\nrepresent the position of the point in space (\"Pw\" allows you to access\nthe W component of the position).</p>\n<div class=\"notices ind-group\">\n<div class=\"notice ind-item note \">\nNote\n<div class=\"content\">\n<p>This function will interpolate between point values if the vertex\n    number is fractional, such as 3.35.</p>\n</div>\n</div>\n</div>\n<p><code>index</code> specifies the component position in multi-component attributes such as vectors, colors, and arrays. For example, if the attribute is a color, an <code>index</code> value of <code>0</code> returns the red component, <code>1</code> returns the green component, and <code>2</code> returns the blue component.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvertex(\"/obj/geo1/facet1\", 2, 3, \"P\", 0)\n\n</div>\n<p>Return the X component of vertex 3 of primitive2 in the facet1\n    surface node of geo1.</p>\n<div class=\"code-container\">\npoint(\"/obj/geo1/facet1\", 2, 3, \"Cd\", 2)\n\n</div>\n<p>Returns the Z component of the color attribute of vertex 3 of\n    primitive 2 in the facet1 surface node of object geo1.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/point\">point()</a><div class=\"related-summary\">Returns the value of a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointavg\">pointavg()</a><div class=\"related-summary\">Returns the average of an attribute across all points in a geometry.</div></p></div>",
        "return": "float"
    },
    "vertexattribsize": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vertexattribsize\">vertexattribsize</a></h1><p class=\"summary\">Returns the number of components in a vertex attribute.</p><p><code>float vertexattribsize(string surface_node, string attribute)</code></p>\n\n\n\n<p>If the surface node or attribute are not found, returns 0.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvertexattribsize( \"/obj/model/sphere\", \"uv\" )\n\n</div>\n<p>Returns the number of elements of a texture attribute.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertex\">vertex()</a><div class=\"related-summary\">Returns the value of a vertex attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointattribsize\">pointattribsize()</a><div class=\"related-summary\">Returns the number of components in a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primattribsize\">primattribsize()</a><div class=\"related-summary\">Returns the number of components in a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/detailattribsize\">detailattribsize()</a><div class=\"related-summary\">Returns the number of components in a detail attribute.</div></p></div>",
        "return": "float"
    },
    "vertexattribtype": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vertexattribtype\">vertexattribtype</a></h1><p class=\"summary\">Returns the type of a vertex attribute.</p><p><code>float vertexattribtype(string surface_node, string attribute)</code></p>\n\n\n\n<p>If the surface node or attribute are not found, returns -1.</p>\n\n<p>\nTypes are\n        \n<div class=\"content\">\n<ul class=\"bullets\">\n<li class=\"bullet \">\n-1 - Unknown/Invalid\n</li>\n<li class=\"bullet \">\n0 - Integer\n</li>\n<li class=\"bullet \">\n1 - Float\n</li>\n<li class=\"bullet \">\n2 - String\n</li>\n</ul>\n</div>\n</p>\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvertexattribsize( \"/obj/model/box\", \"Cd\" )\n\n</div>\n<p>Returns 1 to denote a float attribute.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vertex\">vertex()</a><div class=\"related-summary\">Returns the value of a vertex attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointattribtype\">pointattribtype()</a><div class=\"related-summary\">Returns the type of a point attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primattribtype\">primattribtype()</a><div class=\"related-summary\">Returns the type of a primitive attribute.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/detailattribtype\">detailattribtype()</a><div class=\"related-summary\">Returns the type of a detail attribute.</div></p></div>",
        "return": "float"
    },
    "vertexs": {
        "argnames": [
            "surface_node",
            "primitive_number",
            "vertex_number",
            "attribute"
        ],
        "args": [
            "string",
            "float",
            "float",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vertexs\">vertexs</a></h1><p class=\"summary\">Returns the string value of a vertex attribute.</p><p><code>string vertexs(string surface_node, float primitive_number, float vertex_number, string attribute)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvertexs(\"/obj/geo1/facet1\", 1, 3, \"instance\")\n\n</div>\n<p>Returns the string associated with the string attribute \"instance\"\n    for vertex 3 of primitive 0 in the facet1 surface node in geo1.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "vertexsmap": {
        "argnames": [
            "surface_node",
            "attribute",
            "index"
        ],
        "args": [
            "string",
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vertexsmap\">vertexsmap</a></h1><p class=\"summary\">Returns a string from a list of strings in a vertex attribute.</p><p><code>string vertexsmap(string surface_node, string attribute, float index)</code></p>\n\n\n\n<p>This function will return the <code>index</code>th unique string bound to the given\npoint attribute. Use <a class=\"link Exp\" href=\"https://www.sidefx.com/docs/houdini/expressions/vertexsnummap\" title=\"Returns the number of unique strings bound to a point attribute.\">vertexsnummap()</a> to find the total number of unique\nstrings. Note that the exact order of the strings is should not be\nrelied upon. The indexes start with 0 and go to vertexsnummap()-1.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvertexsmap(\"/obj/geo1/attribcreate1\", \"foo\", 0)\n\n</div>\n<p>Returns the first unique string in the foo attribute.</p>\n</div>\n\n\n</div>",
        "return": "string"
    },
    "vertexsnummap": {
        "argnames": [
            "surface_node",
            "attribute"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vertexsnummap\">vertexsnummap</a></h1><p class=\"summary\">Returns the number of unique strings bound to a point attribute.</p><p><code>float vertexsnummap(string surface_node, string attribute)</code></p>\n\n\n\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvertexsnummap(\"/obj/geo1/attribcreate1\", \"foo\")\n\n</div>\n<p>Returns number of unique strings for the foo attribute.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "vlength": {
        "argnames": [
            "vec"
        ],
        "args": [
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vlength\">vlength</a></h1><p class=\"summary\">Returns the length of a vector.</p><p><code>float vlength(vector vec)</code></p>\n\n\n\n<p>A.K.A. <code>sqrt(dot(<code>vec</code>, <code>vec</code>))</code>.</p>\n\n</div>",
        "return": "float"
    },
    "vlength2": {
        "argnames": [
            "vec"
        ],
        "args": [
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vlength2\">vlength2</a></h1><p class=\"summary\"></p><p><code>float vlength2(vector vec)</code></p>\n\n\n\n<p>Compute the square of the length of the vector specified. This is\nequivalent to: dot(vec, vec).</p>\n\n</div>",
        "return": "float"
    },
    "vmatch": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vmatch\">vmatch</a></h1><p class=\"summary\">Channel segment function: matches the incoming and outgoing slopes.</p><p><code>float vmatch()</code></p>\n\n\n\n<p>The values at each end of the segment will\nbe determined by the values specified at the segment ends.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/match\">match()</a><div class=\"related-summary\">Channel segment function: matches the incoming and outgoing slopes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatchin\">vmatchin()</a><div class=\"related-summary\">Channel segment function: matches the incoming slope.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatchout\">vmatchout()</a><div class=\"related-summary\">Channel segment function: matches the outgoing slope.</div></p></div>",
        "return": "float"
    },
    "vmatchin": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vmatchin\">vmatchin</a></h1><p class=\"summary\">Channel segment function: matches the incoming slope.</p><p><code>float vmatchin()</code></p>\n\n\n\n<p>The segment will be a straight line matching the slope of the\nprevious segment, but using the starting value specified a the beginning\nof this segment.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/matchin\">matchin()</a><div class=\"related-summary\">Channel segment function: matches the incoming slope.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatch\">vmatch()</a><div class=\"related-summary\">Channel segment function: matches the incoming and outgoing slopes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatchout\">vmatchout()</a><div class=\"related-summary\">Channel segment function: matches the outgoing slope.</div></p></div>",
        "return": "float"
    },
    "vmatchout": {
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vmatchout\">vmatchout</a></h1><p class=\"summary\">Channel segment function: matches the outgoing slope.</p><p><code>float vmatchout()</code></p>\n\n\n\n<p>Compute a straight\nline which has the same slope as the in coming slope of the next\nsegment. The straight line will end at the value specified.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/matchout\">matchout()</a><div class=\"related-summary\">Channel segment function: matches the outgoing slope.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatch\">vmatch()</a><div class=\"related-summary\">Channel segment function: matches the incoming and outgoing slopes.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vmatchin\">vmatchin()</a><div class=\"related-summary\">Channel segment function: matches the incoming slope.</div></p></div>",
        "return": "float"
    },
    "volumeaverage": {
        "argnames": [
            "surface_node",
            "prim_id"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumeaverage\">volumeaverage</a></h1><p class=\"summary\">Returns the average value of all the voxels in a volume.</p><p><code>float volumeaverage(string surface_node, float prim_id)</code></p>\n\n\n\n<p><code>surface_node</code> is the full path of the surface node.\n<code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p>Returns 0 if out of bound values are specified, or the given primitive is not a\nvolume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumeaverage(\"/obj/geo1/isooffset1\", 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "volumegradient": {
        "argnames": [
            "surface_node",
            "prim_id",
            "x",
            "y",
            "z",
            "axis"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumegradient\">volumegradient</a></h1><p class=\"summary\">Returns the gradient of a volume primitive at a specified location.</p><p><code>float volumegradient(string surface_node, float prim_id, float x, float y, float z, float axis)</code></p>\n\n\n\n<p>The gradient of a volume primitive is a three dimensional vector\npointing in the direction of increasing value in the volume primitive.\nIt is returned in surface space (as opposed to the volume\u2019s local space or\nworld space).</p>\n<p><code>surface_node</code> is the full path of the surface node.\n<code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p><code>axis</code> controls which component of the gradient is returned:</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>axis</code> = 0: X-axis\n</li>\n<li class=\"bullet \">\n<code>axis</code> = 1: Y-axis\n</li>\n<li class=\"bullet \">\n<code>axis</code> = 2: Z-axis\n</li>\n</ul>\n<p>Returns 0 if out of bound values are specified, or the given primitive\nis not a volume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumegradient(\"/obj/geo1/isooffset1\", 0, $TX, $TX, $TZ, 1)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "volumeindex": {
        "argnames": [
            "surface_node",
            "prim_id",
            "ix",
            "iy",
            "iz"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumeindex\">volumeindex</a></h1><p class=\"summary\">Returns the value of a volume primitive at a specified voxel.</p><p><code>float volumeindex(string surface_node, float prim_id, float ix, float iy, float iz)</code></p>\n\n\n\n<p>The coordinates are in terms of the voxel grid, not world\ncoordinates.  0, 0, 0 means the first voxel.</p>\n<p><code>surface_node</code> is the full path of the surface node.\n<code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p>Returns 0 if out of bound values are specified,\nor the given primitive is not a volume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumeindex(\"/obj/geo1/isooffset1\", 0, 3, 4, 5)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "volumeindextopos": {
        "argnames": [
            "surface_node",
            "prim_id",
            "ix",
            "iy",
            "iz",
            "axis"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumeindextopos\">volumeindextopos</a></h1><p class=\"summary\">Converts volume voxel coordinates to world-space coordinates.</p><p><code>float volumeindextopos(string surface_node, float prim_id, float ix, float iy, float iz, float axis)</code></p>\n\n\n\n<p>Returns the world-space coordinates of the center of\nthe given voxel.</p>\n<p><code>surface_node</code> is the full path of the surface node.\nThe <code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p><code>axis</code> controls which component of the voxel index is returned:</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>axis</code> = 0: X-axis\n</li>\n<li class=\"bullet \">\n<code>axis</code> = 1: Y-axis\n</li>\n<li class=\"bullet \">\n<code>axis</code> = 2: Z-axis\n</li>\n</ul>\n<p>Returns 0 if out of bound values are specified, or the given primitive\nis not a volume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumeindextopos(\"/obj/geo1/isooffset1\", 0, $TX, $TY, $TZ, 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumepostoindex\">volumepostoindex()</a><div class=\"related-summary\">Converts world space coordinates to volume voxel coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "volumemax": {
        "argnames": [
            "surface_node",
            "prim_id"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumemax\">volumemax</a></h1><p class=\"summary\">Returns the maximum value of all voxels in a volume.</p><p><code>float volumemax(string surface_node, float prim_id)</code></p>\n\n\n\n<p><code>surface_node</code> is the full path of the surface node.</p>\n<p><code>surface_node</code> is the full path of the surface node.\n<code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p>Returns 0 if out of bound values are specified, or the given primitive\nis not a volume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumemax(\"/obj/geo1/isooffset1\", 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumemin\">volumemin()</a><div class=\"related-summary\">Returns the minimum value of all voxels in a volume.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "volumemin": {
        "argnames": [
            "surface_node",
            "prim_id"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumemin\">volumemin</a></h1><p class=\"summary\">Returns the minimum value of all voxels in a volume.</p><p><code>float volumemin(string surface_node, float prim_id)</code></p>\n\n\n\n<p><code>surface_node</code> is the full path of the surface node.</p>\n<p><code>surface_node</code> is the full path of the surface node.\n<code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p>Returns 0 if out of bound values are specified, or the given primitive\nis not a volume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumemin(\"/obj/geo1/isooffset1\", 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumemax\">volumemax()</a><div class=\"related-summary\">Returns the maximum value of all voxels in a volume.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "volumepostoindex": {
        "argnames": [
            "surface_node",
            "prim_id",
            "x",
            "y",
            "z",
            "axis"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumepostoindex\">volumepostoindex</a></h1><p class=\"summary\">Converts world space coordinates to volume voxel coordinates.</p><p><code>float volumepostoindex(string surface_node, float prim_id, float x, float y, float z, float axis)</code></p>\n\n\n\n<p>This function will return the voxel closest to the given worldspace\ncoordinated.  The axis selects which coordinate is returned.</p>\n<p><code>surface_node</code> is the full path of the surface node.\nThe <code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p>Returns 0 if out of bound values are specified, or the given primitive\nis not a volume.</p>\n<p><code>axis</code> controls which component of the world space position is returned:</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>axis</code> = 0: X-axis\n</li>\n<li class=\"bullet \">\n<code>axis</code> = 1: Y-axis\n</li>\n<li class=\"bullet \">\n<code>axis</code> = 2: Z-axis\n</li>\n</ul>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumepostoindex(\"/obj/geo1/isooffset1\", 0, 3, 4, 5, 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumeindextopos\">volumeindextopos()</a><div class=\"related-summary\">Converts volume voxel coordinates to world-space coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "volumeres": {
        "argnames": [
            "surface_node",
            "prim_id",
            "axis"
        ],
        "args": [
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumeres\">volumeres</a></h1><p class=\"summary\">Returns the resolution of a volume.</p><p><code>float volumeres(string surface_node, float prim_id, float axis)</code></p>\n\n\n\n<p><code>surface_node</code> is the full path of the surface node.\nThe <code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p><code>axis</code> controls which component of the resolution is returned:</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\n<code>axis</code> = 0: X-axis\n</li>\n<li class=\"bullet \">\n<code>axis</code> = 1: Y-axis\n</li>\n<li class=\"bullet \">\n<code>axis</code> = 2: Z-axis\n</li>\n</ul>\n<p>Returns 0 if out of bound values are specified, or the given primitive\nis not a volume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumeres(\"/obj/geo1/isooffset1\", 0, 1)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "volumesample": {
        "argnames": [
            "surface_node",
            "prim_id",
            "x",
            "y",
            "z"
        ],
        "args": [
            "string",
            "float",
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample</a></h1><p class=\"summary\">Returns the value of a volume at a specified position.</p><p><code>float volumesample(string surface_node, float prim_id, float x, float y, float z)</code></p>\n\n\n\n<p><code>surface_node</code> is the full path of the surface node.\n<code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p>Returns 0 if out of bound values are specified,\nor the given primitive is not a volume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumesample(\"/obj/geo1/isooffset1\", 0, $TX, $TX, $TZ)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumeindex\">volumeindex()</a><div class=\"related-summary\">Returns the value of a volume primitive at a specified voxel.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumegradient\">volumegradient()</a><div class=\"related-summary\">Returns the gradient of a volume primitive at a specified location.</div></p></div>",
        "return": "float"
    },
    "volumevoxeldiameter": {
        "argnames": [
            "surface_node",
            "prim_id"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/volumevoxeldiameter\">volumevoxeldiameter</a></h1><p class=\"summary\">Returns the approximage diameter of a volume voxel in world space.</p><p><code>float volumevoxeldiameter(string surface_node, float prim_id)</code></p>\n\n\n\n<p><code>surface_node</code> is the full path of the surface node.\n<code>prim_id</code> is the primitive number of the volume primitive\nwithin the surface node.</p>\n<p>Returns 0 if out of bound values are specified,\nor the given primitive is not a volume.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nvolumevoxeldiameter(\"/obj/geo1/isooffset1\", 0)\n\n</div>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumeindex\">volumeindex()</a><div class=\"related-summary\">Returns the value of a volume primitive at a specified voxel.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/volumesample\">volumesample()</a><div class=\"related-summary\">Returns the value of a volume at a specified position.</div></p></div>",
        "return": "float"
    },
    "vorigin": {
        "argnames": [
            "obj1",
            "obj2"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vorigin\">vorigin</a></h1><p class=\"summary\">Returns a vector of an objects' transforms.</p><p><code>vector vorigin(string obj1, string obj2)</code></p>\n\n\n\n<p>This function will return a vector with 6 values in it. The values are\nset to <code>[TX, TY, TZ, RX, RY, RZ]</code> for the position of obj1 relative to\nobj2.</p>\n<p>This can also be thought of as the position of obj2 relative to obj1.</p>\n<p>If the empty string (\"\") is specified for either obj1 or obj2, then the\nidentity transform will be used instead.  For example, if obj1 is the\nempty string, then the world space position of obj2 is returned.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/origin\">origin()</a><div class=\"related-summary\">Returns components of an object\u2019s transforms.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vtorigin\">vtorigin()</a><div class=\"related-summary\">Returns a vector of an object\u2019s translations.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vrorigin\">vrorigin()</a><div class=\"related-summary\">Returns a vector of an object\u2019s rotations.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/originoffset\">originoffset()</a><div class=\"related-summary\">Returns components of an object\u2019s offset transforms.</div></p></div>",
        "return": "vector"
    },
    "vpname": {
        "argnames": [
            "viewer",
            "viewport_quadrant_number"
        ],
        "args": [
            "string",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vpname\">vpname</a></h1><p class=\"summary\">Takes a viewer name and a viewport number\nand returns the viewport\u2019s name.</p><p><code>string vpname(string viewer, float viewport_quadrant_number)</code></p>\n\n\n\n\n</div>",
        "return": "string"
    },
    "vrorigin": {
        "argnames": [
            "obj1",
            "obj2"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vrorigin\">vrorigin</a></h1><p class=\"summary\">Returns a vector of an object\u2019s rotations.</p><p><code>vector vrorigin(string obj1, string obj2)</code></p>\n\n\n\n<p>This function will return a vector containing the rotates required to\ntransform obj1 to the space of obj2.</p>\n<p>This can also be thought of as the orientation of obj2 relative to\nobj1.</p>\n<p>If the empty string (\"\") is specified for either obj1 or obj2, then the\nidentity transform will be used instead.  For example, if obj1 is the\nempty string, then the world space rotation of obj2 is returned.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/origin\">origin()</a><div class=\"related-summary\">Returns components of an object\u2019s transforms.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vorigin\">vorigin()</a><div class=\"related-summary\">Returns a vector of an objects' transforms.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vtorigin\">vtorigin()</a><div class=\"related-summary\">Returns a vector of an object\u2019s translations.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/originoffset\">originoffset()</a><div class=\"related-summary\">Returns components of an object\u2019s offset transforms.</div></p></div>",
        "return": "vector"
    },
    "vscale": {
        "argnames": [
            "vec",
            "scale"
        ],
        "args": [
            "vector",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vscale\">vscale</a></h1><p class=\"summary\">Multiplies a vector by a scaling factor.</p><p><code>vector vscale(vector vec, float scale)</code></p>\n\n\n\n<p>A.K.A <code><code>vex</code> * <code>scale</code></code>.    </p>\n\n</div>",
        "return": "vector"
    },
    "vset": {
        "argnames": [
            "size",
            "value"
        ],
        "args": [
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vset\">vset</a></h1><p class=\"summary\">Creates a vector with each component set to the same value.</p><p><code>vector vset(float size, float value)</code></p>\n\n\n\n<p>Returns a vector of size <code>size</code>, with each component set to <code>value</code>.</p>\n\n</div>",
        "return": "vector"
    },
    "vsize": {
        "argnames": [
            "vec"
        ],
        "args": [
            "vector"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vsize\">vsize</a></h1><p class=\"summary\">Returns the number of elements in a vector.</p><p><code>float vsize(vector vec)</code></p>\n\n\n\n\n</div>",
        "return": "float"
    },
    "vtorigin": {
        "argnames": [
            "obj1",
            "obj2"
        ],
        "args": [
            "string",
            "string"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/vtorigin\">vtorigin</a></h1><p class=\"summary\">Returns a vector of an object\u2019s translations.</p><p><code>vector vtorigin(string obj1, string obj2)</code></p>\n\n\n\n<p>This function will return a vector containing the translates required\nto transform obj1 to the space of obj2.</p>\n<p>This can also be thought of as the position of obj2 relative to obj1.</p>\n<p>If the empty string (\"\") is specified for either obj1 or obj2, then the\nidentity transform will be used instead.  For example, if obj1 is the\nempty string, then the world space position of obj2 is returned.</p>\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/origin\">origin()</a><div class=\"related-summary\">Returns components of an object\u2019s transforms.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vorigin\">vorigin()</a><div class=\"related-summary\">Returns a vector of an objects' transforms.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/vrorigin\">vrorigin()</a><div class=\"related-summary\">Returns a vector of an object\u2019s rotations.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/originoffset\">originoffset()</a><div class=\"related-summary\">Returns components of an object\u2019s offset transforms.</div></p></div>",
        "return": "vector"
    },
    "wrap": {
        "argnames": [
            "value",
            "minimum",
            "maximum"
        ],
        "args": [
            "float",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/wrap\">wrap</a></h1><p class=\"summary\">Wraps a value between a minimum and maximum.</p><p><code>float wrap(float value, float minimum, float maximum)</code></p>\n\n\n\n<p>Similar to the clamp expression in that the resulting value will always\nfall between the specified minimum and maximum value. It will, however,\ncreate a sawtooth wave for continuously increasing or decreasing values\nof the value.</p>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nwrap ($F, 5, 10)\n\n</div>\n<p>Creates a sawtooth function between 5 and 10.</p>\n</div>\n\n\n</div>",
        "return": "float"
    },
    "xyzdist": {
        "argnames": [
            "x",
            "y",
            "z",
            "surface_node",
            "prim_num",
            "return_type"
        ],
        "args": [
            "float",
            "float",
            "float",
            "string",
            "float",
            "float"
        ],
        "help": "<div id=\"helpcard\"><h1><a href=\"https://www.sidefx.com/docs/houdini/expressions/xyzdist\">xyzdist</a></h1><p class=\"summary\">Returns the distance between a 3D coordinate and a primitive.</p><p><code>float xyzdist(float x, float y, float z, string surface_node, float prim_num, float return_type)</code></p>\n\n\n\n<p>If the <code>prim_num</code> is -1, finds the closest distance to any\nprimitive in the surface node.</p>\n<ul class=\"bullets\">\n<li class=\"bullet \">\nreturn_type = 0 returns the minimum distance.\n</li>\n<li class=\"bullet \">\nreturn_type = 1 returns the u parametric value at the point of minimum\n  distance.\n</li>\n<li class=\"bullet \">\nreturn_type = 2 returns the v parametric value at the point of minimum\n  distance.\n</li>\n<li class=\"bullet \">\nreturn_type = 3 returns the primitive number that was closest.\n</li>\n</ul>\n\n<h2 class=\"label section\" id=\"examples\">\n            \n            Examples\n        </h2>\n<div class=\"content\" id=\"examples-body\">\n<div class=\"code-container\">\nxyzdist(1, 2, 3, \"/obj/geo1/grid1\", 0, 0)\n\n</div>\n<p>Returns the distance between (1, 2, 3) and the closest spot from the\n    surface of grid1 primitive number 0. If the return_type were 1, the\n    u parametric value that is closest to the point would be returned.</p>\n</div>\n\n\n<h2>See also</h2><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/primdist\">primdist()</a><div class=\"related-summary\">Returns the minimum distance and closest points between two primitives.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/nearpoint\">nearpoint()</a><div class=\"related-summary\">Finds the point in a geometry nearest to specific 3D coordinates.</div></p><p><a href=\"https://www.sidefx.com/docs/houdini/expressions/https://www.sidefx.com/docs/houdini/expressions/pointdist\">pointdist()</a><div class=\"related-summary\">Returns the distance between a point and a primitive.</div></p></div>",
        "return": "float"
    }
}